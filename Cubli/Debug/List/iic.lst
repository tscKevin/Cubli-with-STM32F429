###############################################################################
#
# IAR ANSI C/C++ Compiler V8.40.2.214/W32 for ARM         06/Aug/2021  00:28:40
# Copyright 1999-2019 IAR Systems AB.
#
#    Cpu mode     =  
#    Endian       =  little
#    Source file  =  E:\STM32Project\Cubli-with-STM32F429\Cubli\User\src\iic.c
#    Command line =
#        -f C:\Users\LABPC1~1\AppData\Local\Temp\EW487F.tmp
#        (E:\STM32Project\Cubli-with-STM32F429\Cubli\User\src\iic.c -D
#        USE_STDPERIPH_DRIVER -D STM32F429_439xx -lC
#        E:\STM32Project\Cubli-with-STM32F429\Cubli\Debug\List -o
#        E:\STM32Project\Cubli-with-STM32F429\Cubli\Debug\Obj --no_cse
#        --no_unroll --no_inline --no_code_motion --no_tbaa --no_clustering
#        --no_scheduling --debug --endian=little --cpu=Cortex-M4 -e --fpu=None
#        --dlib_config "D:\IAR Systems\Embedded Workbench
#        8.3\arm\inc\c\DLib_Config_Normal.h" -I
#        E:\STM32Project\Cubli-with-STM32F429\Cubli\..\STM32F4xx_DSP_StdPeriph_Lib_V1.8.0\Libraries\CMSIS\Device\ST\STM32F4xx\Include\
#        -I
#        E:\STM32Project\Cubli-with-STM32F429\Cubli\..\STM32F4xx_DSP_StdPeriph_Lib_V1.8.0\Libraries\CMSIS\Device\ST\STM32F4xx\Source\Templates\
#        -I
#        E:\STM32Project\Cubli-with-STM32F429\Cubli\..\STM32F4xx_DSP_StdPeriph_Lib_V1.8.0\Libraries\CMSIS\Device\ST\STM32F4xx\Source\Templates\iar\
#        -I
#        E:\STM32Project\Cubli-with-STM32F429\Cubli\..\STM32F4xx_DSP_StdPeriph_Lib_V1.8.0\Libraries\STM32F4xx_StdPeriph_Driver\inc\
#        -I
#        E:\STM32Project\Cubli-with-STM32F429\Cubli\..\STM32F4xx_DSP_StdPeriph_Lib_V1.8.0\Libraries\STM32F4xx_StdPeriph_Driver\src\
#        -I E:\STM32Project\Cubli-with-STM32F429\Cubli\user\inc\ -I
#        E:\STM32Project\Cubli-with-STM32F429\Cubli\user\src\ -Ol
#        --use_c++_inline -I "D:\IAR Systems\Embedded Workbench
#        8.3\arm\CMSIS\Core\Include\" -I "D:\IAR Systems\Embedded Workbench
#        8.3\arm\CMSIS\DSP\Include\")
#    Locale       =  C
#    List file    =
#        E:\STM32Project\Cubli-with-STM32F429\Cubli\Debug\List\iic.lst
#    Object file  =  E:\STM32Project\Cubli-with-STM32F429\Cubli\Debug\Obj\iic.o
#
###############################################################################

E:\STM32Project\Cubli-with-STM32F429\Cubli\User\src\iic.c
      1          #include "iic.h"

   \                                 In section .text, align 2, keep-with-next
      2          void IIC_GPIO_Init(void){
   \                     IIC_GPIO_Init: (+1)
   \        0x0   0xB51C             PUSH     {R2-R4,LR}
      3              GPIO_InitTypeDef iic_gpio;
      4              RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIO_Port,ENABLE);
   \        0x2   0x2101             MOVS     R1,#+1
   \        0x4   0x2002             MOVS     R0,#+2
   \        0x6   0x....'....        BL       RCC_AHB1PeriphClockCmd
      5              iic_gpio.GPIO_Pin = SCL_Pin | SDA_Pin;
   \        0xA   0x2003             MOVS     R0,#+3
   \        0xC   0x9000             STR      R0,[SP, #+0]
      6              iic_gpio.GPIO_Mode = GPIO_Mode_OUT;
   \        0xE   0x2001             MOVS     R0,#+1
   \       0x10   0xF88D 0x0004      STRB     R0,[SP, #+4]
      7              iic_gpio.GPIO_OType = GPIO_OType_PP;
   \       0x14   0x2000             MOVS     R0,#+0
   \       0x16   0xF88D 0x0006      STRB     R0,[SP, #+6]
      8              iic_gpio.GPIO_PuPd = GPIO_PuPd_UP;
   \       0x1A   0x2001             MOVS     R0,#+1
   \       0x1C   0xF88D 0x0007      STRB     R0,[SP, #+7]
      9              iic_gpio.GPIO_Speed = GPIO_Speed_50MHz;
   \       0x20   0x2002             MOVS     R0,#+2
   \       0x22   0xF88D 0x0005      STRB     R0,[SP, #+5]
     10              GPIO_Init(GPIOB,&iic_gpio);
   \       0x26   0x....             LDR.N    R4,??DataTable9  ;; 0x40020400
   \       0x28   0x4669             MOV      R1,SP
   \       0x2A   0x0020             MOVS     R0,R4
   \       0x2C   0x....'....        BL       GPIO_Init
     11              SCL_HIGH;
   \       0x30   0x2101             MOVS     R1,#+1
   \       0x32   0x0020             MOVS     R0,R4
   \       0x34   0x....'....        BL       GPIO_SetBits
     12              SDA_HIGH;
   \       0x38   0x2102             MOVS     R1,#+2
   \       0x3A   0x0020             MOVS     R0,R4
   \       0x3C   0x....'....        BL       GPIO_SetBits
     13          }
   \       0x40   0xBD13             POP      {R0,R1,R4,PC}    ;; return

   \                                 In section .text, align 2, keep-with-next
     14          void IIC_Delay(u32 num){
     15              while (num--);
   \                     IIC_Delay: (+1)
   \                     ??IIC_Delay_0: (+1)
   \        0x0   0x0001             MOVS     R1,R0
   \        0x2   0x1E48             SUBS     R0,R1,#+1
   \        0x4   0x2900             CMP      R1,#+0
   \        0x6   0xD1FB             BNE.N    ??IIC_Delay_0
     16          }
   \        0x8   0x4770             BX       LR               ;; return

   \                                 In section .text, align 2, keep-with-next
     17          void SDA_OUT(void){
   \                     SDA_OUT: (+1)
   \        0x0   0xB5E0             PUSH     {R5-R7,LR}
     18              GPIO_InitTypeDef iic_gpio;
     19              iic_gpio.GPIO_Pin = SDA_Pin;
   \        0x2   0x2002             MOVS     R0,#+2
   \        0x4   0x9000             STR      R0,[SP, #+0]
     20              iic_gpio.GPIO_PuPd = GPIO_PuPd_UP;
   \        0x6   0x2001             MOVS     R0,#+1
   \        0x8   0xF88D 0x0007      STRB     R0,[SP, #+7]
     21              iic_gpio.GPIO_Mode = GPIO_Mode_OUT;
   \        0xC   0x2001             MOVS     R0,#+1
   \        0xE   0xF88D 0x0004      STRB     R0,[SP, #+4]
     22              iic_gpio.GPIO_OType = GPIO_OType_PP;
   \       0x12   0x2000             MOVS     R0,#+0
   \       0x14   0xF88D 0x0006      STRB     R0,[SP, #+6]
     23              iic_gpio.GPIO_Speed = GPIO_Speed_50MHz;
   \       0x18   0x2002             MOVS     R0,#+2
   \       0x1A   0xF88D 0x0005      STRB     R0,[SP, #+5]
     24              GPIO_Init(GPIOB,&iic_gpio);
   \       0x1E   0x4669             MOV      R1,SP
   \       0x20   0x....             LDR.N    R0,??DataTable9  ;; 0x40020400
   \       0x22   0x....'....        BL       GPIO_Init
     25          }
   \       0x26   0xBD07             POP      {R0-R2,PC}       ;; return

   \                                 In section .text, align 2, keep-with-next
     26          void SDA_IN(void){
   \                     SDA_IN: (+1)
   \        0x0   0xB5E0             PUSH     {R5-R7,LR}
     27              GPIO_InitTypeDef iic_gpio;
     28              iic_gpio.GPIO_Pin = SDA_Pin;
   \        0x2   0x2002             MOVS     R0,#+2
   \        0x4   0x9000             STR      R0,[SP, #+0]
     29              iic_gpio.GPIO_PuPd = GPIO_PuPd_UP;
   \        0x6   0x2001             MOVS     R0,#+1
   \        0x8   0xF88D 0x0007      STRB     R0,[SP, #+7]
     30              iic_gpio.GPIO_Mode = GPIO_Mode_IN;
   \        0xC   0x2000             MOVS     R0,#+0
   \        0xE   0xF88D 0x0004      STRB     R0,[SP, #+4]
     31              iic_gpio.GPIO_OType = GPIO_OType_PP;
   \       0x12   0x2000             MOVS     R0,#+0
   \       0x14   0xF88D 0x0006      STRB     R0,[SP, #+6]
     32              iic_gpio.GPIO_Speed = GPIO_Speed_50MHz;
   \       0x18   0x2002             MOVS     R0,#+2
   \       0x1A   0xF88D 0x0005      STRB     R0,[SP, #+5]
     33              GPIO_Init(GPIOB,&iic_gpio);
   \       0x1E   0x4669             MOV      R1,SP
   \       0x20   0x....             LDR.N    R0,??DataTable9  ;; 0x40020400
   \       0x22   0x....'....        BL       GPIO_Init
     34          }
   \       0x26   0xBD07             POP      {R0-R2,PC}       ;; return

   \                                 In section .text, align 2, keep-with-next
     35          void IIC_Start(void){
   \                     IIC_Start: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
     36              SDA_OUT();
   \        0x2   0x....'....        BL       SDA_OUT
     37              GPIO_SetBits(SCL_Port,SCL_Pin);
   \        0x6   0x....             LDR.N    R4,??DataTable9  ;; 0x40020400
   \        0x8   0x2101             MOVS     R1,#+1
   \        0xA   0x0020             MOVS     R0,R4
   \        0xC   0x....'....        BL       GPIO_SetBits
     38              GPIO_SetBits(SDA_Port,SDA_Pin);
   \       0x10   0x2102             MOVS     R1,#+2
   \       0x12   0x0020             MOVS     R0,R4
   \       0x14   0x....'....        BL       GPIO_SetBits
     39              IIC_Delay(5);
   \       0x18   0x2005             MOVS     R0,#+5
   \       0x1A   0x....'....        BL       IIC_Delay
     40              GPIO_ResetBits(SDA_Port,SDA_Pin);
   \       0x1E   0x2102             MOVS     R1,#+2
   \       0x20   0x0020             MOVS     R0,R4
   \       0x22   0x....'....        BL       GPIO_ResetBits
     41              IIC_Delay(5);
   \       0x26   0x2005             MOVS     R0,#+5
   \       0x28   0x....'....        BL       IIC_Delay
     42              GPIO_ResetBits(SCL_Port,SCL_Pin);
   \       0x2C   0x2101             MOVS     R1,#+1
   \       0x2E   0x0020             MOVS     R0,R4
   \       0x30   0x....'....        BL       GPIO_ResetBits
     43          }
   \       0x34   0xBD10             POP      {R4,PC}          ;; return

   \                                 In section .text, align 2, keep-with-next
     44          void IIC_Stop(void){
   \                     IIC_Stop: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
     45              SDA_OUT();
   \        0x2   0x....'....        BL       SDA_OUT
     46              SCL_LOW;
   \        0x6   0x....             LDR.N    R4,??DataTable9  ;; 0x40020400
   \        0x8   0x2101             MOVS     R1,#+1
   \        0xA   0x0020             MOVS     R0,R4
   \        0xC   0x....'....        BL       GPIO_ResetBits
     47              SDA_LOW;
   \       0x10   0x2102             MOVS     R1,#+2
   \       0x12   0x0020             MOVS     R0,R4
   \       0x14   0x....'....        BL       GPIO_ResetBits
     48              IIC_Delay(5);
   \       0x18   0x2005             MOVS     R0,#+5
   \       0x1A   0x....'....        BL       IIC_Delay
     49              
     50              SCL_HIGH;
   \       0x1E   0x2101             MOVS     R1,#+1
   \       0x20   0x0020             MOVS     R0,R4
   \       0x22   0x....'....        BL       GPIO_SetBits
     51              SDA_HIGH;
   \       0x26   0x2102             MOVS     R1,#+2
   \       0x28   0x0020             MOVS     R0,R4
   \       0x2A   0x....'....        BL       GPIO_SetBits
     52              IIC_Delay(5);
   \       0x2E   0x2005             MOVS     R0,#+5
   \       0x30   0x....'....        BL       IIC_Delay
     53          }
   \       0x34   0xBD10             POP      {R4,PC}          ;; return

   \                                 In section .text, align 2, keep-with-next
     54          u8 IIC_Wait_Ack(void){
   \                     IIC_Wait_Ack: (+1)
   \        0x0   0xB538             PUSH     {R3-R5,LR}
     55          	u8 ucErrTime=0; 
   \        0x2   0x2400             MOVS     R4,#+0
     56          	SDA_IN();
   \        0x4   0x....'....        BL       SDA_IN
     57          	SDA_HIGH;
   \        0x8   0x....             LDR.N    R5,??DataTable9  ;; 0x40020400
   \        0xA   0x2102             MOVS     R1,#+2
   \        0xC   0x0028             MOVS     R0,R5
   \        0xE   0x....'....        BL       GPIO_SetBits
     58              IIC_Delay(5);	  
   \       0x12   0x2005             MOVS     R0,#+5
   \       0x14   0x....'....        BL       IIC_Delay
   \       0x18   0xE002             B.N      ??IIC_Wait_Ack_0
     59          	while(SDA_READ){
     60          		ucErrTime++;
     61          		if(ucErrTime>50){
     62          			IIC_Stop();
     63          			return 1;
     64          		}
     65                  IIC_Delay(5);
   \                     ??IIC_Wait_Ack_1: (+1)
   \       0x1A   0x2005             MOVS     R0,#+5
   \       0x1C   0x....'....        BL       IIC_Delay
   \                     ??IIC_Wait_Ack_0: (+1)
   \       0x20   0x....             LDR.N    R0,??DataTable9_1  ;; 0x40020410
   \       0x22   0x6800             LDR      R0,[R0, #+0]
   \       0x24   0x0780             LSLS     R0,R0,#+30
   \       0x26   0xD508             BPL.N    ??IIC_Wait_Ack_2
   \       0x28   0x1C64             ADDS     R4,R4,#+1
   \       0x2A   0x0020             MOVS     R0,R4
   \       0x2C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \       0x2E   0x2833             CMP      R0,#+51
   \       0x30   0xDBF3             BLT.N    ??IIC_Wait_Ack_1
   \       0x32   0x....'....        BL       IIC_Stop
   \       0x36   0x2001             MOVS     R0,#+1
   \       0x38   0xE00B             B.N      ??IIC_Wait_Ack_3
     66          	}  
     67          	SCL_HIGH;
   \                     ??IIC_Wait_Ack_2: (+1)
   \       0x3A   0x2101             MOVS     R1,#+1
   \       0x3C   0x0028             MOVS     R0,R5
   \       0x3E   0x....'....        BL       GPIO_SetBits
     68              IIC_Delay(5);
   \       0x42   0x2005             MOVS     R0,#+5
   \       0x44   0x....'....        BL       IIC_Delay
     69          	SCL_LOW;  
   \       0x48   0x2101             MOVS     R1,#+1
   \       0x4A   0x0028             MOVS     R0,R5
   \       0x4C   0x....'....        BL       GPIO_ResetBits
     70          	return 0;  
   \       0x50   0x2000             MOVS     R0,#+0
   \                     ??IIC_Wait_Ack_3: (+1)
   \       0x52   0xBD32             POP      {R1,R4,R5,PC}    ;; return
     71          }

   \                                 In section .text, align 2, keep-with-next
     72          void IIC_Ack(void){
   \                     IIC_Ack: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
     73              SCL_LOW;
   \        0x2   0x....             LDR.N    R4,??DataTable9  ;; 0x40020400
   \        0x4   0x2101             MOVS     R1,#+1
   \        0x6   0x0020             MOVS     R0,R4
   \        0x8   0x....'....        BL       GPIO_ResetBits
     74              SDA_OUT();
   \        0xC   0x....'....        BL       SDA_OUT
     75              SDA_LOW;
   \       0x10   0x2102             MOVS     R1,#+2
   \       0x12   0x0020             MOVS     R0,R4
   \       0x14   0x....'....        BL       GPIO_ResetBits
     76              
     77              IIC_Delay(5);
   \       0x18   0x2005             MOVS     R0,#+5
   \       0x1A   0x....'....        BL       IIC_Delay
     78              SCL_HIGH;
   \       0x1E   0x2101             MOVS     R1,#+1
   \       0x20   0x0020             MOVS     R0,R4
   \       0x22   0x....'....        BL       GPIO_SetBits
     79              
     80              IIC_Delay(5);
   \       0x26   0x2005             MOVS     R0,#+5
   \       0x28   0x....'....        BL       IIC_Delay
     81              SCL_LOW;
   \       0x2C   0x2101             MOVS     R1,#+1
   \       0x2E   0x0020             MOVS     R0,R4
   \       0x30   0x....'....        BL       GPIO_ResetBits
     82          }
   \       0x34   0xBD10             POP      {R4,PC}          ;; return

   \                                 In section .text, align 2, keep-with-next
     83          void IIC_NAck(void){
   \                     IIC_NAck: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
     84              SCL_LOW;
   \        0x2   0x....             LDR.N    R4,??DataTable9  ;; 0x40020400
   \        0x4   0x2101             MOVS     R1,#+1
   \        0x6   0x0020             MOVS     R0,R4
   \        0x8   0x....'....        BL       GPIO_ResetBits
     85              SDA_OUT();
   \        0xC   0x....'....        BL       SDA_OUT
     86              SDA_HIGH;
   \       0x10   0x2102             MOVS     R1,#+2
   \       0x12   0x0020             MOVS     R0,R4
   \       0x14   0x....'....        BL       GPIO_SetBits
     87              
     88              IIC_Delay(5);
   \       0x18   0x2005             MOVS     R0,#+5
   \       0x1A   0x....'....        BL       IIC_Delay
     89              SCL_HIGH;
   \       0x1E   0x2101             MOVS     R1,#+1
   \       0x20   0x0020             MOVS     R0,R4
   \       0x22   0x....'....        BL       GPIO_SetBits
     90              
     91              IIC_Delay(5);
   \       0x26   0x2005             MOVS     R0,#+5
   \       0x28   0x....'....        BL       IIC_Delay
     92              SCL_LOW;
   \       0x2C   0x2101             MOVS     R1,#+1
   \       0x2E   0x0020             MOVS     R0,R4
   \       0x30   0x....'....        BL       GPIO_ResetBits
     93          }
   \       0x34   0xBD10             POP      {R4,PC}          ;; return

   \                                 In section .text, align 2, keep-with-next
     94          void IIC_Send_Byte(u8 msg){
   \                     IIC_Send_Byte: (+1)
   \        0x0   0xB570             PUSH     {R4-R6,LR}
   \        0x2   0x0004             MOVS     R4,R0
     95              u8 i;
     96              SDA_OUT();
   \        0x4   0x....'....        BL       SDA_OUT
     97              SCL_LOW;
   \        0x8   0x....             LDR.N    R6,??DataTable9  ;; 0x40020400
   \        0xA   0x2101             MOVS     R1,#+1
   \        0xC   0x0030             MOVS     R0,R6
   \        0xE   0x....'....        BL       GPIO_ResetBits
     98              for(i=0;i<8;i++){
   \       0x12   0x2500             MOVS     R5,#+0
   \       0x14   0xE01D             B.N      ??IIC_Send_Byte_0
     99                  if (msg & 0x80){
    100                      SDA_HIGH;
    101                  }else{
    102                      SDA_LOW;
   \                     ??IIC_Send_Byte_1: (+1)
   \       0x16   0x2102             MOVS     R1,#+2
   \       0x18   0x0030             MOVS     R0,R6
   \       0x1A   0x....'....        BL       GPIO_ResetBits
   \       0x1E   0xE005             B.N      ??IIC_Send_Byte_2
    103                  }
   \                     ??IIC_Send_Byte_3: (+1)
   \       0x20   0x0620             LSLS     R0,R4,#+24
   \       0x22   0xD5F8             BPL.N    ??IIC_Send_Byte_1
   \       0x24   0x2102             MOVS     R1,#+2
   \       0x26   0x0030             MOVS     R0,R6
   \       0x28   0x....'....        BL       GPIO_SetBits
    104                  msg<<=1;
   \                     ??IIC_Send_Byte_2: (+1)
   \       0x2C   0x0064             LSLS     R4,R4,#+1
    105                  IIC_Delay(2);
   \       0x2E   0x2002             MOVS     R0,#+2
   \       0x30   0x....'....        BL       IIC_Delay
    106                  SCL_HIGH;
   \       0x34   0x2101             MOVS     R1,#+1
   \       0x36   0x0030             MOVS     R0,R6
   \       0x38   0x....'....        BL       GPIO_SetBits
    107                  IIC_Delay(5);
   \       0x3C   0x2005             MOVS     R0,#+5
   \       0x3E   0x....'....        BL       IIC_Delay
    108                  SCL_LOW;
   \       0x42   0x2101             MOVS     R1,#+1
   \       0x44   0x0030             MOVS     R0,R6
   \       0x46   0x....'....        BL       GPIO_ResetBits
    109                  IIC_Delay(3);
   \       0x4A   0x2003             MOVS     R0,#+3
   \       0x4C   0x....'....        BL       IIC_Delay
    110              }
   \       0x50   0x1C6D             ADDS     R5,R5,#+1
   \                     ??IIC_Send_Byte_0: (+1)
   \       0x52   0x0028             MOVS     R0,R5
   \       0x54   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \       0x56   0x2808             CMP      R0,#+8
   \       0x58   0xDBE2             BLT.N    ??IIC_Send_Byte_3
    111          }
   \                     ??IIC_Send_Byte_4: (+1)
   \       0x5A   0xBD70             POP      {R4-R6,PC}       ;; return

   \                                 In section .text, align 2, keep-with-next
    112          u8 IIC_Read_Byte(u8 ack){
   \                     IIC_Read_Byte: (+1)
   \        0x0   0xB5F8             PUSH     {R3-R7,LR}
   \        0x2   0x0004             MOVS     R4,R0
    113              u8 i=0, data=0;
   \        0x4   0x2000             MOVS     R0,#+0
   \        0x6   0x2600             MOVS     R6,#+0
    114              SDA_IN();
   \        0x8   0x....'....        BL       SDA_IN
    115              for(i=0;i<8;i++){
   \        0xC   0x2500             MOVS     R5,#+0
   \        0xE   0xE016             B.N      ??IIC_Read_Byte_0
    116                  SCL_LOW;
   \                     ??IIC_Read_Byte_1: (+1)
   \       0x10   0x....             LDR.N    R7,??DataTable9  ;; 0x40020400
   \       0x12   0x2101             MOVS     R1,#+1
   \       0x14   0x0038             MOVS     R0,R7
   \       0x16   0x....'....        BL       GPIO_ResetBits
    117                  IIC_Delay(5);
   \       0x1A   0x2005             MOVS     R0,#+5
   \       0x1C   0x....'....        BL       IIC_Delay
    118                  SCL_HIGH;
   \       0x20   0x2101             MOVS     R1,#+1
   \       0x22   0x0038             MOVS     R0,R7
   \       0x24   0x....'....        BL       GPIO_SetBits
    119                  data <<=1;
   \       0x28   0x0076             LSLS     R6,R6,#+1
    120                  data |= SDA_READ;
   \       0x2A   0x....             LDR.N    R0,??DataTable9_1  ;; 0x40020410
   \       0x2C   0x6800             LDR      R0,[R0, #+0]
   \       0x2E   0x0840             LSRS     R0,R0,#+1
   \       0x30   0xF010 0x0001      ANDS     R0,R0,#0x1
   \       0x34   0x4306             ORRS     R6,R0,R6
    121                  IIC_Delay(5);
   \       0x36   0x2005             MOVS     R0,#+5
   \       0x38   0x....'....        BL       IIC_Delay
    122              }			 
   \       0x3C   0x1C6D             ADDS     R5,R5,#+1
   \                     ??IIC_Read_Byte_0: (+1)
   \       0x3E   0x0028             MOVS     R0,R5
   \       0x40   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \       0x42   0x2808             CMP      R0,#+8
   \       0x44   0xDBE4             BLT.N    ??IIC_Read_Byte_1
    123              if (ack)
   \       0x46   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \       0x48   0x2C00             CMP      R4,#+0
   \       0x4A   0xD002             BEQ.N    ??IIC_Read_Byte_2
    124                  IIC_Ack();
   \       0x4C   0x....'....        BL       IIC_Ack
   \       0x50   0xE001             B.N      ??IIC_Read_Byte_3
    125              else
    126                  IIC_NAck();
   \                     ??IIC_Read_Byte_2: (+1)
   \       0x52   0x....'....        BL       IIC_NAck
    127              return data;
   \                     ??IIC_Read_Byte_3: (+1)
   \       0x56   0x0030             MOVS     R0,R6
   \       0x58   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \       0x5A   0xBDF2             POP      {R1,R4-R7,PC}    ;; return
    128          }

   \                                 In section .text, align 2, keep-with-next
    129          void IIC_Send(u8 slaveAddr, u8 regAddr, u8 msg){
   \                     IIC_Send: (+1)
   \        0x0   0xB570             PUSH     {R4-R6,LR}
   \        0x2   0x0004             MOVS     R4,R0
   \        0x4   0x000D             MOVS     R5,R1
   \        0x6   0x0016             MOVS     R6,R2
    130              IIC_Start();
   \        0x8   0x....'....        BL       IIC_Start
    131              IIC_Send_Byte(slaveAddr);
   \        0xC   0x0020             MOVS     R0,R4
   \        0xE   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \       0x10   0x....'....        BL       IIC_Send_Byte
    132              IIC_Wait_Ack();
   \       0x14   0x....'....        BL       IIC_Wait_Ack
    133              IIC_Send_Byte(regAddr);
   \       0x18   0x0028             MOVS     R0,R5
   \       0x1A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \       0x1C   0x....'....        BL       IIC_Send_Byte
    134              IIC_Wait_Ack();
   \       0x20   0x....'....        BL       IIC_Wait_Ack
    135              IIC_Send_Byte(msg);
   \       0x24   0x0030             MOVS     R0,R6
   \       0x26   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \       0x28   0x....'....        BL       IIC_Send_Byte
    136              IIC_NAck();
   \       0x2C   0x....'....        BL       IIC_NAck
    137              IIC_Stop();
   \       0x30   0x....'....        BL       IIC_Stop
    138          }
   \       0x34   0xBD70             POP      {R4-R6,PC}       ;; return

   \                                 In section .text, align 2, keep-with-next
    139          u8 IIC_Read(u8 slaveAddr, u8 regAddr){
   \                     IIC_Read: (+1)
   \        0x0   0xB538             PUSH     {R3-R5,LR}
   \        0x2   0x0004             MOVS     R4,R0
   \        0x4   0x000D             MOVS     R5,R1
    140              u8 dataBuffer;
    141              IIC_Start();
   \        0x6   0x....'....        BL       IIC_Start
    142              IIC_Send_Byte(slaveAddr);
   \        0xA   0x0020             MOVS     R0,R4
   \        0xC   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \        0xE   0x....'....        BL       IIC_Send_Byte
    143              IIC_Wait_Ack();
   \       0x12   0x....'....        BL       IIC_Wait_Ack
    144              IIC_Send_Byte(regAddr);
   \       0x16   0x0028             MOVS     R0,R5
   \       0x18   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \       0x1A   0x....'....        BL       IIC_Send_Byte
    145              IIC_Wait_Ack();
   \       0x1E   0x....'....        BL       IIC_Wait_Ack
    146              IIC_Start();
   \       0x22   0x....'....        BL       IIC_Start
    147              IIC_Send_Byte(slaveAddr+1);
   \       0x26   0x1C64             ADDS     R4,R4,#+1
   \       0x28   0x0020             MOVS     R0,R4
   \       0x2A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \       0x2C   0x....'....        BL       IIC_Send_Byte
    148              IIC_Wait_Ack();
   \       0x30   0x....'....        BL       IIC_Wait_Ack
    149              dataBuffer = IIC_Read_Byte(0);
   \       0x34   0x2000             MOVS     R0,#+0
   \       0x36   0x....'....        BL       IIC_Read_Byte
   \       0x3A   0x0004             MOVS     R4,R0
    150              IIC_Stop();
   \       0x3C   0x....'....        BL       IIC_Stop
    151              return dataBuffer; 
   \       0x40   0x0020             MOVS     R0,R4
   \       0x42   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \       0x44   0xBD32             POP      {R1,R4,R5,PC}    ;; return
    152          }

   \                                 In section .text, align 2, keep-with-next
    153          s16 IIC_Read_Two_Byte(u8 slaveAddr, u8 regAddr){
   \                     IIC_Read_Two_Byte: (+1)
   \        0x0   0xB570             PUSH     {R4-R6,LR}
   \        0x2   0x0004             MOVS     R4,R0
   \        0x4   0x000D             MOVS     R5,R1
    154              u8 data_h = IIC_Read(slaveAddr, regAddr);
   \        0x6   0x0029             MOVS     R1,R5
   \        0x8   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \        0xA   0x0020             MOVS     R0,R4
   \        0xC   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \        0xE   0x....'....        BL       IIC_Read
   \       0x12   0x0006             MOVS     R6,R0
    155              u8 data_l = IIC_Read(slaveAddr, regAddr+1);
   \       0x14   0x1C6D             ADDS     R5,R5,#+1
   \       0x16   0x0029             MOVS     R1,R5
   \       0x18   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \       0x1A   0x0020             MOVS     R0,R4
   \       0x1C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \       0x1E   0x....'....        BL       IIC_Read
    156              return (data_h<<8)| data_l;
   \       0x22   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \       0x24   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \       0x26   0xEA50 0x2006      ORRS     R0,R0,R6, LSL #+8
   \       0x2A   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \       0x2C   0xBD70             POP      {R4-R6,PC}       ;; return
    157          }

   \                                 In section .text, align 2, keep-with-next
    158          void IIC_JY901_Read(u8 slaveAddr, u8 regAddr, u8 length, u8 *msg){
   \                     IIC_JY901_Read: (+1)
   \        0x0   0xB5F8             PUSH     {R3-R7,LR}
   \        0x2   0x0006             MOVS     R6,R0
   \        0x4   0x000F             MOVS     R7,R1
   \        0x6   0x0015             MOVS     R5,R2
   \        0x8   0x001C             MOVS     R4,R3
    159              u8 count = 0;
   \        0xA   0x2000             MOVS     R0,#+0
    160              IIC_Start();
   \        0xC   0x....'....        BL       IIC_Start
    161              IIC_Send_Byte(slaveAddr<<1);
   \       0x10   0x0070             LSLS     R0,R6,#+1
   \       0x12   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \       0x14   0x....'....        BL       IIC_Send_Byte
    162              IIC_Wait_Ack();
   \       0x18   0x....'....        BL       IIC_Wait_Ack
    163              IIC_Send_Byte(regAddr);
   \       0x1C   0x0038             MOVS     R0,R7
   \       0x1E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \       0x20   0x....'....        BL       IIC_Send_Byte
    164              IIC_Wait_Ack();
   \       0x24   0x....'....        BL       IIC_Wait_Ack
    165              IIC_Send_Byte((slaveAddr<<1)+1);
   \       0x28   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \       0x2A   0x0076             LSLS     R6,R6,#+1
   \       0x2C   0x1C76             ADDS     R6,R6,#+1
   \       0x2E   0x0030             MOVS     R0,R6
   \       0x30   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \       0x32   0x....'....        BL       IIC_Send_Byte
    166              IIC_Wait_Ack();
   \       0x36   0x....'....        BL       IIC_Wait_Ack
    167              for(count=0;count<length;count++){
   \       0x3A   0x2600             MOVS     R6,#+0
   \       0x3C   0xE014             B.N      ??IIC_JY901_Read_0
    168                  if(count!=length-1)msg[count]=IIC_Read_Byte(1);
    169                  else  msg[count]=IIC_Read_Byte(0);
   \                     ??IIC_JY901_Read_1: (+1)
   \       0x3E   0x2000             MOVS     R0,#+0
   \       0x40   0x....'....        BL       IIC_Read_Byte
   \       0x44   0x0031             MOVS     R1,R6
   \       0x46   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \       0x48   0x5460             STRB     R0,[R4, R1]
   \       0x4A   0xE00C             B.N      ??IIC_JY901_Read_2
   \                     ??IIC_JY901_Read_3: (+1)
   \       0x4C   0x0030             MOVS     R0,R6
   \       0x4E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \       0x50   0x0029             MOVS     R1,R5
   \       0x52   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \       0x54   0x1E49             SUBS     R1,R1,#+1
   \       0x56   0x4288             CMP      R0,R1
   \       0x58   0xD0F1             BEQ.N    ??IIC_JY901_Read_1
   \       0x5A   0x2001             MOVS     R0,#+1
   \       0x5C   0x....'....        BL       IIC_Read_Byte
   \       0x60   0x0031             MOVS     R1,R6
   \       0x62   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \       0x64   0x5460             STRB     R0,[R4, R1]
    170          	}
   \                     ??IIC_JY901_Read_2: (+1)
   \       0x66   0x1C76             ADDS     R6,R6,#+1
   \                     ??IIC_JY901_Read_0: (+1)
   \       0x68   0x0030             MOVS     R0,R6
   \       0x6A   0x0029             MOVS     R1,R5
   \       0x6C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \       0x6E   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \       0x70   0x4288             CMP      R0,R1
   \       0x72   0xD3EB             BCC.N    ??IIC_JY901_Read_3
    171              IIC_Stop();
   \                     ??IIC_JY901_Read_4: (+1)
   \       0x74   0x....'....        BL       IIC_Stop
    172          }
   \       0x78   0xBDF1             POP      {R0,R4-R7,PC}    ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9:
   \        0x0   0x4002'0400        DC32     0x40020400

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_1:
   \        0x0   0x4002'0410        DC32     0x40020410

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   IIC_Ack
         8   -> GPIO_ResetBits
         8   -> GPIO_SetBits
         8   -> IIC_Delay
         8   -> SDA_OUT
       0   IIC_Delay
      16   IIC_GPIO_Init
        16   -> GPIO_Init
        16   -> GPIO_SetBits
        16   -> RCC_AHB1PeriphClockCmd
      24   IIC_JY901_Read
        24   -> IIC_Read_Byte
        24   -> IIC_Send_Byte
        24   -> IIC_Start
        24   -> IIC_Stop
        24   -> IIC_Wait_Ack
       8   IIC_NAck
         8   -> GPIO_ResetBits
         8   -> GPIO_SetBits
         8   -> IIC_Delay
         8   -> SDA_OUT
      16   IIC_Read
        16   -> IIC_Read_Byte
        16   -> IIC_Send_Byte
        16   -> IIC_Start
        16   -> IIC_Stop
        16   -> IIC_Wait_Ack
      24   IIC_Read_Byte
        24   -> GPIO_ResetBits
        24   -> GPIO_SetBits
        24   -> IIC_Ack
        24   -> IIC_Delay
        24   -> IIC_NAck
        24   -> SDA_IN
      16   IIC_Read_Two_Byte
        16   -> IIC_Read
      16   IIC_Send
        16   -> IIC_NAck
        16   -> IIC_Send_Byte
        16   -> IIC_Start
        16   -> IIC_Stop
        16   -> IIC_Wait_Ack
      16   IIC_Send_Byte
        16   -> GPIO_ResetBits
        16   -> GPIO_SetBits
        16   -> IIC_Delay
        16   -> SDA_OUT
       8   IIC_Start
         8   -> GPIO_ResetBits
         8   -> GPIO_SetBits
         8   -> IIC_Delay
         8   -> SDA_OUT
       8   IIC_Stop
         8   -> GPIO_ResetBits
         8   -> GPIO_SetBits
         8   -> IIC_Delay
         8   -> SDA_OUT
      16   IIC_Wait_Ack
        16   -> GPIO_ResetBits
        16   -> GPIO_SetBits
        16   -> IIC_Delay
        16   -> IIC_Stop
        16   -> SDA_IN
      16   SDA_IN
        16   -> GPIO_Init
      16   SDA_OUT
        16   -> GPIO_Init


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable9
       4  ??DataTable9_1
      54  IIC_Ack
      10  IIC_Delay
      66  IIC_GPIO_Init
     122  IIC_JY901_Read
      54  IIC_NAck
      70  IIC_Read
      92  IIC_Read_Byte
      46  IIC_Read_Two_Byte
      54  IIC_Send
      92  IIC_Send_Byte
      54  IIC_Start
      54  IIC_Stop
      84  IIC_Wait_Ack
      40  SDA_IN
      40  SDA_OUT

 
 940 bytes in section .text
 
 940 bytes of CODE memory

Errors: none
Warnings: none
