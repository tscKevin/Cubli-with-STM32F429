###############################################################################
#
# IAR ANSI C/C++ Compiler V8.40.2.214/W32 for ARM         04/Jul/2021  01:14:48
# Copyright 1999-2019 IAR Systems AB.
#
#    Cpu mode     =  
#    Endian       =  little
#    Source file  =
#        E:\STM32Project\Cubli-with-STM32F429\Cubli\User\src\timer.c
#    Command line =
#        -f C:\Users\LABPC1~1\AppData\Local\Temp\EW31FA.tmp
#        (E:\STM32Project\Cubli-with-STM32F429\Cubli\User\src\timer.c -D
#        USE_STDPERIPH_DRIVER -D STM32F429_439xx -lC
#        E:\STM32Project\Cubli-with-STM32F429\Cubli\Debug\List -o
#        E:\STM32Project\Cubli-with-STM32F429\Cubli\Debug\Obj --no_cse
#        --no_unroll --no_inline --no_code_motion --no_tbaa --no_clustering
#        --no_scheduling --debug --endian=little --cpu=Cortex-M4 -e --fpu=None
#        --dlib_config "D:\IAR Systems\Embedded Workbench
#        8.3\arm\inc\c\DLib_Config_Normal.h" -I
#        E:\STM32Project\Cubli-with-STM32F429\Cubli\..\STM32F4xx_DSP_StdPeriph_Lib_V1.8.0\Libraries\CMSIS\Device\ST\STM32F4xx\Include\
#        -I
#        E:\STM32Project\Cubli-with-STM32F429\Cubli\..\STM32F4xx_DSP_StdPeriph_Lib_V1.8.0\Libraries\CMSIS\Device\ST\STM32F4xx\Source\Templates\
#        -I
#        E:\STM32Project\Cubli-with-STM32F429\Cubli\..\STM32F4xx_DSP_StdPeriph_Lib_V1.8.0\Libraries\CMSIS\Device\ST\STM32F4xx\Source\Templates\iar\
#        -I
#        E:\STM32Project\Cubli-with-STM32F429\Cubli\..\STM32F4xx_DSP_StdPeriph_Lib_V1.8.0\Libraries\STM32F4xx_StdPeriph_Driver\inc\
#        -I
#        E:\STM32Project\Cubli-with-STM32F429\Cubli\..\STM32F4xx_DSP_StdPeriph_Lib_V1.8.0\Libraries\STM32F4xx_StdPeriph_Driver\src\
#        -I E:\STM32Project\Cubli-with-STM32F429\Cubli\user\inc\ -I
#        E:\STM32Project\Cubli-with-STM32F429\Cubli\user\src\ -Ol
#        --use_c++_inline -I "D:\IAR Systems\Embedded Workbench
#        8.3\arm\CMSIS\Core\Include\" -I "D:\IAR Systems\Embedded Workbench
#        8.3\arm\CMSIS\DSP\Include\")
#    Locale       =  C
#    List file    =
#        E:\STM32Project\Cubli-with-STM32F429\Cubli\Debug\List\timer.lst
#    Object file  =
#        E:\STM32Project\Cubli-with-STM32F429\Cubli\Debug\Obj\timer.o
#
###############################################################################

E:\STM32Project\Cubli-with-STM32F429\Cubli\User\src\timer.c
      1          #include "timer.h"
      2          

   \                                 In section .bss, align 4
      3          uint32_t running_tim_cnt = 0;
   \                     running_tim_cnt:
   \        0x0                      DS8 4
      4          

   \                                 In section .data, align 4
      5          int Max_Pwm = 8300;
   \                     Max_Pwm:
   \        0x0   0x0000'206C        DC32 8'300

   \                                 In section .bss, align 4
      6          int flag_stop = 0;
   \                     flag_stop:
   \        0x0                      DS8 4

   \                                 In section .bss, align 4
      7          int nvic_flag=0;
   \                     nvic_flag:
   \        0x0                      DS8 4

   \                                 In section .bss, align 4
      8          int jump_state=0;
   \                     jump_state:
   \        0x0                      DS8 4
      9          

   \                                 In section .data, align 4
     10          float rol_angle_targer=-2.0;//-1.3;
   \                     rol_angle_targer:
   \        0x0   0xC000'0000        DC32 0xc000'0000

   \                                 In section .data, align 4
     11          float rol_angle_offset_r=15;//-33.0+45;
   \                     rol_angle_offset_r:
   \        0x0   0x4170'0000        DC32 0x4170'0000

   \                                 In section .data, align 4
     12          float rol_angle_offset_l=-15;//-63.0+45;
   \                     rol_angle_offset_l:
   \        0x0   0xC170'0000        DC32 0xc170'0000
     13          

   \                                 In section .data, align 4
     14          float pit_angle_targer=1.4;//-45.7;////1.8;//-53.45;
   \                     pit_angle_targer:
   \        0x0   0x3FB3'3333        DC32 0x3fb3'3333

   \                                 In section .data, align 4
     15          float pit_angle_offset_r=15;//-38.45;
   \                     pit_angle_offset_r:
   \        0x0   0x4170'0000        DC32 0x4170'0000

   \                                 In section .data, align 4
     16          float pit_angle_offset_l=-15;//-68.45;
   \                     pit_angle_offset_l:
   \        0x0   0xC170'0000        DC32 0xc170'0000
     17          

   \                                 In section .bss, align 4
     18          float yaw_angle_targer=0;
   \                     yaw_angle_targer:
   \        0x0                      DS8 4
     19          //11 0.035 874 6.7 0.5 2
     20          //80 0.035 870 6.5 300 90
     21          //140 0.35 1850 0.025 350 90
     22          // 60 0.03 1250 210.7 055 09
     23          // 60 0.03 1100 351.7 20.25 5
     24          // 60 0.03 1200 225.7 50.5 10.9
     25          /*
     26          float Velocity_KP = 60;
     27          float Velocity_KI = 0.03;
     28          float Balance_KP = 1360;
     29          float Balance_KD = 210.7;
     30          float Gryo_KP = 50.5;
     31          float Gryo_KD = 10.9;
     32          //float Balance_KP = 1150;
     33          ////float Balance_KI = 0;
     34          //float Balance_KD = 350.7;
     35          //float Gryo_KP = 0.55;
     36          //float Gryo_KD = 0.9;
     37          */
     38          

   \                                 In section .data, align 4
     39          float Velocity_KP = 40;
   \                     Velocity_KP:
   \        0x0   0x4220'0000        DC32 0x4220'0000

   \                                 In section .data, align 4
     40          float Velocity_KI = 0.03;
   \                     Velocity_KI:
   \        0x0   0x3CF5'C28F        DC32 0x3cf5'c28f

   \                                 In section .data, align 4
     41          float Balance_KP = 900;
   \                     Balance_KP:
   \        0x0   0x4461'0000        DC32 0x4461'0000

   \                                 In section .data, align 4
     42          float Balance_KD = 100;
   \                     Balance_KD:
   \        0x0   0x42C8'0000        DC32 0x42c8'0000

   \                                 In section .data, align 4
     43          float Gryo_KP = 10;
   \                     Gryo_KP:
   \        0x0   0x4120'0000        DC32 0x4120'0000

   \                                 In section .data, align 4
     44          float Gryo_KD = 1;
   \                     Gryo_KD:
   \        0x0   0x3F80'0000        DC32 0x3f80'0000
     45          /*------------------------not use------------------------
     46          float Velocity_KP_a = 140;//110;//80;//140;    //140;  //300;
     47          float Velocity_KI_a = 0.35;      //0     //0.35;
     48          float Balance_KP_a = 980;//1322;//1200;//1250;    //1850; //2000;
     49          float Balance_KI_a = 0;       //0;    //0.025;
     50          float Balance_KD_a = 700;//500;//600;     //287;  //186.2;
     51          
     52          float Velocity_KP_b = 140;//110;
     53          float Velocity_KI_b = 0.35;
     54          float Balance_KP_b = 980;
     55          float Balance_KI_b = 0;
     56          float Balance_KD_b = 700;//350;
     57          
     58          float Velocity_KP_c = 140;//110;//140;       //140*0.7;
     59          float Velocity_KI_c = 0.35;
     60          float Balance_KP_c = 980;//240;       //1850*0.7;
     61          float Balance_KI_c = 0;//0.025;
     62          float Balance_KD_c = 700;//350;       //320*0.7;
     63          --------------------------------------------------------*/
     64          //=================== old way ===================
     65          //float velocity_pwm_x = 0.0;
     66          //int balance_pwm_x = 0;
     67          //int Velocity_KP_old = 100;
     68          //int Velocity_KI_old = 0.65;
     69          //int Balance_KP_old =860;
     70          //float Balance_Ki_old = 0.035;
     71          //float Balance_KD_old = 632;
     72          //*===============================
     73          //PID
     74          //===============================*/
     75          //float control_velocity(int encoder){
     76          //  static float Velocity,Encoder_Least,Encoder;
     77          //  static float Encoder_Integral;  
     78          //  //=============速度PI控制器=======================//	
     79          //  Encoder_Least=encoder;        
     80          //  Encoder *= 0.7;		                                                  
     81          //  Encoder += Encoder_Least*0.3;	                                
     82          //  Encoder_Integral +=Encoder;                                       //===積分出位移  P比例
     83          //  if(Encoder_Integral>27000)  	Encoder_Integral=27000;             //===積分限幅    I積分
     84          //  if(Encoder_Integral<-27000)	Encoder_Integral=-27000;            //===積分限幅    D微分
     85          //  if(flag_stop==1) Encoder_Integral=0,Encoder=0; 
     86          //  Velocity=Encoder*Velocity_KP_old+Encoder_Integral*(Velocity_KI_old);  //===速度控制
     87          //  if(flag_stop==1) Velocity=0;     
     88          //  return Velocity;
     89          //}
     90          //float control_balance(float angle, float Gyro){
     91          //  static float Bias_last, Bias_integral, Bias;
     92          //  int balance;
     93          //  Bias_last = Bias; 
     94          //  Bias_integral += Bias_last;
     95          //  if(Bias_integral>4200)  	Bias_integral=4200;               //===積分限幅 4200
     96          //  if(Bias_integral<-4200)	Bias_integral=-4200;              //===積分限幅 4200 
     97          //  if(flag_stop==1) Bias_integral=0,Bias=0; 
     98          //  Bias=(angle-rol_angle_targer);  //=== 偏差  a 0.1 b  0.2 
     99          //  balance= Balance_KP_old*Bias + Gyro*Balance_KD_old + Bias_integral*Balance_Ki_old;  
    100          //  return balance;
    101          //}
    102          //=================== old way ===================

   \                                 In section .bss, align 4
    103          float velocity_pwm_a = 0.0, velocity_pwm_b = 0.0, velocity_pwm_c = 0.0;
   \                     velocity_pwm_a:
   \        0x0                      DS8 4

   \                                 In section .bss, align 4
   \                     velocity_pwm_b:
   \        0x0                      DS8 4

   \                                 In section .bss, align 4
   \                     velocity_pwm_c:
   \        0x0                      DS8 4

   \                                 In section .bss, align 4
    104          float balance_pwm_a = 0.0, balance_pwm_b = 0.0, balance_pwm_c = 0.0;
   \                     balance_pwm_a:
   \        0x0                      DS8 4

   \                                 In section .bss, align 4
   \                     balance_pwm_b:
   \        0x0                      DS8 4

   \                                 In section .bss, align 4
   \                     balance_pwm_c:
   \        0x0                      DS8 4
    105          
    106          #define X_PARAMETER (0.5f)               
    107          #define Y_PARAMETER (0.8660254037844f)      //sqrt(3)/2.f
    108          #define L_PARAMETER (1.0f)

   \                                 In section .bss, align 4
    109          int PWM_a = 0, PWM_b = 0, PWM_c = 0;
   \                     PWM_a:
   \        0x0                      DS8 4

   \                                 In section .bss, align 4
   \                     PWM_b:
   \        0x0                      DS8 4

   \                                 In section .bss, align 4
   \                     PWM_c:
   \        0x0                      DS8 4

   \                                 In section .bss, align 4
    110          int encoder_a, encoder_b, encoder_c;
   \                     encoder_a:
   \        0x0                      DS8 4

   \                                 In section .bss, align 4
   \                     encoder_b:
   \        0x0                      DS8 4

   \                                 In section .bss, align 4
   \                     encoder_c:
   \        0x0                      DS8 4

   \                                 In section .bss, align 4
    111          float Encoder_X,Encoder_Y,Encoder_Z;
   \                     Encoder_X:
   \        0x0                      DS8 4

   \                                 In section .bss, align 4
   \                     Encoder_Y:
   \        0x0                      DS8 4

   \                                 In section .bss, align 4
   \                     Encoder_Z:
   \        0x0                      DS8 4

   \                                 In section .bss, align 4
    112          float Move_X,Move_Y,Move_Z;
   \                     Move_X:
   \        0x0                      DS8 4

   \                                 In section .bss, align 4
   \                     Move_Y:
   \        0x0                      DS8 4

   \                                 In section .bss, align 4
   \                     Move_Z:
   \        0x0                      DS8 4
    113          /*===============================
    114          
    115          測試系統運行時間
    116          
    117          ===============================*/

   \                                 In section .text, align 2, keep-with-next
    118          void time_check(_Time_test *running){
   \                     time_check: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
   \        0x2   0x0004             MOVS     R4,R0
    119              running->last_time_us = running->now_time_us;
   \        0x4   0x6860             LDR      R0,[R4, #+4]
   \        0x6   0x6020             STR      R0,[R4, #+0]
    120              running->now_time_us = running_tim_cnt * 5000 + TIM5->CNT;                  //計數累加數加1，?需要5ms = 5000us ，定時器定時5ms需要5000次計數，所以一次CNT值為1us 
   \        0x8   0x....'....        LDR.W    R0,??DataTable11
   \        0xC   0x6800             LDR      R0,[R0, #+0]
   \        0xE   0xF241 0x3288      MOVW     R2,#+5000
   \       0x12   0x....'....        LDR.W    R1,??DataTable11_1  ;; 0x40000c24
   \       0x16   0x6809             LDR      R1,[R1, #+0]
   \       0x18   0xFB02 0x1000      MLA      R0,R2,R0,R1
   \       0x1C   0x....'....        BL       __aeabi_ui2f
   \       0x20   0x6060             STR      R0,[R4, #+4]
    121              running->delta_time_us = running->now_time_us - running->last_time_us;
   \       0x22   0x6860             LDR      R0,[R4, #+4]
   \       0x24   0x6821             LDR      R1,[R4, #+0]
   \       0x26   0x....'....        BL       __aeabi_fsub
   \       0x2A   0x60A0             STR      R0,[R4, #+8]
    122              running->delta_time_ms = running->delta_time_us * 0.001f;
   \       0x2C   0x68A1             LDR      R1,[R4, #+8]
   \       0x2E   0x....'....        LDR.W    R0,??DataTable11_2  ;; 0x3a83126f
   \       0x32   0x....'....        BL       __aeabi_fmul
   \       0x36   0x60E0             STR      R0,[R4, #+12]
    123              //printf("time interrupt is %f\n", running->delta_time_us);
    124          }
   \       0x38   0xBD10             POP      {R4,PC}          ;; return
    125          /*===============================
    126          
    127          PID-X
    128          
    129          ===============================*/

   \                                 In section .text, align 2, keep-with-next
    130          float control_velocity_x(int encoder){
   \                     control_velocity_x: (+1)
   \        0x0   0xB5F8             PUSH     {R3-R7,LR}
    131              static float Velocity;
    132              static float Encoder, Encoder_Least, Encoder_Integral;
    133              
    134              Encoder_Least=encoder;        
   \        0x2   0x....'....        LDR.W    R6,??DataTable11_3
   \        0x6   0x....'....        BL       __aeabi_i2f
   \        0xA   0x6030             STR      R0,[R6, #+0]
    135              Encoder *= 0.7;		                                                  
   \        0xC   0x....'....        LDR.W    R7,??DataTable11_4
   \       0x10   0x6838             LDR      R0,[R7, #+0]
   \       0x12   0x....'....        BL       __aeabi_f2d
   \       0x16   0xF05F 0x3266      MOVS     R2,#+1717986918
   \       0x1A   0x....'....        LDR.W    R3,??DataTable11_5  ;; 0x3fe66666
   \       0x1E   0x....'....        BL       __aeabi_dmul
   \       0x22   0x....'....        BL       __aeabi_d2f
   \       0x26   0x6038             STR      R0,[R7, #+0]
    136              Encoder += Encoder_Least*0.3;	             
   \       0x28   0x6838             LDR      R0,[R7, #+0]
   \       0x2A   0x....'....        BL       __aeabi_f2d
   \       0x2E   0x0004             MOVS     R4,R0
   \       0x30   0x000D             MOVS     R5,R1
   \       0x32   0x6830             LDR      R0,[R6, #+0]
   \       0x34   0x....'....        BL       __aeabi_f2d
   \       0x38   0xF05F 0x3233      MOVS     R2,#+858993459
   \       0x3C   0x....'....        LDR.W    R3,??DataTable11_6  ;; 0x3fd33333
   \       0x40   0x....'....        BL       __aeabi_dmul
   \       0x44   0x0022             MOVS     R2,R4
   \       0x46   0x002B             MOVS     R3,R5
   \       0x48   0x....'....        BL       __aeabi_dadd
   \       0x4C   0x....'....        BL       __aeabi_d2f
   \       0x50   0x6038             STR      R0,[R7, #+0]
    137              Encoder_Integral +=Encoder;                                     //===積分出位移  P比例
   \       0x52   0x....'....        LDR.W    R4,??DataTable11_7
   \       0x56   0x6821             LDR      R1,[R4, #+0]
   \       0x58   0x6838             LDR      R0,[R7, #+0]
   \       0x5A   0x....'....        BL       __aeabi_fadd
   \       0x5E   0x6020             STR      R0,[R4, #+0]
    138              
    139              if(Encoder_Integral>27000)  Encoder_Integral=27000;             //===積分限幅    I積分
   \       0x60   0x6820             LDR      R0,[R4, #+0]
   \       0x62   0x....'....        LDR.W    R1,??DataTable11_8  ;; 0x46d2f001
   \       0x66   0x....'....        BL       __aeabi_cfrcmple
   \       0x6A   0xD802             BHI.N    ??control_velocity_x_0
   \       0x6C   0x....'....        LDR.W    R0,??DataTable11_9  ;; 0x46d2f000
   \       0x70   0x6020             STR      R0,[R4, #+0]
    140              if(Encoder_Integral<-27000)	Encoder_Integral=-27000;            //===積分限幅    D微分
   \                     ??control_velocity_x_0: (+1)
   \       0x72   0x....'....        LDR.W    R1,??DataTable11_10  ;; 0xc6d2f000
   \       0x76   0x6820             LDR      R0,[R4, #+0]
   \       0x78   0x....'....        BL       __aeabi_cfcmple
   \       0x7C   0xD200             BCS.N    ??control_velocity_x_1
   \       0x7E   0x6021             STR      R1,[R4, #+0]
    141              if(flag_stop==1) Encoder=0, Encoder_Integral=0;
   \                     ??control_velocity_x_1: (+1)
   \       0x80   0x....'....        LDR.W    R5,??DataTable11_11
   \       0x84   0x6828             LDR      R0,[R5, #+0]
   \       0x86   0x2801             CMP      R0,#+1
   \       0x88   0xD103             BNE.N    ??control_velocity_x_2
   \       0x8A   0x2000             MOVS     R0,#+0
   \       0x8C   0x6038             STR      R0,[R7, #+0]
   \       0x8E   0x2000             MOVS     R0,#+0
   \       0x90   0x6020             STR      R0,[R4, #+0]
    142              
    143              Velocity=Encoder*Velocity_KP + Encoder_Integral*Velocity_KI;    //===速度控制
   \                     ??control_velocity_x_2: (+1)
   \       0x92   0x....'....        LDR.W    R6,??DataTable11_12
   \       0x96   0x6839             LDR      R1,[R7, #+0]
   \       0x98   0x....'....        LDR.W    R0,??DataTable11_13
   \       0x9C   0x6800             LDR      R0,[R0, #+0]
   \       0x9E   0x....'....        BL       __aeabi_fmul
   \       0xA2   0x0007             MOVS     R7,R0
   \       0xA4   0x6821             LDR      R1,[R4, #+0]
   \       0xA6   0x....'....        LDR.W    R0,??DataTable11_14
   \       0xAA   0x6800             LDR      R0,[R0, #+0]
   \       0xAC   0x....'....        BL       __aeabi_fmul
   \       0xB0   0x0039             MOVS     R1,R7
   \       0xB2   0x....'....        BL       __aeabi_fadd
   \       0xB6   0x6030             STR      R0,[R6, #+0]
    144              if(flag_stop==1) Velocity=0;     
   \       0xB8   0x6828             LDR      R0,[R5, #+0]
   \       0xBA   0x2801             CMP      R0,#+1
   \       0xBC   0xD101             BNE.N    ??control_velocity_x_3
   \       0xBE   0x2000             MOVS     R0,#+0
   \       0xC0   0x6030             STR      R0,[R6, #+0]
    145              return Velocity;
   \                     ??control_velocity_x_3: (+1)
   \       0xC2   0x6830             LDR      R0,[R6, #+0]
   \       0xC4   0xBDF2             POP      {R1,R4-R7,PC}    ;; return
    146          }

   \                                 In section .bss, align 4
   \                     `control_velocity_x::Velocity`:
   \        0x0                      DS8 4

   \                                 In section .bss, align 4
   \                     `control_velocity_x::Encoder`:
   \        0x0                      DS8 4

   \                                 In section .bss, align 4
   \                     `control_velocity_x::Encoder_Least`:
   \        0x0                      DS8 4

   \                                 In section .bss, align 4
   \                     `control_velocity_x::Encoder_Integral`:
   \        0x0                      DS8 4
    147          

   \                                 In section .text, align 2, keep-with-next
    148          float control_balance_x(float angle, float Gyro){
   \                     control_balance_x: (+1)
   \        0x0   0xB538             PUSH     {R3-R5,LR}
   \        0x2   0x000C             MOVS     R4,R1
    149              float Bias, balance;
    150              Bias=(angle-rol_angle_targer);//error
   \        0x4   0x....'....        LDR.W    R1,??DataTable11_15
   \        0x8   0x6809             LDR      R1,[R1, #+0]
   \        0xA   0x....'....        BL       __aeabi_fsub
   \        0xE   0x0001             MOVS     R1,R0
    151              balance=Bias*Balance_KP + Gyro*Balance_KD;
   \       0x10   0x....'....        LDR.W    R0,??DataTable11_16
   \       0x14   0x6800             LDR      R0,[R0, #+0]
   \       0x16   0x....'....        BL       __aeabi_fmul
   \       0x1A   0x0005             MOVS     R5,R0
   \       0x1C   0x....'....        LDR.W    R0,??DataTable11_17
   \       0x20   0x6800             LDR      R0,[R0, #+0]
   \       0x22   0x0021             MOVS     R1,R4
   \       0x24   0x....'....        BL       __aeabi_fmul
   \       0x28   0x0029             MOVS     R1,R5
   \       0x2A   0x....'....        BL       __aeabi_fadd
    152              if(flag_stop==1) balance=0;
   \       0x2E   0x....'....        LDR.W    R1,??DataTable11_11
   \       0x32   0x6809             LDR      R1,[R1, #+0]
   \       0x34   0x2901             CMP      R1,#+1
   \       0x36   0xD100             BNE.N    ??control_balance_x_0
   \       0x38   0x2000             MOVS     R0,#+0
    153              return balance;
   \                     ??control_balance_x_0: (+1)
   \       0x3A   0xBD32             POP      {R1,R4,R5,PC}    ;; return
    154          }
    155          /*===============================
    156          
    157          PID-Y
    158          
    159          ===============================*/

   \                                 In section .text, align 2, keep-with-next
    160          float control_velocity_y(int encoder){
   \                     control_velocity_y: (+1)
   \        0x0   0xB5F8             PUSH     {R3-R7,LR}
    161              static float Velocity;
    162              static float Encoder, Encoder_Least, Encoder_Integral;
    163              
    164              Encoder_Least=encoder;        
   \        0x2   0x....'....        LDR.W    R6,??DataTable11_18
   \        0x6   0x....'....        BL       __aeabi_i2f
   \        0xA   0x6030             STR      R0,[R6, #+0]
    165              Encoder *= 0.7;		                                                  
   \        0xC   0x....'....        LDR.W    R7,??DataTable11_19
   \       0x10   0x6838             LDR      R0,[R7, #+0]
   \       0x12   0x....'....        BL       __aeabi_f2d
   \       0x16   0xF05F 0x3266      MOVS     R2,#+1717986918
   \       0x1A   0x....'....        LDR.W    R3,??DataTable11_5  ;; 0x3fe66666
   \       0x1E   0x....'....        BL       __aeabi_dmul
   \       0x22   0x....'....        BL       __aeabi_d2f
   \       0x26   0x6038             STR      R0,[R7, #+0]
    166              Encoder += Encoder_Least*0.3;	             
   \       0x28   0x6838             LDR      R0,[R7, #+0]
   \       0x2A   0x....'....        BL       __aeabi_f2d
   \       0x2E   0x0004             MOVS     R4,R0
   \       0x30   0x000D             MOVS     R5,R1
   \       0x32   0x6830             LDR      R0,[R6, #+0]
   \       0x34   0x....'....        BL       __aeabi_f2d
   \       0x38   0xF05F 0x3233      MOVS     R2,#+858993459
   \       0x3C   0x....'....        LDR.W    R3,??DataTable11_6  ;; 0x3fd33333
   \       0x40   0x....'....        BL       __aeabi_dmul
   \       0x44   0x0022             MOVS     R2,R4
   \       0x46   0x002B             MOVS     R3,R5
   \       0x48   0x....'....        BL       __aeabi_dadd
   \       0x4C   0x....'....        BL       __aeabi_d2f
   \       0x50   0x6038             STR      R0,[R7, #+0]
    167              Encoder_Integral +=Encoder;                                     //===積分出位移  P比例
   \       0x52   0x....'....        LDR.W    R4,??DataTable11_20
   \       0x56   0x6821             LDR      R1,[R4, #+0]
   \       0x58   0x6838             LDR      R0,[R7, #+0]
   \       0x5A   0x....'....        BL       __aeabi_fadd
   \       0x5E   0x6020             STR      R0,[R4, #+0]
    168              
    169              if(Encoder_Integral>27000)  Encoder_Integral=27000;             //===積分限幅    I積分
   \       0x60   0x6820             LDR      R0,[R4, #+0]
   \       0x62   0x....'....        LDR.W    R1,??DataTable11_8  ;; 0x46d2f001
   \       0x66   0x....'....        BL       __aeabi_cfrcmple
   \       0x6A   0xD802             BHI.N    ??control_velocity_y_0
   \       0x6C   0x....'....        LDR.W    R0,??DataTable11_9  ;; 0x46d2f000
   \       0x70   0x6020             STR      R0,[R4, #+0]
    170              if(Encoder_Integral<-27000)	Encoder_Integral=-27000;            //===積分限幅    D微分
   \                     ??control_velocity_y_0: (+1)
   \       0x72   0x....'....        LDR.W    R1,??DataTable11_10  ;; 0xc6d2f000
   \       0x76   0x6820             LDR      R0,[R4, #+0]
   \       0x78   0x....'....        BL       __aeabi_cfcmple
   \       0x7C   0xD200             BCS.N    ??control_velocity_y_1
   \       0x7E   0x6021             STR      R1,[R4, #+0]
    171              if(flag_stop==1) Encoder=0, Encoder_Integral=0;
   \                     ??control_velocity_y_1: (+1)
   \       0x80   0x....'....        LDR.W    R5,??DataTable11_11
   \       0x84   0x6828             LDR      R0,[R5, #+0]
   \       0x86   0x2801             CMP      R0,#+1
   \       0x88   0xD103             BNE.N    ??control_velocity_y_2
   \       0x8A   0x2000             MOVS     R0,#+0
   \       0x8C   0x6038             STR      R0,[R7, #+0]
   \       0x8E   0x2000             MOVS     R0,#+0
   \       0x90   0x6020             STR      R0,[R4, #+0]
    172              
    173              Velocity=Encoder*Velocity_KP + Encoder_Integral*Velocity_KI;    //===速度控制
   \                     ??control_velocity_y_2: (+1)
   \       0x92   0x....'....        LDR.W    R6,??DataTable11_21
   \       0x96   0x6839             LDR      R1,[R7, #+0]
   \       0x98   0x....'....        LDR.W    R0,??DataTable11_13
   \       0x9C   0x6800             LDR      R0,[R0, #+0]
   \       0x9E   0x....'....        BL       __aeabi_fmul
   \       0xA2   0x0007             MOVS     R7,R0
   \       0xA4   0x6821             LDR      R1,[R4, #+0]
   \       0xA6   0x....'....        LDR.W    R0,??DataTable11_14
   \       0xAA   0x6800             LDR      R0,[R0, #+0]
   \       0xAC   0x....'....        BL       __aeabi_fmul
   \       0xB0   0x0039             MOVS     R1,R7
   \       0xB2   0x....'....        BL       __aeabi_fadd
   \       0xB6   0x6030             STR      R0,[R6, #+0]
    174              if(flag_stop==1) Velocity=0;     
   \       0xB8   0x6828             LDR      R0,[R5, #+0]
   \       0xBA   0x2801             CMP      R0,#+1
   \       0xBC   0xD101             BNE.N    ??control_velocity_y_3
   \       0xBE   0x2000             MOVS     R0,#+0
   \       0xC0   0x6030             STR      R0,[R6, #+0]
    175              return Velocity;
   \                     ??control_velocity_y_3: (+1)
   \       0xC2   0x6830             LDR      R0,[R6, #+0]
   \       0xC4   0xBDF2             POP      {R1,R4-R7,PC}    ;; return
    176          }

   \                                 In section .bss, align 4
   \                     `control_velocity_y::Velocity`:
   \        0x0                      DS8 4

   \                                 In section .bss, align 4
   \                     `control_velocity_y::Encoder`:
   \        0x0                      DS8 4

   \                                 In section .bss, align 4
   \                     `control_velocity_y::Encoder_Least`:
   \        0x0                      DS8 4

   \                                 In section .bss, align 4
   \                     `control_velocity_y::Encoder_Integral`:
   \        0x0                      DS8 4
    177          

   \                                 In section .text, align 2, keep-with-next
    178          float control_balance_y(float angle, float Gyro){
   \                     control_balance_y: (+1)
   \        0x0   0xB538             PUSH     {R3-R5,LR}
   \        0x2   0x000C             MOVS     R4,R1
    179              float Bias, balance;
    180              Bias=(angle-pit_angle_targer);//error
   \        0x4   0x....'....        LDR.W    R1,??DataTable11_22
   \        0x8   0x6809             LDR      R1,[R1, #+0]
   \        0xA   0x....'....        BL       __aeabi_fsub
   \        0xE   0x0001             MOVS     R1,R0
    181              balance=Bias*Balance_KP + Gyro*Balance_KD;
   \       0x10   0x....'....        LDR.W    R0,??DataTable11_16
   \       0x14   0x6800             LDR      R0,[R0, #+0]
   \       0x16   0x....'....        BL       __aeabi_fmul
   \       0x1A   0x0005             MOVS     R5,R0
   \       0x1C   0x....'....        LDR.W    R0,??DataTable11_17
   \       0x20   0x6800             LDR      R0,[R0, #+0]
   \       0x22   0x0021             MOVS     R1,R4
   \       0x24   0x....'....        BL       __aeabi_fmul
   \       0x28   0x0029             MOVS     R1,R5
   \       0x2A   0x....'....        BL       __aeabi_fadd
    182              if(flag_stop==1) balance=0;
   \       0x2E   0x....'....        LDR.W    R1,??DataTable11_11
   \       0x32   0x6809             LDR      R1,[R1, #+0]
   \       0x34   0x2901             CMP      R1,#+1
   \       0x36   0xD100             BNE.N    ??control_balance_y_0
   \       0x38   0x2000             MOVS     R0,#+0
    183              return balance;
   \                     ??control_balance_y_0: (+1)
   \       0x3A   0xBD32             POP      {R1,R4,R5,PC}    ;; return
    184          }
    185          /*===============================
    186          
    187          PID-Z
    188          
    189          ===============================*/

   \                                 In section .text, align 2, keep-with-next
    190          float control_balance_z(float angle, float Gyro){
   \                     control_balance_z: (+1)
   \        0x0   0xB5F8             PUSH     {R3-R7,LR}
   \        0x2   0x000D             MOVS     R5,R1
    191              static float Bias_last;
    192              float Bias, D_Bias;
    193              int balance;
    194              if(flag_stop==1) Bias_last=0;
   \        0x4   0x....'....        LDR.W    R4,??DataTable11_11
   \        0x8   0x6820             LDR      R0,[R4, #+0]
   \        0xA   0x2801             CMP      R0,#+1
   \        0xC   0xD103             BNE.N    ??control_balance_z_0
   \        0xE   0x2000             MOVS     R0,#+0
   \       0x10   0x....'....        LDR.W    R1,??DataTable11_23
   \       0x14   0x6008             STR      R0,[R1, #+0]
    195              Bias = Gyro;
    196              D_Bias= Bias - Bias_last;
   \                     ??control_balance_z_0: (+1)
   \       0x16   0x....'....        LDR.W    R7,??DataTable11_23
   \       0x1A   0x0028             MOVS     R0,R5
   \       0x1C   0x6839             LDR      R1,[R7, #+0]
   \       0x1E   0x....'....        BL       __aeabi_fsub
   \       0x22   0x0006             MOVS     R6,R0
    197              Bias_last=Bias;
   \       0x24   0x603D             STR      R5,[R7, #+0]
    198              balance=Bias*Gryo_KP + D_Bias*Gryo_KD;
                            ^
Warning[Pa093]: implicit conversion from floating point to integer
   \       0x26   0x....'....        LDR.W    R0,??DataTable11_24
   \       0x2A   0x6800             LDR      R0,[R0, #+0]
   \       0x2C   0x0029             MOVS     R1,R5
   \       0x2E   0x....'....        BL       __aeabi_fmul
   \       0x32   0x0005             MOVS     R5,R0
   \       0x34   0x....'....        LDR.W    R0,??DataTable11_25
   \       0x38   0x6800             LDR      R0,[R0, #+0]
   \       0x3A   0x0031             MOVS     R1,R6
   \       0x3C   0x....'....        BL       __aeabi_fmul
   \       0x40   0x0029             MOVS     R1,R5
   \       0x42   0x....'....        BL       __aeabi_fadd
   \       0x46   0x....'....        BL       __aeabi_f2iz
    199              if(flag_stop==1) balance=0;
   \       0x4A   0x6821             LDR      R1,[R4, #+0]
   \       0x4C   0x2901             CMP      R1,#+1
   \       0x4E   0xD100             BNE.N    ??control_balance_z_1
   \       0x50   0x2000             MOVS     R0,#+0
    200              return balance;
   \                     ??control_balance_z_1: (+1)
   \       0x52   0x....'....        BL       __aeabi_i2f
   \       0x56   0xBDF2             POP      {R1,R4-R7,PC}    ;; return
    201          }

   \                                 In section .bss, align 4
   \                     `control_balance_z::Bias_last`:
   \        0x0                      DS8 4
    202          /*===============================
    203          
    204          PWM-max-limit
    205          pwm > 8300, then pwm = 8300 and pwm < -8300, then pwm = -8300
    206          
    207          =================================*/

   \                                 In section .text, align 2, keep-with-next
    208          void Max_pwm_limit(int amplitude){
    209              if(PWM_a<-amplitude) PWM_a=-amplitude;	
   \                     Max_pwm_limit: (+1)
   \        0x0   0x....'....        LDR.W    R1,??DataTable11_26
   \        0x4   0x680A             LDR      R2,[R1, #+0]
   \        0x6   0x42C2             CMN      R2,R0
   \        0x8   0xDA01             BGE.N    ??Max_pwm_limit_0
   \        0xA   0x4242             RSBS     R2,R0,#+0
   \        0xC   0x600A             STR      R2,[R1, #+0]
    210              if(PWM_a>amplitude)  PWM_a=amplitude;	
   \                     ??Max_pwm_limit_0: (+1)
   \        0xE   0x680A             LDR      R2,[R1, #+0]
   \       0x10   0x4290             CMP      R0,R2
   \       0x12   0xDA00             BGE.N    ??Max_pwm_limit_1
   \       0x14   0x6008             STR      R0,[R1, #+0]
    211              if(PWM_b<-amplitude) PWM_b=-amplitude;	
   \                     ??Max_pwm_limit_1: (+1)
   \       0x16   0x....'....        LDR.W    R1,??DataTable11_27
   \       0x1A   0x680A             LDR      R2,[R1, #+0]
   \       0x1C   0x42C2             CMN      R2,R0
   \       0x1E   0xDA01             BGE.N    ??Max_pwm_limit_2
   \       0x20   0x4242             RSBS     R2,R0,#+0
   \       0x22   0x600A             STR      R2,[R1, #+0]
    212              if(PWM_b>amplitude)  PWM_b=amplitude;
   \                     ??Max_pwm_limit_2: (+1)
   \       0x24   0x680A             LDR      R2,[R1, #+0]
   \       0x26   0x4290             CMP      R0,R2
   \       0x28   0xDA00             BGE.N    ??Max_pwm_limit_3
   \       0x2A   0x6008             STR      R0,[R1, #+0]
    213              if(PWM_c<-amplitude) PWM_c=-amplitude;	
   \                     ??Max_pwm_limit_3: (+1)
   \       0x2C   0x....'....        LDR.W    R1,??DataTable11_28
   \       0x30   0x680A             LDR      R2,[R1, #+0]
   \       0x32   0x42C2             CMN      R2,R0
   \       0x34   0xDA01             BGE.N    ??Max_pwm_limit_4
   \       0x36   0x4242             RSBS     R2,R0,#+0
   \       0x38   0x600A             STR      R2,[R1, #+0]
    214              if(PWM_c>amplitude)  PWM_c=amplitude;	
   \                     ??Max_pwm_limit_4: (+1)
   \       0x3A   0x680A             LDR      R2,[R1, #+0]
   \       0x3C   0x4290             CMP      R0,R2
   \       0x3E   0xDA00             BGE.N    ??Max_pwm_limit_5
   \       0x40   0x6008             STR      R0,[R1, #+0]
    215          }
   \                     ??Max_pwm_limit_5: (+1)
   \       0x42   0x4770             BX       LR               ;; return
    216          /*===============================
    217          Set PWM
    218          motor=123, all motor change pwm
    219          motor=1, motor a change pwm
    220          motor=2, motor b change pwm
    221          motor=3, motor c change pwm
    222          =================================*/

   \                                 In section .text, align 2, keep-with-next
    223          void set_pwm(int motor, int pwm_a, int pwm_b, int pwm_c){
   \                     set_pwm: (+1)
   \        0x0   0xB5F8             PUSH     {R3-R7,LR}
   \        0x2   0x0004             MOVS     R4,R0
   \        0x4   0x000D             MOVS     R5,R1
   \        0x6   0x0016             MOVS     R6,R2
   \        0x8   0x001F             MOVS     R7,R3
    224              if(motor==123 || motor==1){
   \        0xA   0x2C7B             CMP      R4,#+123
   \        0xC   0xD001             BEQ.N    ??set_pwm_0
   \        0xE   0x2C01             CMP      R4,#+1
   \       0x10   0xD114             BNE.N    ??set_pwm_1
    225                  if (pwm_a<0){
   \                     ??set_pwm_0: (+1)
   \       0x12   0x2D00             CMP      R5,#+0
   \       0x14   0xD506             BPL.N    ??set_pwm_2
    226                      GPIO_SetBits(GPIOB,GPIO_Pin_13);
   \       0x16   0xF44F 0x5100      MOV      R1,#+8192
   \       0x1A   0x....'....        LDR.W    R0,??DataTable11_29  ;; 0x40020400
   \       0x1E   0x....'....        BL       GPIO_SetBits
   \       0x22   0xE005             B.N      ??set_pwm_3
    227                  }else{ 
    228                      GPIO_ResetBits(GPIOB,GPIO_Pin_13);
   \                     ??set_pwm_2: (+1)
   \       0x24   0xF44F 0x5100      MOV      R1,#+8192
   \       0x28   0x....'....        LDR.W    R0,??DataTable11_29  ;; 0x40020400
   \       0x2C   0x....'....        BL       GPIO_ResetBits
    229                  }
    230                  pwm_a = int_abs(pwm_a);
   \                     ??set_pwm_3: (+1)
   \       0x30   0x0028             MOVS     R0,R5
   \       0x32   0x....'....        BL       int_abs
    231                  TIM8->CCR1 = pwm_a;
   \       0x36   0x....'....        LDR.W    R1,??DataTable11_30  ;; 0x40010434
   \       0x3A   0x6008             STR      R0,[R1, #+0]
    232              }
    233              if(motor==123 || motor==2){
   \                     ??set_pwm_1: (+1)
   \       0x3C   0x2C7B             CMP      R4,#+123
   \       0x3E   0xD001             BEQ.N    ??set_pwm_4
   \       0x40   0x2C02             CMP      R4,#+2
   \       0x42   0xD114             BNE.N    ??set_pwm_5
    234                  if (pwm_b<0){
   \                     ??set_pwm_4: (+1)
   \       0x44   0x2E00             CMP      R6,#+0
   \       0x46   0xD506             BPL.N    ??set_pwm_6
    235                      GPIO_SetBits(GPIOD,GPIO_Pin_8);
   \       0x48   0xF44F 0x7180      MOV      R1,#+256
   \       0x4C   0x....'....        LDR.W    R0,??DataTable11_31  ;; 0x40020c00
   \       0x50   0x....'....        BL       GPIO_SetBits
   \       0x54   0xE005             B.N      ??set_pwm_7
    236                  }else{ 
    237                      GPIO_ResetBits(GPIOD,GPIO_Pin_8);
   \                     ??set_pwm_6: (+1)
   \       0x56   0xF44F 0x7180      MOV      R1,#+256
   \       0x5A   0x....'....        LDR.W    R0,??DataTable11_31  ;; 0x40020c00
   \       0x5E   0x....'....        BL       GPIO_ResetBits
    238                  }
    239                  pwm_b = int_abs(pwm_b);
   \                     ??set_pwm_7: (+1)
   \       0x62   0x0030             MOVS     R0,R6
   \       0x64   0x....'....        BL       int_abs
    240                  TIM8->CCR2 = pwm_b;
   \       0x68   0x....'....        LDR.W    R1,??DataTable11_32  ;; 0x40010438
   \       0x6C   0x6008             STR      R0,[R1, #+0]
    241              }
    242              if(motor==123 || motor==3){
   \                     ??set_pwm_5: (+1)
   \       0x6E   0x2C7B             CMP      R4,#+123
   \       0x70   0xD001             BEQ.N    ??set_pwm_8
   \       0x72   0x2C03             CMP      R4,#+3
   \       0x74   0xD114             BNE.N    ??set_pwm_9
    243                  if (pwm_c<0){
   \                     ??set_pwm_8: (+1)
   \       0x76   0x2F00             CMP      R7,#+0
   \       0x78   0xD506             BPL.N    ??set_pwm_10
    244                      GPIO_SetBits(GPIOD,GPIO_Pin_9);
   \       0x7A   0xF44F 0x7100      MOV      R1,#+512
   \       0x7E   0x....'....        LDR.W    R0,??DataTable11_31  ;; 0x40020c00
   \       0x82   0x....'....        BL       GPIO_SetBits
   \       0x86   0xE005             B.N      ??set_pwm_11
    245                  }else{ 
    246                      GPIO_ResetBits(GPIOD,GPIO_Pin_9);
   \                     ??set_pwm_10: (+1)
   \       0x88   0xF44F 0x7100      MOV      R1,#+512
   \       0x8C   0x....'....        LDR.W    R0,??DataTable11_31  ;; 0x40020c00
   \       0x90   0x....'....        BL       GPIO_ResetBits
    247                  }
    248                  pwm_c = int_abs(pwm_c);
   \                     ??set_pwm_11: (+1)
   \       0x94   0x0038             MOVS     R0,R7
   \       0x96   0x....'....        BL       int_abs
    249                  TIM8->CCR3 = pwm_c;
   \       0x9A   0x....'....        LDR.W    R1,??DataTable11_33  ;; 0x4001043c
   \       0x9E   0x6008             STR      R0,[R1, #+0]
    250              }
    251          }
   \                     ??set_pwm_9: (+1)
   \       0xA0   0xBDF1             POP      {R0,R4-R7,PC}    ;; return
    252          /*===============================
    253          
    254          正向運動學分析
    255          
    256          ===============================*/

   \                                 In section .text, align 2, keep-with-next
    257          void Encoder_Analysis(float Va,float Vb,float Vc){ 
   \                     Encoder_Analysis: (+1)
   \        0x0   0xB570             PUSH     {R4-R6,LR}
   \        0x2   0x0004             MOVS     R4,R0
   \        0x4   0x000D             MOVS     R5,R1
   \        0x6   0x0016             MOVS     R6,R2
    258              Encoder_X = Va*2-Vb-Vc;
   \        0x8   0xF05F 0x4080      MOVS     R0,#+1073741824
   \        0xC   0x0021             MOVS     R1,R4
   \        0xE   0x....'....        BL       __aeabi_fmul
   \       0x12   0x0029             MOVS     R1,R5
   \       0x14   0x....'....        BL       __aeabi_fsub
   \       0x18   0x0031             MOVS     R1,R6
   \       0x1A   0x....'....        BL       __aeabi_fsub
   \       0x1E   0x....'....        LDR.W    R1,??DataTable11_34
   \       0x22   0x6008             STR      R0,[R1, #+0]
    259              Encoder_Y = (Vb-Vc)*1.7320508075688773;
   \       0x24   0x0028             MOVS     R0,R5
   \       0x26   0x0031             MOVS     R1,R6
   \       0x28   0x....'....        BL       __aeabi_fsub
   \       0x2C   0x....'....        BL       __aeabi_f2d
   \       0x30   0x....'....        LDR.W    R2,??DataTable11_35  ;; 0xe8584caa
   \       0x34   0x....'....        LDR.W    R3,??DataTable11_36  ;; 0x3ffbb67a
   \       0x38   0x....'....        BL       __aeabi_dmul
   \       0x3C   0x....'....        BL       __aeabi_d2f
   \       0x40   0x....'....        LDR.W    R1,??DataTable11_37
   \       0x44   0x6008             STR      R0,[R1, #+0]
    260              Encoder_Z = Va+Vb+Vc;
   \       0x46   0x0020             MOVS     R0,R4
   \       0x48   0x0029             MOVS     R1,R5
   \       0x4A   0x....'....        BL       __aeabi_fadd
   \       0x4E   0x0031             MOVS     R1,R6
   \       0x50   0x....'....        BL       __aeabi_fadd
   \       0x54   0x....'....        LDR.W    R1,??DataTable11_38
   \       0x58   0x6008             STR      R0,[R1, #+0]
    261          }
   \       0x5A   0xBD70             POP      {R4-R6,PC}       ;; return
    262          /*===============================
    263          
    264          逆向運動學分析
    265          
    266          ===============================*/

   \                                 In section .text, align 2, keep-with-next
    267          void Kinematic_Analysis(float Vx,float Vy,float Vz){
   \                     Kinematic_Analysis: (+1)
   \        0x0   0xE92D 0x43F8      PUSH     {R3-R9,LR}
   \        0x4   0x0006             MOVS     R6,R0
   \        0x6   0x000C             MOVS     R4,R1
   \        0x8   0x0015             MOVS     R5,R2
    268              PWM_a = Vx + L_PARAMETER*Vz;
                           ^
Warning[Pa093]: implicit conversion from floating point to integer
   \        0xA   0x0030             MOVS     R0,R6
   \        0xC   0x0029             MOVS     R1,R5
   \        0xE   0x....'....        BL       __aeabi_fadd
   \       0x12   0x....'....        BL       __aeabi_f2iz
   \       0x16   0x....'....        LDR.W    R1,??DataTable11_26
   \       0x1A   0x6008             STR      R0,[R1, #+0]
    269              PWM_b = -X_PARAMETER*Vx + Y_PARAMETER*Vy + L_PARAMETER*Vz;
                           ^
Warning[Pa093]: implicit conversion from floating point to integer
   \       0x1C   0x....'....        LDR.W    R7,??DataTable11_39  ;; 0x3f5db3d7
   \       0x20   0xF05F 0x483F      MOVS     R8,#-1090519040
   \       0x24   0x0030             MOVS     R0,R6
   \       0x26   0x4641             MOV      R1,R8
   \       0x28   0x....'....        BL       __aeabi_fmul
   \       0x2C   0x4681             MOV      R9,R0
   \       0x2E   0x0020             MOVS     R0,R4
   \       0x30   0x0039             MOVS     R1,R7
   \       0x32   0x....'....        BL       __aeabi_fmul
   \       0x36   0x4649             MOV      R1,R9
   \       0x38   0x....'....        BL       __aeabi_fadd
   \       0x3C   0x0029             MOVS     R1,R5
   \       0x3E   0x....'....        BL       __aeabi_fadd
   \       0x42   0x....'....        BL       __aeabi_f2iz
   \       0x46   0x....'....        LDR.W    R1,??DataTable11_27
   \       0x4A   0x6008             STR      R0,[R1, #+0]
    270              PWM_c = -X_PARAMETER*Vx - Y_PARAMETER*Vy + L_PARAMETER*Vz;
                           ^
Warning[Pa093]: implicit conversion from floating point to integer
   \       0x4C   0x0030             MOVS     R0,R6
   \       0x4E   0x4641             MOV      R1,R8
   \       0x50   0x....'....        BL       __aeabi_fmul
   \       0x54   0x0006             MOVS     R6,R0
   \       0x56   0x0020             MOVS     R0,R4
   \       0x58   0x0039             MOVS     R1,R7
   \       0x5A   0x....'....        BL       __aeabi_fmul
   \       0x5E   0x0001             MOVS     R1,R0
   \       0x60   0x0030             MOVS     R0,R6
   \       0x62   0x....'....        BL       __aeabi_fsub
   \       0x66   0x0029             MOVS     R1,R5
   \       0x68   0x....'....        BL       __aeabi_fadd
   \       0x6C   0x....'....        BL       __aeabi_f2iz
   \       0x70   0x....'....        LDR.W    R1,??DataTable11_28
   \       0x74   0x6008             STR      R0,[R1, #+0]
    271          }
   \       0x76   0xE8BD 0x83F1      POP      {R0,R4-R9,PC}    ;; return
    272          
    273          /*===============================
    274          
    275          TIM4 interrupt - main
    276          
    277          =================================*/

   \                                 In section .bss, align 4
    278          _Time_test run_start;
   \                     run_start:
   \        0x0                      DS8 16

   \                                 In section .bss, align 4
    279          _Time_test run_stop;
   \                     run_stop:
   \        0x0                      DS8 16

   \                                 In section .bss, align 4
    280          int jump_pwm=0,jump_pwm_max=0;
   \                     jump_pwm:
   \        0x0                      DS8 4

   \                                 In section .bss, align 4
   \                     jump_pwm_max:
   \        0x0                      DS8 4

   \                                 In section .text, align 2, keep-with-next
    281          void ahrs(void){
   \                     ahrs: (+1)
   \        0x0   0xB53E             PUSH     {R1-R5,LR}
    282              //陀螺儀raw data
    283              get_gyro_raw();
   \        0x2   0x....'....        BL       get_gyro_raw
    284              get_deg_s(&gyro_raw_f,&Mpu.deg_s);
   \        0x6   0x....'....        LDR.W    R4,??DataTable11_40
   \        0xA   0x....'....        LDR.W    R5,??DataTable11_41
   \        0xE   0x0029             MOVS     R1,R5
   \       0x10   0x0020             MOVS     R0,R4
   \       0x12   0x....'....        BL       get_deg_s
    285              get_rad_s(&gyro_raw_f,&Mpu.rad_s);
   \       0x16   0xF115 0x010C      ADDS     R1,R5,#+12
   \       0x1A   0x0020             MOVS     R0,R4
   \       0x1C   0x....'....        BL       get_rad_s
    286              //加速度計raw data
    287              get_acc_raw();
   \       0x20   0x....'....        BL       get_acc_raw
    288              //姿態演算法需要用的低通濾波器
    289              acc_iir_lpf(&acc_raw_f,&acc_att_lpf,Mpu.att_acc_factor);
   \       0x24   0x....'....        LDR.W    R4,??DataTable11_42
   \       0x28   0x6A6A             LDR      R2,[R5, #+36]
   \       0x2A   0x0021             MOVS     R1,R4
   \       0x2C   0x....'....        LDR.W    R0,??DataTable11_43
   \       0x30   0x....'....        BL       acc_iir_lpf
    290              get_acc_g(&acc_att_lpf,&Mpu.acc_g);
   \       0x34   0xF115 0x0118      ADDS     R1,R5,#+24
   \       0x38   0x0020             MOVS     R0,R4
   \       0x3A   0x....'....        BL       get_acc_g
    291              //姿態演算
    292              mahony_update(Mpu.rad_s.x,Mpu.rad_s.y,Mpu.rad_s.z,Mpu.acc_g.x,Mpu.acc_g.y,Mpu.acc_g.z);
   \       0x3E   0x6A28             LDR      R0,[R5, #+32]
   \       0x40   0x9001             STR      R0,[SP, #+4]
   \       0x42   0x69E8             LDR      R0,[R5, #+28]
   \       0x44   0x9000             STR      R0,[SP, #+0]
   \       0x46   0x69AB             LDR      R3,[R5, #+24]
   \       0x48   0x696A             LDR      R2,[R5, #+20]
   \       0x4A   0x6929             LDR      R1,[R5, #+16]
   \       0x4C   0x68E8             LDR      R0,[R5, #+12]
   \       0x4E   0x....'....        BL       mahony_update
    293              //姿態演算矩陣更新
    294              Matrix_ready();
   \       0x52   0x....'....        BL       Matrix_ready
    295          }
   \       0x56   0xBD37             POP      {R0-R2,R4,R5,PC}  ;; return
    296          

   \                                 In section .text, align 2, keep-with-next
    297          void jump_program(){
    298          //    if(att.rol <= -10 && att.rol > -11.5){
    299          //        // -8 ~ -11.5
    300          //        PWM_a=-6600;
    301          //        set_pwm(1,PWM_a,0,0);
    302          //    }else if(att.rol <= -11.5 && att.rol > -13){ 
    303          //        // -11.5 ~ -13
    304          //        PWM_a=-7000;
    305          //        set_pwm(1,PWM_a,0,0);
    306          //    }else 
    307                  if(att.rol < -14){
    308                  // -13 ~
    309              }
    310          }
   \                     jump_program: (+1)
   \        0x0   0x4770             BX       LR               ;; return
    311          

   \                                 In section .bss, align 4
    312          int increase=0;
   \                     increase:
   \        0x0                      DS8 4

   \                                 In section .text, align 2, keep-with-next
    313          void TIM5_IRQHandler(void){
   \                     TIM5_IRQHandler: (+1)
   \        0x0   0xE92D 0x4FF8      PUSH     {R3-R11,LR}
    314              if(TIM5->SR&0X0001){//確認更新中斷旗標為有效
   \        0x4   0x....             LDR.N    R4,??DataTable11_44  ;; 0x40000c10
   \        0x6   0x8820             LDRH     R0,[R4, #+0]
   \        0x8   0x07C0             LSLS     R0,R0,#+31
   \        0xA   0xF140 0x8142      BPL.W    ??TIM5_IRQHandler_0
    315                  MPU6050_Get_Display();
   \        0xE   0x....'....        BL       MPU6050_Get_Display
    316                  running_tim_cnt++ ;
   \       0x12   0x....             LDR.N    R0,??DataTable11
   \       0x14   0x6801             LDR      R1,[R0, #+0]
   \       0x16   0x1C49             ADDS     R1,R1,#+1
   \       0x18   0x6001             STR      R1,[R0, #+0]
    317                  time_check(&run_start);                                                 //timer時間測量
   \       0x1A   0x....             LDR.N    R0,??DataTable11_45
   \       0x1C   0x....'....        BL       time_check
    318                  
    319                  ahrs();
   \       0x20   0x....'....        BL       ahrs
    320                  //Kinematic
    321                  encoder_a=-read_Encoder(1);
   \       0x24   0x....             LDR.N    R5,??DataTable11_46
   \       0x26   0x2001             MOVS     R0,#+1
   \       0x28   0x....'....        BL       read_Encoder
   \       0x2C   0x4240             RSBS     R0,R0,#+0
   \       0x2E   0x6028             STR      R0,[R5, #+0]
    322                  encoder_b=-read_Encoder(2);
   \       0x30   0x....             LDR.N    R6,??DataTable11_47
   \       0x32   0x2002             MOVS     R0,#+2
   \       0x34   0x....'....        BL       read_Encoder
   \       0x38   0x4240             RSBS     R0,R0,#+0
   \       0x3A   0x6030             STR      R0,[R6, #+0]
    323                  encoder_c=-read_Encoder(3);
   \       0x3C   0x....             LDR.N    R7,??DataTable11_48
   \       0x3E   0x2003             MOVS     R0,#+3
   \       0x40   0x....'....        BL       read_Encoder
   \       0x44   0x4240             RSBS     R0,R0,#+0
   \       0x46   0x6038             STR      R0,[R7, #+0]
    324                  //正向運動學分析
    325                  Encoder_Analysis(encoder_a,encoder_b,encoder_c);
   \       0x48   0x6838             LDR      R0,[R7, #+0]
   \       0x4A   0x....'....        BL       __aeabi_i2f
   \       0x4E   0x0002             MOVS     R2,R0
   \       0x50   0x0017             MOVS     R7,R2
   \       0x52   0x6830             LDR      R0,[R6, #+0]
   \       0x54   0x....'....        BL       __aeabi_i2f
   \       0x58   0x0001             MOVS     R1,R0
   \       0x5A   0x003A             MOVS     R2,R7
   \       0x5C   0x000E             MOVS     R6,R1
   \       0x5E   0x0017             MOVS     R7,R2
   \       0x60   0x6828             LDR      R0,[R5, #+0]
   \       0x62   0x....'....        BL       __aeabi_i2f
   \       0x66   0x003A             MOVS     R2,R7
   \       0x68   0x0031             MOVS     R1,R6
   \       0x6A   0x....'....        BL       Encoder_Analysis
    326                  //balance_pid
    327                  balance_pwm_a = -control_balance_x(att.rol,Mpu.deg_s.x);
   \       0x6E   0x....'....        LDR.W    R10,??DataTable11_49
   \       0x72   0x....             LDR.N    R5,??DataTable11_50
   \       0x74   0x....'....        LDR.W    R8,??DataTable11_41
   \       0x78   0xF8D8 0x1000      LDR      R1,[R8, #+0]
   \       0x7C   0x6868             LDR      R0,[R5, #+4]
   \       0x7E   0x....'....        BL       control_balance_x
   \       0x82   0xF090 0x4000      EORS     R0,R0,#0x80000000
   \       0x86   0xF8CA 0x0000      STR      R0,[R10, #+0]
    328                  balance_pwm_b = control_balance_y(att.pit,Mpu.deg_s.y);
   \       0x8A   0x....             LDR.N    R6,??DataTable11_51
   \       0x8C   0xF8D8 0x1004      LDR      R1,[R8, #+4]
   \       0x90   0x6828             LDR      R0,[R5, #+0]
   \       0x92   0x....'....        BL       control_balance_y
   \       0x96   0x6030             STR      R0,[R6, #+0]
    329                  balance_pwm_c = control_balance_z(att.yaw,Mpu.deg_s.z);
   \       0x98   0x....             LDR.N    R7,??DataTable11_52
   \       0x9A   0xF8D8 0x1008      LDR      R1,[R8, #+8]
   \       0x9E   0x68A8             LDR      R0,[R5, #+8]
   \       0xA0   0x....'....        BL       control_balance_z
   \       0xA4   0x6038             STR      R0,[R7, #+0]
    330                  //velocity pid
    331                  velocity_pwm_a = control_velocity_x(Encoder_X);
                                                             ^
Warning[Pa093]: implicit conversion from floating point to integer
   \       0xA6   0x....'....        LDR.W    R11,??DataTable11_53
   \       0xAA   0x....             LDR.N    R0,??DataTable11_34
   \       0xAC   0x6800             LDR      R0,[R0, #+0]
   \       0xAE   0x....'....        BL       __aeabi_f2iz
   \       0xB2   0x....'....        BL       control_velocity_x
   \       0xB6   0xF8CB 0x0000      STR      R0,[R11, #+0]
    332                  velocity_pwm_b = control_velocity_y(Encoder_Y);
                                                             ^
Warning[Pa093]: implicit conversion from floating point to integer
   \       0xBA   0x....'....        LDR.W    R8,??DataTable11_54
   \       0xBE   0x....             LDR.N    R0,??DataTable11_37
   \       0xC0   0x6800             LDR      R0,[R0, #+0]
   \       0xC2   0x....'....        BL       __aeabi_f2iz
   \       0xC6   0x....'....        BL       control_velocity_y
   \       0xCA   0xF8C8 0x0000      STR      R0,[R8, #+0]
    333                  Move_X = balance_pwm_a + velocity_pwm_a;
   \       0xCE   0x....'....        LDR.W    R9,??DataTable11_55
   \       0xD2   0xF8DA 0x1000      LDR      R1,[R10, #+0]
   \       0xD6   0xF8DB 0x0000      LDR      R0,[R11, #+0]
   \       0xDA   0x....'....        BL       __aeabi_fadd
   \       0xDE   0xF8C9 0x0000      STR      R0,[R9, #+0]
    334                  Move_Y = balance_pwm_b + velocity_pwm_b;
   \       0xE2   0x....'....        LDR.W    R10,??DataTable11_56
   \       0xE6   0x6831             LDR      R1,[R6, #+0]
   \       0xE8   0xF8D8 0x0000      LDR      R0,[R8, #+0]
   \       0xEC   0x....'....        BL       __aeabi_fadd
   \       0xF0   0xF8CA 0x0000      STR      R0,[R10, #+0]
    335                  Move_Z = -balance_pwm_c;
   \       0xF4   0x....             LDR.N    R0,??DataTable11_57
   \       0xF6   0x6839             LDR      R1,[R7, #+0]
   \       0xF8   0xF091 0x4100      EORS     R1,R1,#0x80000000
   \       0xFC   0x6001             STR      R1,[R0, #+0]
    336                  //逆向運動學分析
    337                  Kinematic_Analysis(Move_X,Move_Y,Move_Z);
   \       0xFE   0x6802             LDR      R2,[R0, #+0]
   \      0x100   0xF8DA 0x1000      LDR      R1,[R10, #+0]
   \      0x104   0xF8D9 0x0000      LDR      R0,[R9, #+0]
   \      0x108   0x....'....        BL       Kinematic_Analysis
    338                  
    339                  /*//========== 2D old way ==========
    340                  encoder_a=read_Encoder(1);
    341                  velocity_pwm_x = -control_velocity(encoder_a);
    342                  balance_pwm_x = -control_balance(att.rol,Mpu.deg_s.x);
    343                  PWM_a = balance_pwm_x + velocity_pwm_x ;
    344                  Max_pwm_limit(Max_Pwm);
    345                  if (nvic_flag == 1){
    346                      //if(Max_Pwm++>8300)Max_Pwm=8300;//慢慢上升
    347                      if ((att.rol>=-10.0) && (att.rol <=10.0)){//balance
    348          //                if (increase <40){
    349          //                    increase+=1;
    350          //                    PWM_a=PWM_a*0.7;
    351          //                }
    352                          set_pwm(1,PWM_a,0,0);
    353                      }else if(((att.rol <-10.0) && (att.rol >=-15.0)) || ((att.rol > 10.0) && (att.rol<=15))) {//out balance, stop wheel
    354                          PWM_a = 0;
    355                          set_pwm(1,0,0,0);
    356                      }else if(att.rol<-15){//jump up
    357                          PWM_a =-6100;
    358                          set_pwm(1,PWM_a,0,0);
    359                      }else if(att.rol>15){//jump up
    360                          PWM_a =5050;
    361                          set_pwm(1,PWM_a,0,0);
    362                      }
    363                  }else{
    364          //            set_pwm(1,0,0,0);
    365                  }
    366                  // ========== old way ==========*/
    367                  
    368                  /*========== 3D PID ==========
    369                  encoder_a=read_Encoder(1);
    370                  encoder_b=read_Encoder(2);
    371                  encoder_c=read_Encoder(3);
    372                  velocity_pwm_a=-control_velocity_x(encoder_a);
    373                  velocity_pwm_b=-control_velocity_y(encoder_b);
    374                  velocity_pwm_c=-control_velocity_z(encoder_c);
    375                  balance_pwm_a=-control_balance_x(att.rol,Mpu.deg_s.x);
    376                  balance_pwm_b=-control_balance_y(att.pit,Mpu.deg_s.y);
    377                  balance_pwm_c=-control_balance_z(att.yaw,Mpu.deg_s.z);
    378                  // rol => 45 , pit => -35.3
    379                  PWM_a=0.816137590080160f*balance_pwm_a+0.577857624383505f*balance_pwm_c;//+velocity_pwm_a;
    380                  PWM_b=-0.408607044761925f*balance_pwm_a+0.707106781186548f*balance_pwm_b+0.577096424326928f*balance_pwm_c;//+velocity_pwm_b;
    381                  PWM_c=-0.408607044761925f*balance_pwm_a-0.707106781186548f*balance_pwm_b+0.577096424326928f*balance_pwm_c;//+velocity_pwm_c;
    382                  */    
    383          
    384                  Max_pwm_limit(Max_Pwm);
   \      0x10C   0x....             LDR.N    R0,??DataTable11_58
   \      0x10E   0x6800             LDR      R0,[R0, #+0]
   \      0x110   0x....'....        BL       Max_pwm_limit
    385                  if (nvic_flag == 1){
   \      0x114   0x....             LDR.N    R0,??DataTable11_59
   \      0x116   0x6800             LDR      R0,[R0, #+0]
   \      0x118   0x2801             CMP      R0,#+1
   \      0x11A   0xF040 0x80B5      BNE.W    ??TIM5_IRQHandler_1
    386          //            if(Max_Pwm++>8300)Max_Pwm=8300;//慢慢上升
    387                      if ((att.rol>=-9.0) && (att.rol <=9.0)){//balance
   \      0x11E   0x....             LDR.N    R2,??DataTable11_60  ;; 0xc1100000
   \      0x120   0x6868             LDR      R0,[R5, #+4]
   \      0x122   0x0011             MOVS     R1,R2
   \      0x124   0x....'....        BL       __aeabi_cfrcmple
   \      0x128   0xD85A             BHI.N    ??TIM5_IRQHandler_2
   \      0x12A   0x6868             LDR      R0,[R5, #+4]
   \      0x12C   0x....             LDR.N    R1,??DataTable11_61  ;; 0x41100001
   \      0x12E   0x....'....        BL       __aeabi_cfcmple
   \      0x132   0xD255             BCS.N    ??TIM5_IRQHandler_2
    388                          //3D balance
    389                          if (att.pit>=pit_angle_targer-6 && att.pit<=pit_angle_targer+6){
   \      0x134   0x....             LDR.N    R6,??DataTable11_22
   \      0x136   0x6831             LDR      R1,[R6, #+0]
   \      0x138   0x....             LDR.N    R0,??DataTable11_62  ;; 0xc0c00000
   \      0x13A   0x....'....        BL       __aeabi_fadd
   \      0x13E   0x0001             MOVS     R1,R0
   \      0x140   0x6828             LDR      R0,[R5, #+0]
   \      0x142   0x....'....        BL       __aeabi_cfrcmple
   \      0x146   0xD811             BHI.N    ??TIM5_IRQHandler_3
   \      0x148   0x6831             LDR      R1,[R6, #+0]
   \      0x14A   0x....             LDR.N    R0,??DataTable11_63  ;; 0x40c00000
   \      0x14C   0x....'....        BL       __aeabi_fadd
   \      0x150   0x6829             LDR      R1,[R5, #+0]
   \      0x152   0x....'....        BL       __aeabi_cfrcmple
   \      0x156   0xD809             BHI.N    ??TIM5_IRQHandler_3
    390                              set_pwm(123,PWM_a,PWM_b,PWM_c);
   \      0x158   0x....             LDR.N    R0,??DataTable11_28
   \      0x15A   0x6803             LDR      R3,[R0, #+0]
   \      0x15C   0x....             LDR.N    R0,??DataTable11_27
   \      0x15E   0x6802             LDR      R2,[R0, #+0]
   \      0x160   0x....             LDR.N    R0,??DataTable11_26
   \      0x162   0x6801             LDR      R1,[R0, #+0]
   \      0x164   0x207B             MOVS     R0,#+123
   \      0x166   0x....'....        BL       set_pwm
   \      0x16A   0xE013             B.N      ??TIM5_IRQHandler_4
    391                          }else{
    392                              //2D balance
    393                              set_pwm(1,1.3*PWM_a,0,0);
                                               ^
Warning[Pa093]: implicit conversion from floating point to integer
   \                     ??TIM5_IRQHandler_3: (+1)
   \      0x16C   0x2300             MOVS     R3,#+0
   \      0x16E   0x2200             MOVS     R2,#+0
   \      0x170   0x0015             MOVS     R5,R2
   \      0x172   0x001E             MOVS     R6,R3
   \      0x174   0x....             LDR.N    R0,??DataTable11_26
   \      0x176   0x6800             LDR      R0,[R0, #+0]
   \      0x178   0x....'....        BL       __aeabi_i2d
   \      0x17C   0x....             LDR.N    R2,??DataTable11_64  ;; 0xcccccccd
   \      0x17E   0x....             LDR.N    R3,??DataTable11_65  ;; 0x3ff4cccc
   \      0x180   0x....'....        BL       __aeabi_dmul
   \      0x184   0x....'....        BL       __aeabi_d2iz
   \      0x188   0x0001             MOVS     R1,R0
   \      0x18A   0x0033             MOVS     R3,R6
   \      0x18C   0x002A             MOVS     R2,R5
   \      0x18E   0x2001             MOVS     R0,#+1
   \      0x190   0x....'....        BL       set_pwm
    394                          }
    395                          //2D jump to 3D
    396                          if (jump_state==2){
   \                     ??TIM5_IRQHandler_4: (+1)
   \      0x194   0x....             LDR.N    R0,??DataTable11_66
   \      0x196   0x6800             LDR      R0,[R0, #+0]
   \      0x198   0x2802             CMP      R0,#+2
   \      0x19A   0xD175             BNE.N    ??TIM5_IRQHandler_1
    397                              //2D jump to 3D
    398                              jump_pwm+=1500;
   \      0x19C   0x....             LDR.N    R0,??DataTable11_67
   \      0x19E   0x6801             LDR      R1,[R0, #+0]
   \      0x1A0   0xF201 0x51DC      ADDW     R1,R1,#+1500
   \      0x1A4   0x6001             STR      R1,[R0, #+0]
    399                              if(jump_pwm>jump_pwm_max) jump_pwm=jump_pwm_max;//slowly add
   \      0x1A6   0x....             LDR.N    R1,??DataTable11_68
   \      0x1A8   0x680A             LDR      R2,[R1, #+0]
   \      0x1AA   0x6803             LDR      R3,[R0, #+0]
   \      0x1AC   0x429A             CMP      R2,R3
   \      0x1AE   0xDA01             BGE.N    ??TIM5_IRQHandler_5
   \      0x1B0   0x6809             LDR      R1,[R1, #+0]
   \      0x1B2   0x6001             STR      R1,[R0, #+0]
    400                              set_pwm(123,1.3*PWM_a,-jump_pwm,jump_pwm);
                                                 ^
Warning[Pa093]: implicit conversion from floating point to integer
   \                     ??TIM5_IRQHandler_5: (+1)
   \      0x1B4   0x6803             LDR      R3,[R0, #+0]
   \      0x1B6   0x6802             LDR      R2,[R0, #+0]
   \      0x1B8   0x4252             RSBS     R2,R2,#+0
   \      0x1BA   0x0015             MOVS     R5,R2
   \      0x1BC   0x001E             MOVS     R6,R3
   \      0x1BE   0x....             LDR.N    R0,??DataTable11_26
   \      0x1C0   0x6800             LDR      R0,[R0, #+0]
   \      0x1C2   0x....'....        BL       __aeabi_i2d
   \      0x1C6   0x....             LDR.N    R2,??DataTable11_64  ;; 0xcccccccd
   \      0x1C8   0x....             LDR.N    R3,??DataTable11_65  ;; 0x3ff4cccc
   \      0x1CA   0x....'....        BL       __aeabi_dmul
   \      0x1CE   0x....'....        BL       __aeabi_d2iz
   \      0x1D2   0x0001             MOVS     R1,R0
   \      0x1D4   0x0033             MOVS     R3,R6
   \      0x1D6   0x002A             MOVS     R2,R5
   \      0x1D8   0x207B             MOVS     R0,#+123
   \      0x1DA   0x....'....        BL       set_pwm
   \      0x1DE   0xE053             B.N      ??TIM5_IRQHandler_1
    401                          }
    402                      }else if(((att.rol <-9.0) && (att.rol >=-15.0)) || ((att.rol > 9.0) && (att.rol<=12))) {//out balance, stop wheel
   \                     ??TIM5_IRQHandler_2: (+1)
   \      0x1E0   0x6868             LDR      R0,[R5, #+4]
   \      0x1E2   0x0011             MOVS     R1,R2
   \      0x1E4   0x....'....        BL       __aeabi_cfcmple
   \      0x1E8   0xD204             BCS.N    ??TIM5_IRQHandler_6
   \      0x1EA   0x6868             LDR      R0,[R5, #+4]
   \      0x1EC   0x....             LDR.N    R1,??DataTable11_69  ;; 0xc1700000
   \      0x1EE   0x....'....        BL       __aeabi_cfrcmple
   \      0x1F2   0xD909             BLS.N    ??TIM5_IRQHandler_7
   \                     ??TIM5_IRQHandler_6: (+1)
   \      0x1F4   0x6868             LDR      R0,[R5, #+4]
   \      0x1F6   0x....             LDR.N    R1,??DataTable11_61  ;; 0x41100001
   \      0x1F8   0x....'....        BL       __aeabi_cfrcmple
   \      0x1FC   0xD811             BHI.N    ??TIM5_IRQHandler_8
   \      0x1FE   0x6868             LDR      R0,[R5, #+4]
   \      0x200   0x....             LDR.N    R1,??DataTable11_70  ;; 0x41400001
   \      0x202   0x....'....        BL       __aeabi_cfcmple
   \      0x206   0xD20C             BCS.N    ??TIM5_IRQHandler_8
    403                          PWM_a = 0;
   \                     ??TIM5_IRQHandler_7: (+1)
   \      0x208   0x2000             MOVS     R0,#+0
   \      0x20A   0x....             LDR.N    R1,??DataTable11_26
   \      0x20C   0x6008             STR      R0,[R1, #+0]
    404                          jump_pwm=0;
   \      0x20E   0x2000             MOVS     R0,#+0
   \      0x210   0x....             LDR.N    R1,??DataTable11_67
   \      0x212   0x6008             STR      R0,[R1, #+0]
    405                          set_pwm(1,0,0,0);
   \      0x214   0x2300             MOVS     R3,#+0
   \      0x216   0x2200             MOVS     R2,#+0
   \      0x218   0x2100             MOVS     R1,#+0
   \      0x21A   0x2001             MOVS     R0,#+1
   \      0x21C   0x....'....        BL       set_pwm
   \      0x220   0xE032             B.N      ??TIM5_IRQHandler_1
    406                      }else if(att.rol<-15){//jump up
   \                     ??TIM5_IRQHandler_8: (+1)
   \      0x222   0x6868             LDR      R0,[R5, #+4]
   \      0x224   0x....             LDR.N    R1,??DataTable11_69  ;; 0xc1700000
   \      0x226   0x....'....        BL       __aeabi_cfcmple
   \      0x22A   0xD209             BCS.N    ??TIM5_IRQHandler_9
    407                          PWM_a =-7350;
   \      0x22C   0x....             LDR.N    R0,??DataTable11_26
   \      0x22E   0x....             LDR.N    R1,??DataTable11_71  ;; 0xffffe34a
   \      0x230   0x6001             STR      R1,[R0, #+0]
    408                          set_pwm(1,PWM_a,0,0);
   \      0x232   0x2300             MOVS     R3,#+0
   \      0x234   0x2200             MOVS     R2,#+0
   \      0x236   0x6801             LDR      R1,[R0, #+0]
   \      0x238   0x2001             MOVS     R0,#+1
   \      0x23A   0x....'....        BL       set_pwm
   \      0x23E   0xE023             B.N      ??TIM5_IRQHandler_1
    409                      }else if(att.rol>12 && att.rol<15){//jump up
   \                     ??TIM5_IRQHandler_9: (+1)
   \      0x240   0x6868             LDR      R0,[R5, #+4]
   \      0x242   0x....             LDR.N    R1,??DataTable11_70  ;; 0x41400001
   \      0x244   0x....'....        BL       __aeabi_cfrcmple
   \      0x248   0xD80F             BHI.N    ??TIM5_IRQHandler_10
   \      0x24A   0x6868             LDR      R0,[R5, #+4]
   \      0x24C   0x....             LDR.N    R1,??DataTable11_72  ;; 0x41700000
   \      0x24E   0x....'....        BL       __aeabi_cfcmple
   \      0x252   0xD20A             BCS.N    ??TIM5_IRQHandler_10
    410                          PWM_a =4550;
   \      0x254   0x....             LDR.N    R0,??DataTable11_26
   \      0x256   0xF241 0x11C6      MOVW     R1,#+4550
   \      0x25A   0x6001             STR      R1,[R0, #+0]
    411                          set_pwm(1,PWM_a,0,0);
   \      0x25C   0x2300             MOVS     R3,#+0
   \      0x25E   0x2200             MOVS     R2,#+0
   \      0x260   0x6801             LDR      R1,[R0, #+0]
   \      0x262   0x2001             MOVS     R0,#+1
   \      0x264   0x....'....        BL       set_pwm
   \      0x268   0xE00E             B.N      ??TIM5_IRQHandler_1
    412                      }else if(att.rol>15){//jump up
   \                     ??TIM5_IRQHandler_10: (+1)
   \      0x26A   0x6868             LDR      R0,[R5, #+4]
   \      0x26C   0x....             LDR.N    R1,??DataTable11_73  ;; 0x41700001
   \      0x26E   0x....'....        BL       __aeabi_cfrcmple
   \      0x272   0xD809             BHI.N    ??TIM5_IRQHandler_1
    413                          PWM_a =4350;
   \      0x274   0x....             LDR.N    R0,??DataTable11_26
   \      0x276   0xF241 0x01FE      MOVW     R1,#+4350
   \      0x27A   0x6001             STR      R1,[R0, #+0]
    414                          set_pwm(1,PWM_a,0,0);
   \      0x27C   0x2300             MOVS     R3,#+0
   \      0x27E   0x2200             MOVS     R2,#+0
   \      0x280   0x6801             LDR      R1,[R0, #+0]
   \      0x282   0x2001             MOVS     R0,#+1
   \      0x284   0x....'....        BL       set_pwm
    415                      }
    416          //        }else{
    417          //            PWM_a = 0, PWM_b = 0, PWM_c = 0;
    418          //            set_pwm(123, PWM_a, PWM_b, PWM_c);
    419                  }
    420                  Anotc_SendData();
   \                     ??TIM5_IRQHandler_1: (+1)
   \      0x288   0x....'....        BL       Anotc_SendData
    421                  time_check(&run_stop);
   \      0x28C   0x....             LDR.N    R0,??DataTable11_74
   \      0x28E   0x....'....        BL       time_check
    422              }
    423              TIM5->SR&=~(1<<0);//清除更新中斷旗標  TIM4->SR = (uint16_t)~TIM_FLAG;
   \                     ??TIM5_IRQHandler_0: (+1)
   \      0x292   0x8821             LDRH     R1,[R4, #+0]
   \      0x294   0xF64F 0x70FE      MOVW     R0,#+65534
   \      0x298   0x4001             ANDS     R1,R0,R1
   \      0x29A   0x8021             STRH     R1,[R4, #+0]
    424          }
   \      0x29C   0xE8BD 0x8FF1      POP      {R0,R4-R11,PC}   ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11:
   \        0x0   0x....'....        DC32     running_tim_cnt

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_1:
   \        0x0   0x4000'0C24        DC32     0x40000c24

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_2:
   \        0x0   0x3A83'126F        DC32     0x3a83126f

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_3:
   \        0x0   0x....'....        DC32     `control_velocity_x::Encoder_Least`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_4:
   \        0x0   0x....'....        DC32     `control_velocity_x::Encoder`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_5:
   \        0x0   0x3FE6'6666        DC32     0x3fe66666

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_6:
   \        0x0   0x3FD3'3333        DC32     0x3fd33333

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_7:
   \        0x0   0x....'....        DC32     `control_velocity_x::Encoder_Integral`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_8:
   \        0x0   0x46D2'F001        DC32     0x46d2f001

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_9:
   \        0x0   0x46D2'F000        DC32     0x46d2f000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_10:
   \        0x0   0xC6D2'F000        DC32     0xc6d2f000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_11:
   \        0x0   0x....'....        DC32     flag_stop

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_12:
   \        0x0   0x....'....        DC32     `control_velocity_x::Velocity`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_13:
   \        0x0   0x....'....        DC32     Velocity_KP

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_14:
   \        0x0   0x....'....        DC32     Velocity_KI

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_15:
   \        0x0   0x....'....        DC32     rol_angle_targer

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_16:
   \        0x0   0x....'....        DC32     Balance_KP

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_17:
   \        0x0   0x....'....        DC32     Balance_KD

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_18:
   \        0x0   0x....'....        DC32     `control_velocity_y::Encoder_Least`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_19:
   \        0x0   0x....'....        DC32     `control_velocity_y::Encoder`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_20:
   \        0x0   0x....'....        DC32     `control_velocity_y::Encoder_Integral`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_21:
   \        0x0   0x....'....        DC32     `control_velocity_y::Velocity`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_22:
   \        0x0   0x....'....        DC32     pit_angle_targer

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_23:
   \        0x0   0x....'....        DC32     `control_balance_z::Bias_last`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_24:
   \        0x0   0x....'....        DC32     Gryo_KP

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_25:
   \        0x0   0x....'....        DC32     Gryo_KD

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_26:
   \        0x0   0x....'....        DC32     PWM_a

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_27:
   \        0x0   0x....'....        DC32     PWM_b

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_28:
   \        0x0   0x....'....        DC32     PWM_c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_29:
   \        0x0   0x4002'0400        DC32     0x40020400

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_30:
   \        0x0   0x4001'0434        DC32     0x40010434

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_31:
   \        0x0   0x4002'0C00        DC32     0x40020c00

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_32:
   \        0x0   0x4001'0438        DC32     0x40010438

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_33:
   \        0x0   0x4001'043C        DC32     0x4001043c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_34:
   \        0x0   0x....'....        DC32     Encoder_X

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_35:
   \        0x0   0xE858'4CAA        DC32     0xe8584caa

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_36:
   \        0x0   0x3FFB'B67A        DC32     0x3ffbb67a

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_37:
   \        0x0   0x....'....        DC32     Encoder_Y

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_38:
   \        0x0   0x....'....        DC32     Encoder_Z

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_39:
   \        0x0   0x3F5D'B3D7        DC32     0x3f5db3d7

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_40:
   \        0x0   0x....'....        DC32     gyro_raw_f

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_41:
   \        0x0   0x....'....        DC32     Mpu

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_42:
   \        0x0   0x....'....        DC32     acc_att_lpf

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_43:
   \        0x0   0x....'....        DC32     acc_raw_f

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_44:
   \        0x0   0x4000'0C10        DC32     0x40000c10

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_45:
   \        0x0   0x....'....        DC32     run_start

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_46:
   \        0x0   0x....'....        DC32     encoder_a

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_47:
   \        0x0   0x....'....        DC32     encoder_b

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_48:
   \        0x0   0x....'....        DC32     encoder_c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_49:
   \        0x0   0x....'....        DC32     balance_pwm_a

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_50:
   \        0x0   0x....'....        DC32     att

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_51:
   \        0x0   0x....'....        DC32     balance_pwm_b

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_52:
   \        0x0   0x....'....        DC32     balance_pwm_c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_53:
   \        0x0   0x....'....        DC32     velocity_pwm_a

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_54:
   \        0x0   0x....'....        DC32     velocity_pwm_b

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_55:
   \        0x0   0x....'....        DC32     Move_X

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_56:
   \        0x0   0x....'....        DC32     Move_Y

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_57:
   \        0x0   0x....'....        DC32     Move_Z

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_58:
   \        0x0   0x....'....        DC32     Max_Pwm

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_59:
   \        0x0   0x....'....        DC32     nvic_flag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_60:
   \        0x0   0xC110'0000        DC32     0xc1100000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_61:
   \        0x0   0x4110'0001        DC32     0x41100001

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_62:
   \        0x0   0xC0C0'0000        DC32     0xc0c00000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_63:
   \        0x0   0x40C0'0000        DC32     0x40c00000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_64:
   \        0x0   0xCCCC'CCCD        DC32     0xcccccccd

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_65:
   \        0x0   0x3FF4'CCCC        DC32     0x3ff4cccc

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_66:
   \        0x0   0x....'....        DC32     jump_state

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_67:
   \        0x0   0x....'....        DC32     jump_pwm

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_68:
   \        0x0   0x....'....        DC32     jump_pwm_max

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_69:
   \        0x0   0xC170'0000        DC32     0xc1700000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_70:
   \        0x0   0x4140'0001        DC32     0x41400001

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_71:
   \        0x0   0xFFFF'E34A        DC32     0xffffe34a

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_72:
   \        0x0   0x4170'0000        DC32     0x41700000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_73:
   \        0x0   0x4170'0001        DC32     0x41700001

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_74:
   \        0x0   0x....'....        DC32     run_stop

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      16   Encoder_Analysis
        16   -> __aeabi_d2f
        16   -> __aeabi_dmul
        16   -> __aeabi_f2d
        16   -> __aeabi_fadd
        16   -> __aeabi_fmul
        16   -> __aeabi_fsub
      32   Kinematic_Analysis
        32   -> __aeabi_f2iz
        32   -> __aeabi_fadd
        32   -> __aeabi_fmul
        32   -> __aeabi_fsub
       0   Max_pwm_limit
      40   TIM5_IRQHandler
        40   -> Anotc_SendData
        40   -> Encoder_Analysis
        40   -> Kinematic_Analysis
        40   -> MPU6050_Get_Display
        40   -> Max_pwm_limit
        40   -> __aeabi_d2iz
        40   -> __aeabi_dmul
        40   -> __aeabi_f2iz
        40   -> __aeabi_fadd
        40   -> __aeabi_i2d
        40   -> __aeabi_i2f
        40   -> ahrs
        40   -> control_balance_x
        40   -> control_balance_y
        40   -> control_balance_z
        40   -> control_velocity_x
        40   -> control_velocity_y
        40   -> read_Encoder
        40   -> set_pwm
        40   -> time_check
        40 __aeabi_cfcmple
        40 __aeabi_cfrcmple
      24   ahrs
        24   -> Matrix_ready
        24   -> acc_iir_lpf
        24   -> get_acc_g
        24   -> get_acc_raw
        24   -> get_deg_s
        24   -> get_gyro_raw
        24   -> get_rad_s
        24   -> mahony_update
      16   control_balance_x
        16   -> __aeabi_fadd
        16   -> __aeabi_fmul
        16   -> __aeabi_fsub
      16   control_balance_y
        16   -> __aeabi_fadd
        16   -> __aeabi_fmul
        16   -> __aeabi_fsub
      24   control_balance_z
        24   -> __aeabi_f2iz
        24   -> __aeabi_fadd
        24   -> __aeabi_fmul
        24   -> __aeabi_fsub
        24   -> __aeabi_i2f
      24   control_velocity_x
        24   -> __aeabi_d2f
        24   -> __aeabi_dadd
        24   -> __aeabi_dmul
        24   -> __aeabi_f2d
        24   -> __aeabi_fadd
        24   -> __aeabi_fmul
        24   -> __aeabi_i2f
        24 __aeabi_cfcmple
        24 __aeabi_cfrcmple
      24   control_velocity_y
        24   -> __aeabi_d2f
        24   -> __aeabi_dadd
        24   -> __aeabi_dmul
        24   -> __aeabi_f2d
        24   -> __aeabi_fadd
        24   -> __aeabi_fmul
        24   -> __aeabi_i2f
        24 __aeabi_cfcmple
        24 __aeabi_cfrcmple
       0   jump_program
      24   set_pwm
        24   -> GPIO_ResetBits
        24   -> GPIO_SetBits
        24   -> int_abs
       8   time_check
         8   -> __aeabi_fmul
         8   -> __aeabi_fsub
         8   -> __aeabi_ui2f


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable11
       4  ??DataTable11_1
       4  ??DataTable11_10
       4  ??DataTable11_11
       4  ??DataTable11_12
       4  ??DataTable11_13
       4  ??DataTable11_14
       4  ??DataTable11_15
       4  ??DataTable11_16
       4  ??DataTable11_17
       4  ??DataTable11_18
       4  ??DataTable11_19
       4  ??DataTable11_2
       4  ??DataTable11_20
       4  ??DataTable11_21
       4  ??DataTable11_22
       4  ??DataTable11_23
       4  ??DataTable11_24
       4  ??DataTable11_25
       4  ??DataTable11_26
       4  ??DataTable11_27
       4  ??DataTable11_28
       4  ??DataTable11_29
       4  ??DataTable11_3
       4  ??DataTable11_30
       4  ??DataTable11_31
       4  ??DataTable11_32
       4  ??DataTable11_33
       4  ??DataTable11_34
       4  ??DataTable11_35
       4  ??DataTable11_36
       4  ??DataTable11_37
       4  ??DataTable11_38
       4  ??DataTable11_39
       4  ??DataTable11_4
       4  ??DataTable11_40
       4  ??DataTable11_41
       4  ??DataTable11_42
       4  ??DataTable11_43
       4  ??DataTable11_44
       4  ??DataTable11_45
       4  ??DataTable11_46
       4  ??DataTable11_47
       4  ??DataTable11_48
       4  ??DataTable11_49
       4  ??DataTable11_5
       4  ??DataTable11_50
       4  ??DataTable11_51
       4  ??DataTable11_52
       4  ??DataTable11_53
       4  ??DataTable11_54
       4  ??DataTable11_55
       4  ??DataTable11_56
       4  ??DataTable11_57
       4  ??DataTable11_58
       4  ??DataTable11_59
       4  ??DataTable11_6
       4  ??DataTable11_60
       4  ??DataTable11_61
       4  ??DataTable11_62
       4  ??DataTable11_63
       4  ??DataTable11_64
       4  ??DataTable11_65
       4  ??DataTable11_66
       4  ??DataTable11_67
       4  ??DataTable11_68
       4  ??DataTable11_69
       4  ??DataTable11_7
       4  ??DataTable11_70
       4  ??DataTable11_71
       4  ??DataTable11_72
       4  ??DataTable11_73
       4  ??DataTable11_74
       4  ??DataTable11_8
       4  ??DataTable11_9
       4  Balance_KD
       4  Balance_KP
       4  Bias_last
       4  Encoder
       4  Encoder
      92  Encoder_Analysis
       4  Encoder_Integral
       4  Encoder_Integral
       4  Encoder_Least
       4  Encoder_Least
       4  Encoder_X
       4  Encoder_Y
       4  Encoder_Z
       4  Gryo_KD
       4  Gryo_KP
     122  Kinematic_Analysis
       4  Max_Pwm
      68  Max_pwm_limit
       4  Move_X
       4  Move_Y
       4  Move_Z
       4  PWM_a
       4  PWM_b
       4  PWM_c
     672  TIM5_IRQHandler
       4  Velocity
       4  Velocity
       4  Velocity_KI
       4  Velocity_KP
      88  ahrs
       4  balance_pwm_a
       4  balance_pwm_b
       4  balance_pwm_c
      60  control_balance_x
      60  control_balance_y
      88  control_balance_z
     198  control_velocity_x
     198  control_velocity_y
       4  encoder_a
       4  encoder_b
       4  encoder_c
       4  flag_stop
       4  increase
       2  jump_program
       4  jump_pwm
       4  jump_pwm_max
       4  jump_state
       4  nvic_flag
       4  pit_angle_offset_l
       4  pit_angle_offset_r
       4  pit_angle_targer
       4  rol_angle_offset_l
       4  rol_angle_offset_r
       4  rol_angle_targer
      16  run_start
      16  run_stop
       4  running_tim_cnt
     162  set_pwm
      58  time_check
       4  velocity_pwm_a
       4  velocity_pwm_b
       4  velocity_pwm_c
       4  yaw_angle_targer

 
   172 bytes in section .bss
    52 bytes in section .data
 2'168 bytes in section .text
 
 2'168 bytes of CODE memory
   224 bytes of DATA memory

Errors: none
Warnings: 8
