###############################################################################
#
# IAR ANSI C/C++ Compiler V8.40.2.214/W32 for ARM         23/Aug/2021  13:31:52
# Copyright 1999-2019 IAR Systems AB.
#
#    Cpu mode     =  
#    Endian       =  little
#    Source file  =
#        E:\STM32Project\Cubli-with-STM32F429\Cubli\User\src\timer.c
#    Command line =
#        -f C:\Users\LABPC1~1\AppData\Local\Temp\EW6451.tmp
#        (E:\STM32Project\Cubli-with-STM32F429\Cubli\User\src\timer.c -D
#        USE_STDPERIPH_DRIVER -D STM32F429_439xx -lC
#        E:\STM32Project\Cubli-with-STM32F429\Cubli\Debug\List -o
#        E:\STM32Project\Cubli-with-STM32F429\Cubli\Debug\Obj --no_cse
#        --no_unroll --no_inline --no_code_motion --no_tbaa --no_clustering
#        --no_scheduling --debug --endian=little --cpu=Cortex-M4 -e --fpu=None
#        --dlib_config "D:\IAR Systems\Embedded Workbench
#        8.3\arm\inc\c\DLib_Config_Normal.h" -I
#        E:\STM32Project\Cubli-with-STM32F429\Cubli\..\STM32F4xx_DSP_StdPeriph_Lib_V1.8.0\Libraries\CMSIS\Device\ST\STM32F4xx\Include\
#        -I
#        E:\STM32Project\Cubli-with-STM32F429\Cubli\..\STM32F4xx_DSP_StdPeriph_Lib_V1.8.0\Libraries\CMSIS\Device\ST\STM32F4xx\Source\Templates\
#        -I
#        E:\STM32Project\Cubli-with-STM32F429\Cubli\..\STM32F4xx_DSP_StdPeriph_Lib_V1.8.0\Libraries\CMSIS\Device\ST\STM32F4xx\Source\Templates\iar\
#        -I
#        E:\STM32Project\Cubli-with-STM32F429\Cubli\..\STM32F4xx_DSP_StdPeriph_Lib_V1.8.0\Libraries\STM32F4xx_StdPeriph_Driver\inc\
#        -I
#        E:\STM32Project\Cubli-with-STM32F429\Cubli\..\STM32F4xx_DSP_StdPeriph_Lib_V1.8.0\Libraries\STM32F4xx_StdPeriph_Driver\src\
#        -I E:\STM32Project\Cubli-with-STM32F429\Cubli\user\inc\ -I
#        E:\STM32Project\Cubli-with-STM32F429\Cubli\user\src\ -Ol
#        --use_c++_inline -I "D:\IAR Systems\Embedded Workbench
#        8.3\arm\CMSIS\Core\Include\" -I "D:\IAR Systems\Embedded Workbench
#        8.3\arm\CMSIS\DSP\Include\")
#    Locale       =  C
#    List file    =
#        E:\STM32Project\Cubli-with-STM32F429\Cubli\Debug\List\timer.lst
#    Object file  =
#        E:\STM32Project\Cubli-with-STM32F429\Cubli\Debug\Obj\timer.o
#
###############################################################################

E:\STM32Project\Cubli-with-STM32F429\Cubli\User\src\timer.c
      1          #include "timer.h"
      2          

   \                                 In section .bss, align 4
      3          uint32_t running_tim_cnt = 0;
   \                     running_tim_cnt:
   \        0x0                      DS8 4
      4          

   \                                 In section .data, align 4
      5          int Max_Pwm = 8300;
   \                     Max_Pwm:
   \        0x0   0x0000'206C        DC32 8'300

   \                                 In section .bss, align 4
      6          int flag_stop = 0;
   \                     flag_stop:
   \        0x0                      DS8 4

   \                                 In section .bss, align 4
      7          int nvic_flag=0;
   \                     nvic_flag:
   \        0x0                      DS8 4

   \                                 In section .bss, align 4
      8          int jump_state=0;
   \                     jump_state:
   \        0x0                      DS8 4
      9          

   \                                 In section .data, align 4
     10          float rol_angle_target=-4.5;//-1.3;
   \                     rol_angle_target:
   \        0x0   0xC090'0000        DC32 0xc090'0000

   \                                 In section .data, align 4
     11          float rol_angle_offset_r=15;//-33.0+45;
   \                     rol_angle_offset_r:
   \        0x0   0x4170'0000        DC32 0x4170'0000

   \                                 In section .data, align 4
     12          float rol_angle_offset_l=-15;//-63.0+45;
   \                     rol_angle_offset_l:
   \        0x0   0xC170'0000        DC32 0xc170'0000
     13          

   \                                 In section .data, align 4
     14          float pit_angle_target=0.3;//-45.7;////1.8;//-53.45;
   \                     pit_angle_target:
   \        0x0   0x3E99'999A        DC32 0x3e99'999a

   \                                 In section .data, align 4
     15          float pit_angle_offset_r=15;//-38.45;
   \                     pit_angle_offset_r:
   \        0x0   0x4170'0000        DC32 0x4170'0000

   \                                 In section .data, align 4
     16          float pit_angle_offset_l=-15;//-68.45;
   \                     pit_angle_offset_l:
   \        0x0   0xC170'0000        DC32 0xc170'0000
     17          
     18          /*
     19          float Velocity_KP = 60;
     20          float Velocity_KI = 0.03;
     21          float Balance_KP = 1360;
     22          float Balance_KD = 210.7;
     23          float Gryo_KP = 50.5;
     24          float Gryo_KD = 10.9;
     25          //float Balance_KP = 1150;
     26          ////float Balance_KI = 0;
     27          //float Balance_KD = 350.7;
     28          //float Gryo_KP = 0.55;
     29          //float Gryo_KD = 0.9;
     30          */
     31          

   \                                 In section .data, align 4
     32          float Velocity_KP = 40;
   \                     Velocity_KP:
   \        0x0   0x4220'0000        DC32 0x4220'0000

   \                                 In section .data, align 4
     33          float Velocity_KI = 0.03;
   \                     Velocity_KI:
   \        0x0   0x3CF5'C28F        DC32 0x3cf5'c28f

   \                                 In section .data, align 4
     34          float Balance_KP = 900;
   \                     Balance_KP:
   \        0x0   0x4461'0000        DC32 0x4461'0000

   \                                 In section .data, align 4
     35          float Balance_KD = 155;
   \                     Balance_KD:
   \        0x0   0x431B'0000        DC32 0x431b'0000

   \                                 In section .data, align 4
     36          float Gryo_KP = 10;
   \                     Gryo_KP:
   \        0x0   0x4120'0000        DC32 0x4120'0000

   \                                 In section .data, align 4
     37          float Gryo_KD = 1;
   \                     Gryo_KD:
   \        0x0   0x3F80'0000        DC32 0x3f80'0000
     38          //=================== old way ===================

   \                                 In section .bss, align 4
     39          float velocity_pwm_x = 0.0;
   \                     velocity_pwm_x:
   \        0x0                      DS8 4

   \                                 In section .bss, align 4
     40          int balance_pwm_x = 0;
   \                     balance_pwm_x:
   \        0x0                      DS8 4

   \                                 In section .data, align 4
     41          int Velocity_KP_old = 80;
   \                     Velocity_KP_old:
   \        0x0   0x0000'0050        DC32 80

   \                                 In section .bss, align 4
     42          int Velocity_KI_old = 0.06;
                                       ^
Warning[Pa092]: implicit conversion to integer does not preserve the value
   \                     Velocity_KI_old:
   \        0x0                      DS8 4

   \                                 In section .data, align 4
     43          int Balance_KP_old = 900;
   \                     Balance_KP_old:
   \        0x0   0x0000'0384        DC32 900

   \                                 In section .data, align 4
     44          float Balance_Ki_old = 0.001;
   \                     Balance_Ki_old:
   \        0x0   0x3A83'126F        DC32 0x3a83'126f

   \                                 In section .data, align 4
     45          float Balance_KD_old = 185;
   \                     Balance_KD_old:
   \        0x0   0x4339'0000        DC32 0x4339'0000
     46          //*===============================
     47          //PID
     48          //===============================*/

   \                                 In section .text, align 2, keep-with-next
     49          float control_velocity(int encoder){
   \                     control_velocity: (+1)
   \        0x0   0xB5F8             PUSH     {R3-R7,LR}
     50            static float Velocity,Encoder_Least,Encoder;
     51            static float Encoder_Integral;  
     52            /* 速度PI控制器 */	
     53            Encoder_Least=encoder;        
   \        0x2   0x....'....        LDR.W    R6,??DataTable15
   \        0x6   0x....'....        BL       __aeabi_i2f
   \        0xA   0x6030             STR      R0,[R6, #+0]
     54            Encoder *= 0.7;		                                                  
   \        0xC   0x....'....        LDR.W    R7,??DataTable15_1
   \       0x10   0x6838             LDR      R0,[R7, #+0]
   \       0x12   0x....'....        BL       __aeabi_f2d
   \       0x16   0xF05F 0x3266      MOVS     R2,#+1717986918
   \       0x1A   0x....'....        LDR.W    R3,??DataTable15_2  ;; 0x3fe66666
   \       0x1E   0x....'....        BL       __aeabi_dmul
   \       0x22   0x....'....        BL       __aeabi_d2f
   \       0x26   0x6038             STR      R0,[R7, #+0]
     55            Encoder += Encoder_Least*0.3;	                                
   \       0x28   0x6838             LDR      R0,[R7, #+0]
   \       0x2A   0x....'....        BL       __aeabi_f2d
   \       0x2E   0x0004             MOVS     R4,R0
   \       0x30   0x000D             MOVS     R5,R1
   \       0x32   0x6830             LDR      R0,[R6, #+0]
   \       0x34   0x....'....        BL       __aeabi_f2d
   \       0x38   0xF05F 0x3233      MOVS     R2,#+858993459
   \       0x3C   0x....'....        LDR.W    R3,??DataTable15_3  ;; 0x3fd33333
   \       0x40   0x....'....        BL       __aeabi_dmul
   \       0x44   0x0022             MOVS     R2,R4
   \       0x46   0x002B             MOVS     R3,R5
   \       0x48   0x....'....        BL       __aeabi_dadd
   \       0x4C   0x....'....        BL       __aeabi_d2f
   \       0x50   0x6038             STR      R0,[R7, #+0]
     56            Encoder_Integral +=Encoder;   /* 積分出位移  P比例 */
   \       0x52   0x....'....        LDR.W    R4,??DataTable15_4
   \       0x56   0x6821             LDR      R1,[R4, #+0]
   \       0x58   0x6838             LDR      R0,[R7, #+0]
   \       0x5A   0x....'....        BL       __aeabi_fadd
   \       0x5E   0x6020             STR      R0,[R4, #+0]
     57            if(Encoder_Integral>27000)  	Encoder_Integral=27000; /* 積分限幅    I積分 */
   \       0x60   0x6820             LDR      R0,[R4, #+0]
   \       0x62   0x....'....        LDR.W    R1,??DataTable15_5  ;; 0x46d2f001
   \       0x66   0x....'....        BL       __aeabi_cfrcmple
   \       0x6A   0xD802             BHI.N    ??control_velocity_0
   \       0x6C   0x....'....        LDR.W    R0,??DataTable15_6  ;; 0x46d2f000
   \       0x70   0x6020             STR      R0,[R4, #+0]
     58            if(Encoder_Integral<-27000)	Encoder_Integral=-27000;    /* 積分限幅    D微分 */
   \                     ??control_velocity_0: (+1)
   \       0x72   0x....'....        LDR.W    R1,??DataTable15_7  ;; 0xc6d2f000
   \       0x76   0x6820             LDR      R0,[R4, #+0]
   \       0x78   0x....'....        BL       __aeabi_cfcmple
   \       0x7C   0xD200             BCS.N    ??control_velocity_1
   \       0x7E   0x6021             STR      R1,[R4, #+0]
     59            if(flag_stop==1) Encoder_Integral=0,Encoder=0; 
   \                     ??control_velocity_1: (+1)
   \       0x80   0x....'....        LDR.W    R5,??DataTable15_8
   \       0x84   0x6828             LDR      R0,[R5, #+0]
   \       0x86   0x2801             CMP      R0,#+1
   \       0x88   0xD103             BNE.N    ??control_velocity_2
   \       0x8A   0x2000             MOVS     R0,#+0
   \       0x8C   0x6020             STR      R0,[R4, #+0]
   \       0x8E   0x2000             MOVS     R0,#+0
   \       0x90   0x6038             STR      R0,[R7, #+0]
     60            Velocity=Encoder*Velocity_KP_old+Encoder_Integral*(Velocity_KI_old);  //===速度控制
   \                     ??control_velocity_2: (+1)
   \       0x92   0x....'....        LDR.W    R6,??DataTable15_9
   \       0x96   0x....'....        LDR.W    R0,??DataTable15_10
   \       0x9A   0x6800             LDR      R0,[R0, #+0]
   \       0x9C   0x....'....        BL       __aeabi_i2f
   \       0xA0   0x6839             LDR      R1,[R7, #+0]
   \       0xA2   0x....'....        BL       __aeabi_fmul
   \       0xA6   0x0007             MOVS     R7,R0
   \       0xA8   0x....'....        LDR.W    R0,??DataTable17
   \       0xAC   0x6800             LDR      R0,[R0, #+0]
   \       0xAE   0x....'....        BL       __aeabi_i2f
   \       0xB2   0x6821             LDR      R1,[R4, #+0]
   \       0xB4   0x....'....        BL       __aeabi_fmul
   \       0xB8   0x0039             MOVS     R1,R7
   \       0xBA   0x....'....        BL       __aeabi_fadd
   \       0xBE   0x6030             STR      R0,[R6, #+0]
     61            if(flag_stop==1) Velocity=0;     
   \       0xC0   0x6828             LDR      R0,[R5, #+0]
   \       0xC2   0x2801             CMP      R0,#+1
   \       0xC4   0xD101             BNE.N    ??control_velocity_3
   \       0xC6   0x2000             MOVS     R0,#+0
   \       0xC8   0x6030             STR      R0,[R6, #+0]
     62            return Velocity;
   \                     ??control_velocity_3: (+1)
   \       0xCA   0x6830             LDR      R0,[R6, #+0]
   \       0xCC   0xBDF2             POP      {R1,R4-R7,PC}    ;; return
     63          }

   \                                 In section .bss, align 4
   \                     `control_velocity::Velocity`:
   \        0x0                      DS8 4

   \                                 In section .bss, align 4
   \                     `control_velocity::Encoder_Least`:
   \        0x0                      DS8 4

   \                                 In section .bss, align 4
   \                     `control_velocity::Encoder`:
   \        0x0                      DS8 4

   \                                 In section .bss, align 4
   \                     `control_velocity::Encoder_Integral`:
   \        0x0                      DS8 4

   \                                 In section .text, align 2, keep-with-next
     64          float control_balance(float angle, float Gyro){
   \                     control_balance: (+1)
   \        0x0   0xB5F8             PUSH     {R3-R7,LR}
   \        0x2   0x0004             MOVS     R4,R0
   \        0x4   0x000D             MOVS     R5,R1
     65            static float Bias_last, Bias_integral, Bias;
     66            int balance;
     67            Bias_last = Bias; 
   \        0x6   0x....'....        LDR.W    R0,??DataTable16
   \        0xA   0x....'....        LDR.W    R6,??DataTable16_1
   \        0xE   0x6831             LDR      R1,[R6, #+0]
   \       0x10   0x6001             STR      R1,[R0, #+0]
     68            Bias_integral += Bias_last;
   \       0x12   0x....'....        LDR.W    R7,??DataTable16_2
   \       0x16   0x6839             LDR      R1,[R7, #+0]
   \       0x18   0x6800             LDR      R0,[R0, #+0]
   \       0x1A   0x....'....        BL       __aeabi_fadd
   \       0x1E   0x6038             STR      R0,[R7, #+0]
     69            if(Bias_integral>4200)  	Bias_integral=4200;               //===積分限幅 4200
   \       0x20   0x6838             LDR      R0,[R7, #+0]
   \       0x22   0x....'....        LDR.W    R1,??DataTable16_3  ;; 0x45834001
   \       0x26   0x....'....        BL       __aeabi_cfrcmple
   \       0x2A   0xD802             BHI.N    ??control_balance_0
   \       0x2C   0x....'....        LDR.W    R0,??DataTable16_4  ;; 0x45834000
   \       0x30   0x6038             STR      R0,[R7, #+0]
     70            if(Bias_integral<-4200)	Bias_integral=-4200;              //===積分限幅 4200 
   \                     ??control_balance_0: (+1)
   \       0x32   0x....'....        LDR.W    R1,??DataTable16_5  ;; 0xc5834000
   \       0x36   0x6838             LDR      R0,[R7, #+0]
   \       0x38   0x....'....        BL       __aeabi_cfcmple
   \       0x3C   0xD200             BCS.N    ??control_balance_1
   \       0x3E   0x6039             STR      R1,[R7, #+0]
     71            if(flag_stop==1) Bias_integral=0,Bias=0; 
   \                     ??control_balance_1: (+1)
   \       0x40   0x....'....        LDR.W    R0,??DataTable15_8
   \       0x44   0x6800             LDR      R0,[R0, #+0]
   \       0x46   0x2801             CMP      R0,#+1
   \       0x48   0xD103             BNE.N    ??control_balance_2
   \       0x4A   0x2000             MOVS     R0,#+0
   \       0x4C   0x6038             STR      R0,[R7, #+0]
   \       0x4E   0x2000             MOVS     R0,#+0
   \       0x50   0x6030             STR      R0,[R6, #+0]
     72            Bias=(angle-rol_angle_target);  //=== 偏差  a 0.1 b  0.2 
   \                     ??control_balance_2: (+1)
   \       0x52   0x0020             MOVS     R0,R4
   \       0x54   0x....'....        LDR.W    R1,??DataTable16_6
   \       0x58   0x6809             LDR      R1,[R1, #+0]
   \       0x5A   0x....'....        BL       __aeabi_fsub
   \       0x5E   0x6030             STR      R0,[R6, #+0]
     73            balance= Balance_KP_old*Bias + Bias_integral*Balance_Ki_old + Gyro*Balance_KD_old;
                          ^
Warning[Pa093]: implicit conversion from floating point to integer
   \       0x60   0x....'....        LDR.W    R0,??DataTable16_7
   \       0x64   0x6800             LDR      R0,[R0, #+0]
   \       0x66   0x....'....        BL       __aeabi_i2f
   \       0x6A   0x6831             LDR      R1,[R6, #+0]
   \       0x6C   0x....'....        BL       __aeabi_fmul
   \       0x70   0x0004             MOVS     R4,R0
   \       0x72   0x6839             LDR      R1,[R7, #+0]
   \       0x74   0x....'....        LDR.W    R0,??DataTable16_8
   \       0x78   0x6800             LDR      R0,[R0, #+0]
   \       0x7A   0x....'....        BL       __aeabi_fmul
   \       0x7E   0x0021             MOVS     R1,R4
   \       0x80   0x....'....        BL       __aeabi_fadd
   \       0x84   0x0004             MOVS     R4,R0
   \       0x86   0x....'....        LDR.W    R0,??DataTable17_1
   \       0x8A   0x6800             LDR      R0,[R0, #+0]
   \       0x8C   0x0029             MOVS     R1,R5
   \       0x8E   0x....'....        BL       __aeabi_fmul
   \       0x92   0x0021             MOVS     R1,R4
   \       0x94   0x....'....        BL       __aeabi_fadd
   \       0x98   0x....'....        BL       __aeabi_f2iz
     74            return balance;
   \       0x9C   0x....'....        BL       __aeabi_i2f
   \       0xA0   0xBDF2             POP      {R1,R4-R7,PC}    ;; return
     75          }

   \                                 In section .bss, align 4
   \                     `control_balance::Bias_last`:
   \        0x0                      DS8 4

   \                                 In section .bss, align 4
   \                     `control_balance::Bias_integral`:
   \        0x0                      DS8 4

   \                                 In section .bss, align 4
   \                     `control_balance::Bias`:
   \        0x0                      DS8 4
     76          //=================== old way ===================

   \                                 In section .bss, align 4
     77          float velocity_pwm_a = 0.0, velocity_pwm_b = 0.0, velocity_pwm_c = 0.0;
   \                     velocity_pwm_a:
   \        0x0                      DS8 4

   \                                 In section .bss, align 4
   \                     velocity_pwm_b:
   \        0x0                      DS8 4

   \                                 In section .bss, align 4
   \                     velocity_pwm_c:
   \        0x0                      DS8 4

   \                                 In section .bss, align 4
     78          float balance_pwm_a = 0.0, balance_pwm_b = 0.0, balance_pwm_c = 0.0;
   \                     balance_pwm_a:
   \        0x0                      DS8 4

   \                                 In section .bss, align 4
   \                     balance_pwm_b:
   \        0x0                      DS8 4

   \                                 In section .bss, align 4
   \                     balance_pwm_c:
   \        0x0                      DS8 4

   \                                 In section .bss, align 4
     79          int PWM_a = 0, PWM_b = 0, PWM_c = 0;
   \                     PWM_a:
   \        0x0                      DS8 4

   \                                 In section .bss, align 4
   \                     PWM_b:
   \        0x0                      DS8 4

   \                                 In section .bss, align 4
   \                     PWM_c:
   \        0x0                      DS8 4

   \                                 In section .bss, align 4
     80          int encoder_a, encoder_b, encoder_c;
   \                     encoder_a:
   \        0x0                      DS8 4

   \                                 In section .bss, align 4
   \                     encoder_b:
   \        0x0                      DS8 4

   \                                 In section .bss, align 4
   \                     encoder_c:
   \        0x0                      DS8 4
     81          
     82          #define X_PARAMETER (0.5f)               
     83          #define Y_PARAMETER (0.8660254037844f)      //sqrt(3)/2.f
     84          #define L_PARAMETER (1.0f)

   \                                 In section .bss, align 4
     85          float Encoder_X,Encoder_Y,Encoder_Z; //順向運動學
   \                     Encoder_X:
   \        0x0                      DS8 4

   \                                 In section .bss, align 4
   \                     Encoder_Y:
   \        0x0                      DS8 4

   \                                 In section .bss, align 4
   \                     Encoder_Z:
   \        0x0                      DS8 4

   \                                 In section .bss, align 4
     86          float Move_X,Move_Y,Move_Z; //逆向運動學
   \                     Move_X:
   \        0x0                      DS8 4

   \                                 In section .bss, align 4
   \                     Move_Y:
   \        0x0                      DS8 4

   \                                 In section .bss, align 4
   \                     Move_Z:
   \        0x0                      DS8 4
     87          
     88          /*===============================
     89          
     90          測試系統運行時間
     91          
     92          ===============================*/

   \                                 In section .text, align 2, keep-with-next
     93          void time_check(_Time_test *running){
   \                     time_check: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
   \        0x2   0x0004             MOVS     R4,R0
     94              running->last_time_us = running->now_time_us;
   \        0x4   0x6860             LDR      R0,[R4, #+4]
   \        0x6   0x6020             STR      R0,[R4, #+0]
     95              running->now_time_us = running_tim_cnt * 5000 + TIM5->CNT;                  //計數累加數加1，?需要5ms = 5000us ，定時器定時5ms需要5000次計數，所以一次CNT值為1us 
   \        0x8   0x....'....        LDR.W    R0,??DataTable16_9
   \        0xC   0x6800             LDR      R0,[R0, #+0]
   \        0xE   0xF241 0x3288      MOVW     R2,#+5000
   \       0x12   0x....'....        LDR.W    R1,??DataTable16_10  ;; 0x40000c24
   \       0x16   0x6809             LDR      R1,[R1, #+0]
   \       0x18   0xFB02 0x1000      MLA      R0,R2,R0,R1
   \       0x1C   0x....'....        BL       __aeabi_ui2f
   \       0x20   0x6060             STR      R0,[R4, #+4]
     96              running->delta_time_us = running->now_time_us - running->last_time_us;
   \       0x22   0x6860             LDR      R0,[R4, #+4]
   \       0x24   0x6821             LDR      R1,[R4, #+0]
   \       0x26   0x....'....        BL       __aeabi_fsub
   \       0x2A   0x60A0             STR      R0,[R4, #+8]
     97              running->delta_time_ms = running->delta_time_us * 0.001f;
   \       0x2C   0x68A1             LDR      R1,[R4, #+8]
   \       0x2E   0x....'....        LDR.W    R0,??DataTable17_2  ;; 0x3a83126f
   \       0x32   0x....'....        BL       __aeabi_fmul
   \       0x36   0x60E0             STR      R0,[R4, #+12]
     98              //printf("time interrupt is %f\n", running->delta_time_us);
     99          }
   \       0x38   0xBD10             POP      {R4,PC}          ;; return
    100          
    101          /*===============================
    102          
    103          PID-X
    104          
    105          ===============================*/

   \                                 In section .text, align 2, keep-with-next
    106          float control_velocity_x(int encoder){
   \                     control_velocity_x: (+1)
   \        0x0   0xB5F8             PUSH     {R3-R7,LR}
    107              static float Velocity;
    108              static float Encoder, Encoder_Least, Encoder_Integral;
    109              
    110              Encoder_Least=encoder;        
   \        0x2   0x....'....        LDR.W    R6,??DataTable16_11
   \        0x6   0x....'....        BL       __aeabi_i2f
   \        0xA   0x6030             STR      R0,[R6, #+0]
    111              Encoder *= 0.7;		                                                  
   \        0xC   0x....'....        LDR.W    R7,??DataTable16_12
   \       0x10   0x6838             LDR      R0,[R7, #+0]
   \       0x12   0x....'....        BL       __aeabi_f2d
   \       0x16   0xF05F 0x3266      MOVS     R2,#+1717986918
   \       0x1A   0x....'....        LDR.W    R3,??DataTable15_2  ;; 0x3fe66666
   \       0x1E   0x....'....        BL       __aeabi_dmul
   \       0x22   0x....'....        BL       __aeabi_d2f
   \       0x26   0x6038             STR      R0,[R7, #+0]
    112              Encoder += Encoder_Least*0.3;	             
   \       0x28   0x6838             LDR      R0,[R7, #+0]
   \       0x2A   0x....'....        BL       __aeabi_f2d
   \       0x2E   0x0004             MOVS     R4,R0
   \       0x30   0x000D             MOVS     R5,R1
   \       0x32   0x6830             LDR      R0,[R6, #+0]
   \       0x34   0x....'....        BL       __aeabi_f2d
   \       0x38   0xF05F 0x3233      MOVS     R2,#+858993459
   \       0x3C   0x....'....        LDR.W    R3,??DataTable15_3  ;; 0x3fd33333
   \       0x40   0x....'....        BL       __aeabi_dmul
   \       0x44   0x0022             MOVS     R2,R4
   \       0x46   0x002B             MOVS     R3,R5
   \       0x48   0x....'....        BL       __aeabi_dadd
   \       0x4C   0x....'....        BL       __aeabi_d2f
   \       0x50   0x6038             STR      R0,[R7, #+0]
    113              Encoder_Integral +=Encoder;                                     //===積分出位移  P比例
   \       0x52   0x....'....        LDR.W    R4,??DataTable16_13
   \       0x56   0x6821             LDR      R1,[R4, #+0]
   \       0x58   0x6838             LDR      R0,[R7, #+0]
   \       0x5A   0x....'....        BL       __aeabi_fadd
   \       0x5E   0x6020             STR      R0,[R4, #+0]
    114              
    115              if(Encoder_Integral>27000)  Encoder_Integral=27000;             //===積分限幅    I積分
   \       0x60   0x6820             LDR      R0,[R4, #+0]
   \       0x62   0x....'....        LDR.W    R1,??DataTable15_5  ;; 0x46d2f001
   \       0x66   0x....'....        BL       __aeabi_cfrcmple
   \       0x6A   0xD802             BHI.N    ??control_velocity_x_0
   \       0x6C   0x....'....        LDR.W    R0,??DataTable15_6  ;; 0x46d2f000
   \       0x70   0x6020             STR      R0,[R4, #+0]
    116              if(Encoder_Integral<-27000)	Encoder_Integral=-27000;            //===積分限幅    D微分
   \                     ??control_velocity_x_0: (+1)
   \       0x72   0x....'....        LDR.W    R1,??DataTable15_7  ;; 0xc6d2f000
   \       0x76   0x6820             LDR      R0,[R4, #+0]
   \       0x78   0x....'....        BL       __aeabi_cfcmple
   \       0x7C   0xD200             BCS.N    ??control_velocity_x_1
   \       0x7E   0x6021             STR      R1,[R4, #+0]
    117              if(flag_stop==1) Encoder=0, Encoder_Integral=0;
   \                     ??control_velocity_x_1: (+1)
   \       0x80   0x....'....        LDR.W    R5,??DataTable15_8
   \       0x84   0x6828             LDR      R0,[R5, #+0]
   \       0x86   0x2801             CMP      R0,#+1
   \       0x88   0xD103             BNE.N    ??control_velocity_x_2
   \       0x8A   0x2000             MOVS     R0,#+0
   \       0x8C   0x6038             STR      R0,[R7, #+0]
   \       0x8E   0x2000             MOVS     R0,#+0
   \       0x90   0x6020             STR      R0,[R4, #+0]
    118              
    119              Velocity=Encoder*Velocity_KP + Encoder_Integral*Velocity_KI;    //===速度控制
   \                     ??control_velocity_x_2: (+1)
   \       0x92   0x....'....        LDR.W    R6,??DataTable17_3
   \       0x96   0x6839             LDR      R1,[R7, #+0]
   \       0x98   0x....'....        LDR.W    R0,??DataTable17_4
   \       0x9C   0x6800             LDR      R0,[R0, #+0]
   \       0x9E   0x....'....        BL       __aeabi_fmul
   \       0xA2   0x0007             MOVS     R7,R0
   \       0xA4   0x6821             LDR      R1,[R4, #+0]
   \       0xA6   0x....'....        LDR.W    R0,??DataTable17_5
   \       0xAA   0x6800             LDR      R0,[R0, #+0]
   \       0xAC   0x....'....        BL       __aeabi_fmul
   \       0xB0   0x0039             MOVS     R1,R7
   \       0xB2   0x....'....        BL       __aeabi_fadd
   \       0xB6   0x6030             STR      R0,[R6, #+0]
    120              if(flag_stop==1) Velocity=0;     
   \       0xB8   0x6828             LDR      R0,[R5, #+0]
   \       0xBA   0x2801             CMP      R0,#+1
   \       0xBC   0xD101             BNE.N    ??control_velocity_x_3
   \       0xBE   0x2000             MOVS     R0,#+0
   \       0xC0   0x6030             STR      R0,[R6, #+0]
    121              return Velocity;
   \                     ??control_velocity_x_3: (+1)
   \       0xC2   0x6830             LDR      R0,[R6, #+0]
   \       0xC4   0xBDF2             POP      {R1,R4-R7,PC}    ;; return
    122          }

   \                                 In section .bss, align 4
   \                     `control_velocity_x::Velocity`:
   \        0x0                      DS8 4

   \                                 In section .bss, align 4
   \                     `control_velocity_x::Encoder`:
   \        0x0                      DS8 4

   \                                 In section .bss, align 4
   \                     `control_velocity_x::Encoder_Least`:
   \        0x0                      DS8 4

   \                                 In section .bss, align 4
   \                     `control_velocity_x::Encoder_Integral`:
   \        0x0                      DS8 4
    123          

   \                                 In section .text, align 2, keep-with-next
    124          float control_balance_x(float angle, float Gyro){
   \                     control_balance_x: (+1)
   \        0x0   0xB538             PUSH     {R3-R5,LR}
   \        0x2   0x000C             MOVS     R4,R1
    125              float Bias, balance;
    126              Bias=(angle-rol_angle_target);//error
   \        0x4   0x....'....        LDR.W    R1,??DataTable16_6
   \        0x8   0x6809             LDR      R1,[R1, #+0]
   \        0xA   0x....'....        BL       __aeabi_fsub
   \        0xE   0x0001             MOVS     R1,R0
    127              balance=Bias*Balance_KP + Gyro*Balance_KD;
   \       0x10   0x....'....        LDR.W    R0,??DataTable17_6
   \       0x14   0x6800             LDR      R0,[R0, #+0]
   \       0x16   0x....'....        BL       __aeabi_fmul
   \       0x1A   0x0005             MOVS     R5,R0
   \       0x1C   0x....'....        LDR.W    R0,??DataTable17_7
   \       0x20   0x6800             LDR      R0,[R0, #+0]
   \       0x22   0x0021             MOVS     R1,R4
   \       0x24   0x....'....        BL       __aeabi_fmul
   \       0x28   0x0029             MOVS     R1,R5
   \       0x2A   0x....'....        BL       __aeabi_fadd
    128              if(flag_stop==1) balance=0;
   \       0x2E   0x....'....        LDR.W    R1,??DataTable15_8
   \       0x32   0x6809             LDR      R1,[R1, #+0]
   \       0x34   0x2901             CMP      R1,#+1
   \       0x36   0xD100             BNE.N    ??control_balance_x_0
   \       0x38   0x2000             MOVS     R0,#+0
    129              return balance;
   \                     ??control_balance_x_0: (+1)
   \       0x3A   0xBD32             POP      {R1,R4,R5,PC}    ;; return
    130          }
    131          
    132          /*===============================
    133          
    134          PID-Y
    135          
    136          ===============================*/

   \                                 In section .text, align 2, keep-with-next
    137          float control_velocity_y(int encoder){
   \                     control_velocity_y: (+1)
   \        0x0   0xB5F8             PUSH     {R3-R7,LR}
    138              static float Velocity;
    139              static float Encoder, Encoder_Least, Encoder_Integral;
    140              
    141              Encoder_Least=encoder;        
   \        0x2   0x....'....        LDR.W    R6,??DataTable17_8
   \        0x6   0x....'....        BL       __aeabi_i2f
   \        0xA   0x6030             STR      R0,[R6, #+0]
    142              Encoder *= 0.7;		                                                  
   \        0xC   0x....'....        LDR.W    R7,??DataTable17_9
   \       0x10   0x6838             LDR      R0,[R7, #+0]
   \       0x12   0x....'....        BL       __aeabi_f2d
   \       0x16   0xF05F 0x3266      MOVS     R2,#+1717986918
   \       0x1A   0x....'....        LDR.W    R3,??DataTable15_2  ;; 0x3fe66666
   \       0x1E   0x....'....        BL       __aeabi_dmul
   \       0x22   0x....'....        BL       __aeabi_d2f
   \       0x26   0x6038             STR      R0,[R7, #+0]
    143              Encoder += Encoder_Least*0.3;	             
   \       0x28   0x6838             LDR      R0,[R7, #+0]
   \       0x2A   0x....'....        BL       __aeabi_f2d
   \       0x2E   0x0004             MOVS     R4,R0
   \       0x30   0x000D             MOVS     R5,R1
   \       0x32   0x6830             LDR      R0,[R6, #+0]
   \       0x34   0x....'....        BL       __aeabi_f2d
   \       0x38   0xF05F 0x3233      MOVS     R2,#+858993459
   \       0x3C   0x....'....        LDR.W    R3,??DataTable15_3  ;; 0x3fd33333
   \       0x40   0x....'....        BL       __aeabi_dmul
   \       0x44   0x0022             MOVS     R2,R4
   \       0x46   0x002B             MOVS     R3,R5
   \       0x48   0x....'....        BL       __aeabi_dadd
   \       0x4C   0x....'....        BL       __aeabi_d2f
   \       0x50   0x6038             STR      R0,[R7, #+0]
    144              Encoder_Integral +=Encoder;                                     //===積分出位移  P比例
   \       0x52   0x....'....        LDR.W    R4,??DataTable17_10
   \       0x56   0x6821             LDR      R1,[R4, #+0]
   \       0x58   0x6838             LDR      R0,[R7, #+0]
   \       0x5A   0x....'....        BL       __aeabi_fadd
   \       0x5E   0x6020             STR      R0,[R4, #+0]
    145              
    146              if(Encoder_Integral>27000)  Encoder_Integral=27000;             //===積分限幅    I積分
   \       0x60   0x6820             LDR      R0,[R4, #+0]
   \       0x62   0x....'....        LDR.W    R1,??DataTable15_5  ;; 0x46d2f001
   \       0x66   0x....'....        BL       __aeabi_cfrcmple
   \       0x6A   0xD802             BHI.N    ??control_velocity_y_0
   \       0x6C   0x....'....        LDR.W    R0,??DataTable15_6  ;; 0x46d2f000
   \       0x70   0x6020             STR      R0,[R4, #+0]
    147              if(Encoder_Integral<-27000)	Encoder_Integral=-27000;            //===積分限幅    D微分
   \                     ??control_velocity_y_0: (+1)
   \       0x72   0x....'....        LDR.W    R1,??DataTable15_7  ;; 0xc6d2f000
   \       0x76   0x6820             LDR      R0,[R4, #+0]
   \       0x78   0x....'....        BL       __aeabi_cfcmple
   \       0x7C   0xD200             BCS.N    ??control_velocity_y_1
   \       0x7E   0x6021             STR      R1,[R4, #+0]
    148              if(flag_stop==1) Encoder=0, Encoder_Integral=0;
   \                     ??control_velocity_y_1: (+1)
   \       0x80   0x....'....        LDR.W    R5,??DataTable15_8
   \       0x84   0x6828             LDR      R0,[R5, #+0]
   \       0x86   0x2801             CMP      R0,#+1
   \       0x88   0xD103             BNE.N    ??control_velocity_y_2
   \       0x8A   0x2000             MOVS     R0,#+0
   \       0x8C   0x6038             STR      R0,[R7, #+0]
   \       0x8E   0x2000             MOVS     R0,#+0
   \       0x90   0x6020             STR      R0,[R4, #+0]
    149              
    150              Velocity=Encoder*Velocity_KP + Encoder_Integral*Velocity_KI;    //===速度控制
   \                     ??control_velocity_y_2: (+1)
   \       0x92   0x....'....        LDR.W    R6,??DataTable17_11
   \       0x96   0x6839             LDR      R1,[R7, #+0]
   \       0x98   0x....'....        LDR.W    R0,??DataTable17_4
   \       0x9C   0x6800             LDR      R0,[R0, #+0]
   \       0x9E   0x....'....        BL       __aeabi_fmul
   \       0xA2   0x0007             MOVS     R7,R0
   \       0xA4   0x6821             LDR      R1,[R4, #+0]
   \       0xA6   0x....'....        LDR.W    R0,??DataTable17_5
   \       0xAA   0x6800             LDR      R0,[R0, #+0]
   \       0xAC   0x....'....        BL       __aeabi_fmul
   \       0xB0   0x0039             MOVS     R1,R7
   \       0xB2   0x....'....        BL       __aeabi_fadd
   \       0xB6   0x6030             STR      R0,[R6, #+0]
    151              if(flag_stop==1) Velocity=0;     
   \       0xB8   0x6828             LDR      R0,[R5, #+0]
   \       0xBA   0x2801             CMP      R0,#+1
   \       0xBC   0xD101             BNE.N    ??control_velocity_y_3
   \       0xBE   0x2000             MOVS     R0,#+0
   \       0xC0   0x6030             STR      R0,[R6, #+0]
    152              return Velocity;
   \                     ??control_velocity_y_3: (+1)
   \       0xC2   0x6830             LDR      R0,[R6, #+0]
   \       0xC4   0xBDF2             POP      {R1,R4-R7,PC}    ;; return
    153          }

   \                                 In section .bss, align 4
   \                     `control_velocity_y::Velocity`:
   \        0x0                      DS8 4

   \                                 In section .bss, align 4
   \                     `control_velocity_y::Encoder`:
   \        0x0                      DS8 4

   \                                 In section .bss, align 4
   \                     `control_velocity_y::Encoder_Least`:
   \        0x0                      DS8 4

   \                                 In section .bss, align 4
   \                     `control_velocity_y::Encoder_Integral`:
   \        0x0                      DS8 4
    154          

   \                                 In section .text, align 2, keep-with-next
    155          float control_balance_y(float angle, float Gyro){
   \                     control_balance_y: (+1)
   \        0x0   0xB538             PUSH     {R3-R5,LR}
   \        0x2   0x000C             MOVS     R4,R1
    156              float Bias, balance;
    157              Bias=(angle-pit_angle_target);//error
   \        0x4   0x....'....        LDR.W    R1,??DataTable17_12
   \        0x8   0x6809             LDR      R1,[R1, #+0]
   \        0xA   0x....'....        BL       __aeabi_fsub
   \        0xE   0x0001             MOVS     R1,R0
    158              balance=Bias*Balance_KP + Gyro*Balance_KD;
   \       0x10   0x....'....        LDR.W    R0,??DataTable17_6
   \       0x14   0x6800             LDR      R0,[R0, #+0]
   \       0x16   0x....'....        BL       __aeabi_fmul
   \       0x1A   0x0005             MOVS     R5,R0
   \       0x1C   0x....'....        LDR.W    R0,??DataTable17_7
   \       0x20   0x6800             LDR      R0,[R0, #+0]
   \       0x22   0x0021             MOVS     R1,R4
   \       0x24   0x....'....        BL       __aeabi_fmul
   \       0x28   0x0029             MOVS     R1,R5
   \       0x2A   0x....'....        BL       __aeabi_fadd
    159              if(flag_stop==1) balance=0;
   \       0x2E   0x....'....        LDR.W    R1,??DataTable15_8
   \       0x32   0x6809             LDR      R1,[R1, #+0]
   \       0x34   0x2901             CMP      R1,#+1
   \       0x36   0xD100             BNE.N    ??control_balance_y_0
   \       0x38   0x2000             MOVS     R0,#+0
    160              return balance;
   \                     ??control_balance_y_0: (+1)
   \       0x3A   0xBD32             POP      {R1,R4,R5,PC}    ;; return
    161          }
    162          
    163          /*===============================
    164          
    165          PID-Z
    166          
    167          ===============================*/

   \                                 In section .bss, align 4
    168          int offset_yaw=0;
   \                     offset_yaw:
   \        0x0                      DS8 4

   \                                 In section .text, align 2, keep-with-next
    169          float control_balance_z(float angle, float Gyro){
   \                     control_balance_z: (+1)
   \        0x0   0xB5F8             PUSH     {R3-R7,LR}
   \        0x2   0x000D             MOVS     R5,R1
    170              static float Bias_last;
    171              float Bias, D_Bias;
    172              int balance;
    173              if(flag_stop==1) Bias_last=0;
   \        0x4   0x....'....        LDR.W    R4,??DataTable15_8
   \        0x8   0x6820             LDR      R0,[R4, #+0]
   \        0xA   0x2801             CMP      R0,#+1
   \        0xC   0xD103             BNE.N    ??control_balance_z_0
   \        0xE   0x2000             MOVS     R0,#+0
   \       0x10   0x....'....        LDR.W    R1,??DataTable17_13
   \       0x14   0x6008             STR      R0,[R1, #+0]
    174              Bias = Gyro;
    175              D_Bias= Bias - Bias_last + offset_yaw;
   \                     ??control_balance_z_0: (+1)
   \       0x16   0x....'....        LDR.W    R7,??DataTable17_13
   \       0x1A   0x0028             MOVS     R0,R5
   \       0x1C   0x6839             LDR      R1,[R7, #+0]
   \       0x1E   0x....'....        BL       __aeabi_fsub
   \       0x22   0x0006             MOVS     R6,R0
   \       0x24   0x....'....        LDR.W    R0,??DataTable17_14
   \       0x28   0x6800             LDR      R0,[R0, #+0]
   \       0x2A   0x....'....        BL       __aeabi_i2f
   \       0x2E   0x0031             MOVS     R1,R6
   \       0x30   0x....'....        BL       __aeabi_fadd
   \       0x34   0x0006             MOVS     R6,R0
    176              Bias_last=Bias;
   \       0x36   0x603D             STR      R5,[R7, #+0]
    177              balance=Bias*Gryo_KP + D_Bias*Gryo_KD;
                            ^
Warning[Pa093]: implicit conversion from floating point to integer
   \       0x38   0x....'....        LDR.W    R0,??DataTable17_15
   \       0x3C   0x6800             LDR      R0,[R0, #+0]
   \       0x3E   0x0029             MOVS     R1,R5
   \       0x40   0x....'....        BL       __aeabi_fmul
   \       0x44   0x0005             MOVS     R5,R0
   \       0x46   0x....'....        LDR.W    R0,??DataTable17_16
   \       0x4A   0x6800             LDR      R0,[R0, #+0]
   \       0x4C   0x0031             MOVS     R1,R6
   \       0x4E   0x....'....        BL       __aeabi_fmul
   \       0x52   0x0029             MOVS     R1,R5
   \       0x54   0x....'....        BL       __aeabi_fadd
   \       0x58   0x....'....        BL       __aeabi_f2iz
    178              if(flag_stop==1) balance=0;
   \       0x5C   0x6821             LDR      R1,[R4, #+0]
   \       0x5E   0x2901             CMP      R1,#+1
   \       0x60   0xD100             BNE.N    ??control_balance_z_1
   \       0x62   0x2000             MOVS     R0,#+0
    179              return balance;
   \                     ??control_balance_z_1: (+1)
   \       0x64   0x....'....        BL       __aeabi_i2f
   \       0x68   0xBDF2             POP      {R1,R4-R7,PC}    ;; return
    180          }

   \                                 In section .bss, align 4
   \                     `control_balance_z::Bias_last`:
   \        0x0                      DS8 4
    181          
    182          /*===============================
    183          
    184          PWM-max-limit
    185          pwm > 8300, then pwm = 8300 and pwm < -8300, then pwm = -8300
    186          
    187          =================================*/

   \                                 In section .text, align 2, keep-with-next
    188          void Max_pwm_limit(int amplitude){
    189              if(PWM_a<-amplitude) PWM_a=-amplitude;	
   \                     Max_pwm_limit: (+1)
   \        0x0   0x....'....        LDR.W    R1,??DataTable17_17
   \        0x4   0x680A             LDR      R2,[R1, #+0]
   \        0x6   0x42C2             CMN      R2,R0
   \        0x8   0xDA01             BGE.N    ??Max_pwm_limit_0
   \        0xA   0x4242             RSBS     R2,R0,#+0
   \        0xC   0x600A             STR      R2,[R1, #+0]
    190              if(PWM_a>amplitude)  PWM_a=amplitude;	
   \                     ??Max_pwm_limit_0: (+1)
   \        0xE   0x680A             LDR      R2,[R1, #+0]
   \       0x10   0x4290             CMP      R0,R2
   \       0x12   0xDA00             BGE.N    ??Max_pwm_limit_1
   \       0x14   0x6008             STR      R0,[R1, #+0]
    191              if(PWM_b<-amplitude) PWM_b=-amplitude;	
   \                     ??Max_pwm_limit_1: (+1)
   \       0x16   0x....'....        LDR.W    R1,??DataTable17_18
   \       0x1A   0x680A             LDR      R2,[R1, #+0]
   \       0x1C   0x42C2             CMN      R2,R0
   \       0x1E   0xDA01             BGE.N    ??Max_pwm_limit_2
   \       0x20   0x4242             RSBS     R2,R0,#+0
   \       0x22   0x600A             STR      R2,[R1, #+0]
    192              if(PWM_b>amplitude)  PWM_b=amplitude;
   \                     ??Max_pwm_limit_2: (+1)
   \       0x24   0x680A             LDR      R2,[R1, #+0]
   \       0x26   0x4290             CMP      R0,R2
   \       0x28   0xDA00             BGE.N    ??Max_pwm_limit_3
   \       0x2A   0x6008             STR      R0,[R1, #+0]
    193              if(PWM_c<-amplitude) PWM_c=-amplitude;	
   \                     ??Max_pwm_limit_3: (+1)
   \       0x2C   0x....'....        LDR.W    R1,??DataTable17_19
   \       0x30   0x680A             LDR      R2,[R1, #+0]
   \       0x32   0x42C2             CMN      R2,R0
   \       0x34   0xDA01             BGE.N    ??Max_pwm_limit_4
   \       0x36   0x4242             RSBS     R2,R0,#+0
   \       0x38   0x600A             STR      R2,[R1, #+0]
    194              if(PWM_c>amplitude)  PWM_c=amplitude;	
   \                     ??Max_pwm_limit_4: (+1)
   \       0x3A   0x680A             LDR      R2,[R1, #+0]
   \       0x3C   0x4290             CMP      R0,R2
   \       0x3E   0xDA00             BGE.N    ??Max_pwm_limit_5
   \       0x40   0x6008             STR      R0,[R1, #+0]
    195          }
   \                     ??Max_pwm_limit_5: (+1)
   \       0x42   0x4770             BX       LR               ;; return
    196          
    197          /*===============================
    198          Set PWM
    199          motor=123, all motor change pwm
    200          motor=1, motor a change pwm
    201          motor=2, motor b change pwm
    202          motor=3, motor c change pwm
    203          =================================*/

   \                                 In section .text, align 2, keep-with-next
    204          void set_pwm(int motor, int pwm_a, int pwm_b, int pwm_c){
   \                     set_pwm: (+1)
   \        0x0   0xB5F8             PUSH     {R3-R7,LR}
   \        0x2   0x0004             MOVS     R4,R0
   \        0x4   0x000D             MOVS     R5,R1
   \        0x6   0x0016             MOVS     R6,R2
   \        0x8   0x001F             MOVS     R7,R3
    205              if(motor==123 || motor==1){
   \        0xA   0x2C7B             CMP      R4,#+123
   \        0xC   0xD001             BEQ.N    ??set_pwm_0
   \        0xE   0x2C01             CMP      R4,#+1
   \       0x10   0xD114             BNE.N    ??set_pwm_1
    206                  if (pwm_a<0){
   \                     ??set_pwm_0: (+1)
   \       0x12   0x2D00             CMP      R5,#+0
   \       0x14   0xD506             BPL.N    ??set_pwm_2
    207                      GPIO_SetBits(GPIOB,GPIO_Pin_13);
   \       0x16   0xF44F 0x5100      MOV      R1,#+8192
   \       0x1A   0x....'....        LDR.W    R0,??DataTable17_20  ;; 0x40020400
   \       0x1E   0x....'....        BL       GPIO_SetBits
   \       0x22   0xE005             B.N      ??set_pwm_3
    208                  }else{ 
    209                      GPIO_ResetBits(GPIOB,GPIO_Pin_13);
   \                     ??set_pwm_2: (+1)
   \       0x24   0xF44F 0x5100      MOV      R1,#+8192
   \       0x28   0x....'....        LDR.W    R0,??DataTable17_20  ;; 0x40020400
   \       0x2C   0x....'....        BL       GPIO_ResetBits
    210                  }
    211                  pwm_a = int_abs(pwm_a);
   \                     ??set_pwm_3: (+1)
   \       0x30   0x0028             MOVS     R0,R5
   \       0x32   0x....'....        BL       int_abs
    212                  TIM8->CCR1 = pwm_a;
   \       0x36   0x....'....        LDR.W    R1,??DataTable17_21  ;; 0x40010434
   \       0x3A   0x6008             STR      R0,[R1, #+0]
    213              }
    214              if(motor==123 || motor==2){
   \                     ??set_pwm_1: (+1)
   \       0x3C   0x2C7B             CMP      R4,#+123
   \       0x3E   0xD001             BEQ.N    ??set_pwm_4
   \       0x40   0x2C02             CMP      R4,#+2
   \       0x42   0xD114             BNE.N    ??set_pwm_5
    215                  if (pwm_b<0){
   \                     ??set_pwm_4: (+1)
   \       0x44   0x2E00             CMP      R6,#+0
   \       0x46   0xD506             BPL.N    ??set_pwm_6
    216                      GPIO_SetBits(GPIOD,GPIO_Pin_8);
   \       0x48   0xF44F 0x7180      MOV      R1,#+256
   \       0x4C   0x....'....        LDR.W    R0,??DataTable17_22  ;; 0x40020c00
   \       0x50   0x....'....        BL       GPIO_SetBits
   \       0x54   0xE005             B.N      ??set_pwm_7
    217                  }else{ 
    218                      GPIO_ResetBits(GPIOD,GPIO_Pin_8);
   \                     ??set_pwm_6: (+1)
   \       0x56   0xF44F 0x7180      MOV      R1,#+256
   \       0x5A   0x....'....        LDR.W    R0,??DataTable17_22  ;; 0x40020c00
   \       0x5E   0x....'....        BL       GPIO_ResetBits
    219                  }
    220                  pwm_b = int_abs(pwm_b);
   \                     ??set_pwm_7: (+1)
   \       0x62   0x0030             MOVS     R0,R6
   \       0x64   0x....'....        BL       int_abs
    221                  TIM8->CCR2 = pwm_b;
   \       0x68   0x....'....        LDR.W    R1,??DataTable17_23  ;; 0x40010438
   \       0x6C   0x6008             STR      R0,[R1, #+0]
    222              }
    223              if(motor==123 || motor==3){
   \                     ??set_pwm_5: (+1)
   \       0x6E   0x2C7B             CMP      R4,#+123
   \       0x70   0xD001             BEQ.N    ??set_pwm_8
   \       0x72   0x2C03             CMP      R4,#+3
   \       0x74   0xD114             BNE.N    ??set_pwm_9
    224                  if (pwm_c<0){
   \                     ??set_pwm_8: (+1)
   \       0x76   0x2F00             CMP      R7,#+0
   \       0x78   0xD506             BPL.N    ??set_pwm_10
    225                      GPIO_SetBits(GPIOD,GPIO_Pin_9);
   \       0x7A   0xF44F 0x7100      MOV      R1,#+512
   \       0x7E   0x....'....        LDR.W    R0,??DataTable17_22  ;; 0x40020c00
   \       0x82   0x....'....        BL       GPIO_SetBits
   \       0x86   0xE005             B.N      ??set_pwm_11
    226                  }else{ 
    227                      GPIO_ResetBits(GPIOD,GPIO_Pin_9);
   \                     ??set_pwm_10: (+1)
   \       0x88   0xF44F 0x7100      MOV      R1,#+512
   \       0x8C   0x....'....        LDR.W    R0,??DataTable17_22  ;; 0x40020c00
   \       0x90   0x....'....        BL       GPIO_ResetBits
    228                  }
    229                  pwm_c = int_abs(pwm_c);
   \                     ??set_pwm_11: (+1)
   \       0x94   0x0038             MOVS     R0,R7
   \       0x96   0x....'....        BL       int_abs
    230                  TIM8->CCR3 = pwm_c;
   \       0x9A   0x....'....        LDR.W    R1,??DataTable17_24  ;; 0x4001043c
   \       0x9E   0x6008             STR      R0,[R1, #+0]
    231              }
    232          }
   \                     ??set_pwm_9: (+1)
   \       0xA0   0xBDF1             POP      {R0,R4-R7,PC}    ;; return
    233          
    234          /*===============================
    235          
    236          正向運動學分析
    237          
    238          ===============================*/

   \                                 In section .text, align 2, keep-with-next
    239          void Encoder_Analysis(float Va,float Vb,float Vc){ 
   \                     Encoder_Analysis: (+1)
   \        0x0   0xB570             PUSH     {R4-R6,LR}
   \        0x2   0x0004             MOVS     R4,R0
   \        0x4   0x000D             MOVS     R5,R1
   \        0x6   0x0016             MOVS     R6,R2
    240              Encoder_X = Va*2-Vb-Vc;
   \        0x8   0xF05F 0x4080      MOVS     R0,#+1073741824
   \        0xC   0x0021             MOVS     R1,R4
   \        0xE   0x....'....        BL       __aeabi_fmul
   \       0x12   0x0029             MOVS     R1,R5
   \       0x14   0x....'....        BL       __aeabi_fsub
   \       0x18   0x0031             MOVS     R1,R6
   \       0x1A   0x....'....        BL       __aeabi_fsub
   \       0x1E   0x....'....        LDR.W    R1,??DataTable17_25
   \       0x22   0x6008             STR      R0,[R1, #+0]
    241              Encoder_Y = (Vb-Vc)*1.7320508075688773;
   \       0x24   0x0028             MOVS     R0,R5
   \       0x26   0x0031             MOVS     R1,R6
   \       0x28   0x....'....        BL       __aeabi_fsub
   \       0x2C   0x....'....        BL       __aeabi_f2d
   \       0x30   0x....'....        LDR.W    R2,??DataTable17_26  ;; 0xe8584caa
   \       0x34   0x....'....        LDR.W    R3,??DataTable17_27  ;; 0x3ffbb67a
   \       0x38   0x....'....        BL       __aeabi_dmul
   \       0x3C   0x....'....        BL       __aeabi_d2f
   \       0x40   0x....'....        LDR.W    R1,??DataTable17_28
   \       0x44   0x6008             STR      R0,[R1, #+0]
    242              Encoder_Z = Va+Vb+Vc;
   \       0x46   0x0020             MOVS     R0,R4
   \       0x48   0x0029             MOVS     R1,R5
   \       0x4A   0x....'....        BL       __aeabi_fadd
   \       0x4E   0x0031             MOVS     R1,R6
   \       0x50   0x....'....        BL       __aeabi_fadd
   \       0x54   0x....'....        LDR.W    R1,??DataTable17_29
   \       0x58   0x6008             STR      R0,[R1, #+0]
    243          }
   \       0x5A   0xBD70             POP      {R4-R6,PC}       ;; return
    244          
    245          /*===============================
    246          
    247          逆向運動學分析
    248          
    249          ===============================*/

   \                                 In section .text, align 2, keep-with-next
    250          void Kinematic_Analysis(float Vx,float Vy,float Vz){
   \                     Kinematic_Analysis: (+1)
   \        0x0   0xE92D 0x43F8      PUSH     {R3-R9,LR}
   \        0x4   0x0006             MOVS     R6,R0
   \        0x6   0x000C             MOVS     R4,R1
   \        0x8   0x0015             MOVS     R5,R2
    251              PWM_a = Vx + L_PARAMETER*Vz;
                           ^
Warning[Pa093]: implicit conversion from floating point to integer
   \        0xA   0x0030             MOVS     R0,R6
   \        0xC   0x0029             MOVS     R1,R5
   \        0xE   0x....'....        BL       __aeabi_fadd
   \       0x12   0x....'....        BL       __aeabi_f2iz
   \       0x16   0x....'....        LDR.W    R1,??DataTable17_17
   \       0x1A   0x6008             STR      R0,[R1, #+0]
    252              PWM_b = -X_PARAMETER*Vx + Y_PARAMETER*Vy + L_PARAMETER*Vz;
                           ^
Warning[Pa093]: implicit conversion from floating point to integer
   \       0x1C   0x....'....        LDR.W    R7,??DataTable17_30  ;; 0x3f5db3d7
   \       0x20   0xF05F 0x483F      MOVS     R8,#-1090519040
   \       0x24   0x0030             MOVS     R0,R6
   \       0x26   0x4641             MOV      R1,R8
   \       0x28   0x....'....        BL       __aeabi_fmul
   \       0x2C   0x4681             MOV      R9,R0
   \       0x2E   0x0020             MOVS     R0,R4
   \       0x30   0x0039             MOVS     R1,R7
   \       0x32   0x....'....        BL       __aeabi_fmul
   \       0x36   0x4649             MOV      R1,R9
   \       0x38   0x....'....        BL       __aeabi_fadd
   \       0x3C   0x0029             MOVS     R1,R5
   \       0x3E   0x....'....        BL       __aeabi_fadd
   \       0x42   0x....'....        BL       __aeabi_f2iz
   \       0x46   0x....'....        LDR.W    R1,??DataTable17_18
   \       0x4A   0x6008             STR      R0,[R1, #+0]
    253              PWM_c = -X_PARAMETER*Vx - Y_PARAMETER*Vy + L_PARAMETER*Vz;
                           ^
Warning[Pa093]: implicit conversion from floating point to integer
   \       0x4C   0x0030             MOVS     R0,R6
   \       0x4E   0x4641             MOV      R1,R8
   \       0x50   0x....'....        BL       __aeabi_fmul
   \       0x54   0x0006             MOVS     R6,R0
   \       0x56   0x0020             MOVS     R0,R4
   \       0x58   0x0039             MOVS     R1,R7
   \       0x5A   0x....'....        BL       __aeabi_fmul
   \       0x5E   0x0001             MOVS     R1,R0
   \       0x60   0x0030             MOVS     R0,R6
   \       0x62   0x....'....        BL       __aeabi_fsub
   \       0x66   0x0029             MOVS     R1,R5
   \       0x68   0x....'....        BL       __aeabi_fadd
   \       0x6C   0x....'....        BL       __aeabi_f2iz
   \       0x70   0x....'....        LDR.W    R1,??DataTable17_19
   \       0x74   0x6008             STR      R0,[R1, #+0]
    254          }
   \       0x76   0xE8BD 0x83F1      POP      {R0,R4-R9,PC}    ;; return
    255          

   \                                 In section .text, align 2, keep-with-next
    256          void ahrs(void){
   \                     ahrs: (+1)
   \        0x0   0xB53E             PUSH     {R1-R5,LR}
    257              //陀螺儀raw data
    258              get_gyro_raw();
   \        0x2   0x....'....        BL       get_gyro_raw
    259              get_deg_s(&gyro_raw_f,&Mpu.deg_s);
   \        0x6   0x....'....        LDR.W    R4,??DataTable17_31
   \        0xA   0x....'....        LDR.W    R5,??DataTable17_32
   \        0xE   0x0029             MOVS     R1,R5
   \       0x10   0x0020             MOVS     R0,R4
   \       0x12   0x....'....        BL       get_deg_s
    260              get_rad_s(&gyro_raw_f,&Mpu.rad_s);
   \       0x16   0xF115 0x010C      ADDS     R1,R5,#+12
   \       0x1A   0x0020             MOVS     R0,R4
   \       0x1C   0x....'....        BL       get_rad_s
    261              //加速度計raw data
    262              get_acc_raw();
   \       0x20   0x....'....        BL       get_acc_raw
    263              //姿態演算法需要用的低通濾波器
    264              acc_iir_lpf(&acc_raw_f,&acc_att_lpf,Mpu.att_acc_factor);
   \       0x24   0x....'....        LDR.W    R4,??DataTable17_33
   \       0x28   0x6A6A             LDR      R2,[R5, #+36]
   \       0x2A   0x0021             MOVS     R1,R4
   \       0x2C   0x....'....        LDR.W    R0,??DataTable17_34
   \       0x30   0x....'....        BL       acc_iir_lpf
    265              get_acc_g(&acc_att_lpf,&Mpu.acc_g);
   \       0x34   0xF115 0x0118      ADDS     R1,R5,#+24
   \       0x38   0x0020             MOVS     R0,R4
   \       0x3A   0x....'....        BL       get_acc_g
    266              //姿態演算
    267              mahony_update(Mpu.rad_s.x,Mpu.rad_s.y,Mpu.rad_s.z,Mpu.acc_g.x,Mpu.acc_g.y,Mpu.acc_g.z);
   \       0x3E   0x6A28             LDR      R0,[R5, #+32]
   \       0x40   0x9001             STR      R0,[SP, #+4]
   \       0x42   0x69E8             LDR      R0,[R5, #+28]
   \       0x44   0x9000             STR      R0,[SP, #+0]
   \       0x46   0x69AB             LDR      R3,[R5, #+24]
   \       0x48   0x696A             LDR      R2,[R5, #+20]
   \       0x4A   0x6929             LDR      R1,[R5, #+16]
   \       0x4C   0x68E8             LDR      R0,[R5, #+12]
   \       0x4E   0x....'....        BL       mahony_update
    268              //姿態演算矩陣更新
    269              Matrix_ready();
   \       0x52   0x....'....        BL       Matrix_ready
    270          }
   \       0x56   0xBD37             POP      {R0-R2,R4,R5,PC}  ;; return
    271          /*===============================
    272          
    273          TIM4 interrupt - main
    274          
    275          =================================*/

   \                                 In section .bss, align 4
    276          _Time_test run_start;
   \                     run_start:
   \        0x0                      DS8 16

   \                                 In section .bss, align 4
    277          _Time_test run_stop;
   \                     run_stop:
   \        0x0                      DS8 16

   \                                 In section .bss, align 4
    278          int jump_pwm=0,jump_pwm_max=0;
   \                     jump_pwm:
   \        0x0                      DS8 4

   \                                 In section .bss, align 4
   \                     jump_pwm_max:
   \        0x0                      DS8 4
    279          

   \                                 In section .text, align 2, keep-with-next
    280          void jump_program(){
   \                     jump_program: (+1)
   \        0x0   0xB580             PUSH     {R7,LR}
    281              if(((att.rol <-15.5) && (att.rol >=-18.0))){// || ((att.rol > 15.5) && (att.rol<=18))) {//out balance, stop wheel
   \        0x2   0x....'....        LDR.W    R2,??DataTable17_35
   \        0x6   0x6850             LDR      R0,[R2, #+4]
   \        0x8   0x....'....        LDR.W    R1,??DataTable17_36  ;; 0xc1780000
   \        0xC   0x....'....        BL       __aeabi_cfcmple
   \       0x10   0xD214             BCS.N    ??jump_program_0
   \       0x12   0x6850             LDR      R0,[R2, #+4]
   \       0x14   0x....'....        LDR.W    R1,??DataTable17_37  ;; 0xc1900000
   \       0x18   0x....'....        BL       __aeabi_cfrcmple
   \       0x1C   0xD80E             BHI.N    ??jump_program_0
    282                  PWM_a = 0;
   \       0x1E   0x2000             MOVS     R0,#+0
   \       0x20   0x....'....        LDR.W    R1,??DataTable17_17
   \       0x24   0x6008             STR      R0,[R1, #+0]
    283                  jump_pwm=0;
   \       0x26   0x2000             MOVS     R0,#+0
   \       0x28   0x....'....        LDR.W    R1,??DataTable17_38
   \       0x2C   0x6008             STR      R0,[R1, #+0]
    284                  set_pwm(1,0,0,0);
   \       0x2E   0x2300             MOVS     R3,#+0
   \       0x30   0x2200             MOVS     R2,#+0
   \       0x32   0x2100             MOVS     R1,#+0
   \       0x34   0x2001             MOVS     R0,#+1
   \       0x36   0x....'....        BL       set_pwm
   \       0x3A   0xE040             B.N      ??jump_program_1
    285              }else if(att.rol<-18 && att.rol>=-22){//jump up
   \                     ??jump_program_0: (+1)
   \       0x3C   0x6850             LDR      R0,[R2, #+4]
   \       0x3E   0x....'....        LDR.W    R1,??DataTable17_37  ;; 0xc1900000
   \       0x42   0x....'....        BL       __aeabi_cfcmple
   \       0x46   0xD211             BCS.N    ??jump_program_2
   \       0x48   0x6850             LDR      R0,[R2, #+4]
   \       0x4A   0x....'....        LDR.W    R1,??DataTable17_39  ;; 0xc1b00000
   \       0x4E   0x....'....        BL       __aeabi_cfrcmple
   \       0x52   0xD80B             BHI.N    ??jump_program_2
    286                  PWM_a =-2470;
   \       0x54   0x....'....        LDR.W    R0,??DataTable17_17
   \       0x58   0x....'....        LDR.W    R1,??DataTable17_40  ;; 0xfffff65a
   \       0x5C   0x6001             STR      R1,[R0, #+0]
    287                  set_pwm(1,PWM_a,0,0);
   \       0x5E   0x2300             MOVS     R3,#+0
   \       0x60   0x2200             MOVS     R2,#+0
   \       0x62   0x6801             LDR      R1,[R0, #+0]
   \       0x64   0x2001             MOVS     R0,#+1
   \       0x66   0x....'....        BL       set_pwm
   \       0x6A   0xE028             B.N      ??jump_program_1
    288              }else if(att.rol<-22 && att.rol>=-27){//jump up
   \                     ??jump_program_2: (+1)
   \       0x6C   0x6850             LDR      R0,[R2, #+4]
   \       0x6E   0x....'....        LDR.W    R1,??DataTable17_39  ;; 0xc1b00000
   \       0x72   0x....'....        BL       __aeabi_cfcmple
   \       0x76   0xD211             BCS.N    ??jump_program_3
   \       0x78   0x6850             LDR      R0,[R2, #+4]
   \       0x7A   0x....'....        LDR.W    R1,??DataTable17_41  ;; 0xc1d80000
   \       0x7E   0x....'....        BL       __aeabi_cfrcmple
   \       0x82   0xD80B             BHI.N    ??jump_program_3
    289                  PWM_a =-5150;
   \       0x84   0x....'....        LDR.W    R0,??DataTable17_17
   \       0x88   0x....'....        LDR.W    R1,??DataTable17_42  ;; 0xffffebe2
   \       0x8C   0x6001             STR      R1,[R0, #+0]
    290                  set_pwm(1,PWM_a,0,0);
   \       0x8E   0x2300             MOVS     R3,#+0
   \       0x90   0x2200             MOVS     R2,#+0
   \       0x92   0x6801             LDR      R1,[R0, #+0]
   \       0x94   0x2001             MOVS     R0,#+1
   \       0x96   0x....'....        BL       set_pwm
   \       0x9A   0xE010             B.N      ??jump_program_1
    291              }else if(att.rol<-40){
   \                     ??jump_program_3: (+1)
   \       0x9C   0x6850             LDR      R0,[R2, #+4]
   \       0x9E   0x....'....        LDR.W    R1,??DataTable17_43  ;; 0xc2200000
   \       0xA2   0x....'....        BL       __aeabi_cfcmple
   \       0xA6   0xD20A             BCS.N    ??jump_program_1
    292                  PWM_a =-5050;
   \       0xA8   0x....'....        LDR.W    R0,??DataTable17_17
   \       0xAC   0x....'....        LDR.W    R1,??DataTable17_44  ;; 0xffffec46
   \       0xB0   0x6001             STR      R1,[R0, #+0]
    293                  set_pwm(1,PWM_a,0,0);
   \       0xB2   0x2300             MOVS     R3,#+0
   \       0xB4   0x2200             MOVS     R2,#+0
   \       0xB6   0x6801             LDR      R1,[R0, #+0]
   \       0xB8   0x2001             MOVS     R0,#+1
   \       0xBA   0x....'....        BL       set_pwm
    294          //    }else if(att.rol>12 && att.rol<15){//jump up
    295          //        PWM_a =8300;
    296          //        set_pwm(1,PWM_a,0,0);
    297          //    }else if(att.rol>15){//jump up
    298          //        PWM_a =1300;
    299          //        set_pwm(1,PWM_a,0,0);
    300              }
    301          }
   \                     ??jump_program_1: (+1)
   \       0xBE   0xBD01             POP      {R0,PC}          ;; return
    302          

   \                                 In section .text, align 2, keep-with-next
    303          void balance_3D(){
   \                     balance_3D: (+1)
   \        0x0   0xE92D 0x43F8      PUSH     {R3-R9,LR}
    304              //正向運動學分析
    305              Encoder_Analysis(encoder_a,encoder_b,encoder_c);
   \        0x4   0x....'....        LDR.W    R0,??DataTable17_45
   \        0x8   0x6800             LDR      R0,[R0, #+0]
   \        0xA   0x....'....        BL       __aeabi_i2f
   \        0xE   0x0002             MOVS     R2,R0
   \       0x10   0x0014             MOVS     R4,R2
   \       0x12   0x....'....        LDR.W    R0,??DataTable17_46
   \       0x16   0x6800             LDR      R0,[R0, #+0]
   \       0x18   0x....'....        BL       __aeabi_i2f
   \       0x1C   0x0001             MOVS     R1,R0
   \       0x1E   0x0022             MOVS     R2,R4
   \       0x20   0x000C             MOVS     R4,R1
   \       0x22   0x0015             MOVS     R5,R2
   \       0x24   0x....'....        LDR.W    R0,??DataTable17_47
   \       0x28   0x6800             LDR      R0,[R0, #+0]
   \       0x2A   0x....'....        BL       __aeabi_i2f
   \       0x2E   0x002A             MOVS     R2,R5
   \       0x30   0x0021             MOVS     R1,R4
   \       0x32   0x....'....        BL       Encoder_Analysis
    306              //balance_pid
    307              balance_pwm_a = -control_balance_x(att.rol,Mpu.deg_s.x);
   \       0x36   0x....'....        LDR.W    R6,??DataTable17_48
   \       0x3A   0x....'....        LDR.W    R7,??DataTable17_35
   \       0x3E   0x....'....        LDR.W    R8,??DataTable17_32
   \       0x42   0xF8D8 0x1000      LDR      R1,[R8, #+0]
   \       0x46   0x6878             LDR      R0,[R7, #+4]
   \       0x48   0x....'....        BL       control_balance_x
   \       0x4C   0xF090 0x4000      EORS     R0,R0,#0x80000000
   \       0x50   0x6030             STR      R0,[R6, #+0]
    308              balance_pwm_b = control_balance_y(att.pit,Mpu.deg_s.y);
   \       0x52   0x....'....        LDR.W    R4,??DataTable17_49
   \       0x56   0xF8D8 0x1004      LDR      R1,[R8, #+4]
   \       0x5A   0x6838             LDR      R0,[R7, #+0]
   \       0x5C   0x....'....        BL       control_balance_y
   \       0x60   0x6020             STR      R0,[R4, #+0]
    309              balance_pwm_c = control_balance_z(att.yaw,Mpu.deg_s.z);
   \       0x62   0x....'....        LDR.W    R5,??DataTable17_50
   \       0x66   0xF8D8 0x1008      LDR      R1,[R8, #+8]
   \       0x6A   0x68B8             LDR      R0,[R7, #+8]
   \       0x6C   0x....'....        BL       control_balance_z
   \       0x70   0x6028             STR      R0,[R5, #+0]
    310              //velocity pid
    311              velocity_pwm_a = control_velocity_x(Encoder_X);
                                                         ^
Warning[Pa093]: implicit conversion from floating point to integer
   \       0x72   0x....'....        LDR.W    R8,??DataTable17_51
   \       0x76   0x....'....        LDR.W    R0,??DataTable17_25
   \       0x7A   0x6800             LDR      R0,[R0, #+0]
   \       0x7C   0x....'....        BL       __aeabi_f2iz
   \       0x80   0x....'....        BL       control_velocity_x
   \       0x84   0xF8C8 0x0000      STR      R0,[R8, #+0]
    312              velocity_pwm_b = control_velocity_y(Encoder_Y);
                                                         ^
Warning[Pa093]: implicit conversion from floating point to integer
   \       0x88   0x....'....        LDR.W    R9,??DataTable17_52
   \       0x8C   0x....'....        LDR.W    R0,??DataTable17_28
   \       0x90   0x6800             LDR      R0,[R0, #+0]
   \       0x92   0x....'....        BL       __aeabi_f2iz
   \       0x96   0x....'....        BL       control_velocity_y
   \       0x9A   0xF8C9 0x0000      STR      R0,[R9, #+0]
    313              Move_X = balance_pwm_a + velocity_pwm_a;
   \       0x9E   0x....'....        LDR.W    R7,??DataTable17_53
   \       0xA2   0x6831             LDR      R1,[R6, #+0]
   \       0xA4   0xF8D8 0x0000      LDR      R0,[R8, #+0]
   \       0xA8   0x....'....        BL       __aeabi_fadd
   \       0xAC   0x6038             STR      R0,[R7, #+0]
    314              Move_Y = balance_pwm_b + velocity_pwm_b;
   \       0xAE   0x....'....        LDR.W    R6,??DataTable17_54
   \       0xB2   0x6821             LDR      R1,[R4, #+0]
   \       0xB4   0xF8D9 0x0000      LDR      R0,[R9, #+0]
   \       0xB8   0x....'....        BL       __aeabi_fadd
   \       0xBC   0x6030             STR      R0,[R6, #+0]
    315              Move_Z = -balance_pwm_c;
   \       0xBE   0x....'....        LDR.W    R0,??DataTable17_55
   \       0xC2   0x6829             LDR      R1,[R5, #+0]
   \       0xC4   0xF091 0x4100      EORS     R1,R1,#0x80000000
   \       0xC8   0x6001             STR      R1,[R0, #+0]
    316              //逆向運動學分析
    317              Kinematic_Analysis(Move_X,Move_Y,Move_Z);
   \       0xCA   0x6802             LDR      R2,[R0, #+0]
   \       0xCC   0x6831             LDR      R1,[R6, #+0]
   \       0xCE   0x6838             LDR      R0,[R7, #+0]
   \       0xD0   0x....'....        BL       Kinematic_Analysis
    318              Max_pwm_limit(Max_Pwm);
   \       0xD4   0x....'....        LDR.W    R0,??DataTable17_56
   \       0xD8   0x6800             LDR      R0,[R0, #+0]
   \       0xDA   0x....'....        BL       Max_pwm_limit
    319          }
   \       0xDE   0xE8BD 0x83F1      POP      {R0,R4-R9,PC}    ;; return
    320          

   \                                 In section .text, align 2, keep-with-next
    321          void balance_2D(){
   \                     balance_2D: (+1)
   \        0x0   0xB538             PUSH     {R3-R5,LR}
    322              Velocity_KP_old = 80;
   \        0x2   0x2050             MOVS     R0,#+80
   \        0x4   0x....             LDR.N    R1,??DataTable15_10
   \        0x6   0x6008             STR      R0,[R1, #+0]
    323              Velocity_KI_old = 0.006;
                                       ^
Warning[Pa092]: implicit conversion to integer does not preserve the value
   \        0x8   0x2000             MOVS     R0,#+0
   \        0xA   0x....'....        LDR.W    R1,??DataTable17
   \        0xE   0x6008             STR      R0,[R1, #+0]
    324              Balance_KP_old = 850;//500 0 85
   \       0x10   0xF240 0x3052      MOVW     R0,#+850
   \       0x14   0x....             LDR.N    R1,??DataTable16_7
   \       0x16   0x6008             STR      R0,[R1, #+0]
    325              Balance_Ki_old = 0.0;
   \       0x18   0x2000             MOVS     R0,#+0
   \       0x1A   0x....             LDR.N    R1,??DataTable16_8
   \       0x1C   0x6008             STR      R0,[R1, #+0]
    326              Balance_KD_old = 155;
   \       0x1E   0x....'....        LDR.W    R0,??DataTable17_57  ;; 0x431b0000
   \       0x22   0x....'....        LDR.W    R1,??DataTable17_1
   \       0x26   0x6008             STR      R0,[R1, #+0]
    327              balance_pwm_a = -control_balance(att.rol,Mpu.deg_s.x);
   \       0x28   0x....'....        LDR.W    R4,??DataTable17_48
   \       0x2C   0x....'....        LDR.W    R0,??DataTable17_32
   \       0x30   0x6801             LDR      R1,[R0, #+0]
   \       0x32   0x....'....        LDR.W    R0,??DataTable17_35
   \       0x36   0x6840             LDR      R0,[R0, #+4]
   \       0x38   0x....'....        BL       control_balance
   \       0x3C   0xF090 0x4000      EORS     R0,R0,#0x80000000
   \       0x40   0x6020             STR      R0,[R4, #+0]
    328              velocity_pwm_a = control_velocity(encoder_a);
   \       0x42   0x....'....        LDR.W    R5,??DataTable17_51
   \       0x46   0x....'....        LDR.W    R0,??DataTable17_47
   \       0x4A   0x6800             LDR      R0,[R0, #+0]
   \       0x4C   0x....'....        BL       control_velocity
   \       0x50   0x6028             STR      R0,[R5, #+0]
    329              PWM_a = 1.3*(balance_pwm_a + velocity_pwm_a);
                           ^
Warning[Pa093]: implicit conversion from floating point to integer
   \       0x52   0x6820             LDR      R0,[R4, #+0]
   \       0x54   0x6829             LDR      R1,[R5, #+0]
   \       0x56   0x....'....        BL       __aeabi_fadd
   \       0x5A   0x....'....        BL       __aeabi_f2d
   \       0x5E   0x....'....        LDR.W    R2,??DataTable17_58  ;; 0xcccccccd
   \       0x62   0x....'....        LDR.W    R3,??DataTable17_59  ;; 0x3ff4cccc
   \       0x66   0x....'....        BL       __aeabi_dmul
   \       0x6A   0x....'....        BL       __aeabi_d2iz
   \       0x6E   0x....'....        LDR.W    R1,??DataTable17_17
   \       0x72   0x6008             STR      R0,[R1, #+0]
    330              Max_pwm_limit(Max_Pwm);
   \       0x74   0x....'....        LDR.W    R0,??DataTable17_56
   \       0x78   0x6800             LDR      R0,[R0, #+0]
   \       0x7A   0x....'....        BL       Max_pwm_limit
    331          }
   \       0x7E   0xBD31             POP      {R0,R4,R5,PC}    ;; return
    332          

   \                                 In section .bss, align 4
    333          int angle_target_sampling_num_roll=0, angle_target_sampling_num_pitch=0, sampling_range=50; // T = 5ms * sampling_range
   \                     angle_target_sampling_num_roll:
   \        0x0                      DS8 4

   \                                 In section .bss, align 4
   \                     angle_target_sampling_num_pitch:
   \        0x0                      DS8 4

   \                                 In section .data, align 4
   \                     sampling_range:
   \        0x0   0x0000'0032        DC32 50

   \                                 In section .bss, align 4
    334          float angle_target_sampling_buffer_roll=0.0, avg_buffer_roll=0, avg_buffer_pitch=0, angle_target_sampling_buffer_pitch=0.0;
   \                     angle_target_sampling_buffer_roll:
   \        0x0                      DS8 4

   \                                 In section .bss, align 4
   \                     avg_buffer_roll:
   \        0x0                      DS8 4

   \                                 In section .bss, align 4
   \                     avg_buffer_pitch:
   \        0x0                      DS8 4

   \                                 In section .bss, align 4
   \                     angle_target_sampling_buffer_pitch:
   \        0x0                      DS8 4

   \                                 In section .text, align 2, keep-with-next
    335          void auto_correct_target_angle(u8 axis){
   \                     auto_correct_target_angle: (+1)
   \        0x0   0xE92D 0x43F8      PUSH     {R3-R9,LR}
    336              if(axis){//2D
   \        0x4   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \        0x6   0x2800             CMP      R0,#+0
   \        0x8   0xD056             BEQ.N    ??auto_correct_target_angle_0
    337                  if (Mpu.deg_s.x <30 && Mpu.deg_s.x > -30){
   \        0xA   0x....'....        LDR.W    R2,??DataTable17_32
   \        0xE   0x6810             LDR      R0,[R2, #+0]
   \       0x10   0x....'....        LDR.W    R1,??DataTable17_60  ;; 0x41f00000
   \       0x14   0x....'....        BL       __aeabi_cfcmple
   \       0x18   0xF080 0x80E2      BCS.W    ??auto_correct_target_angle_1
   \       0x1C   0x6810             LDR      R0,[R2, #+0]
   \       0x1E   0x....'....        LDR.W    R1,??DataTable17_61  ;; 0xc1efffff
   \       0x22   0x....'....        BL       __aeabi_cfrcmple
   \       0x26   0xF200 0x80DB      BHI.W    ??auto_correct_target_angle_1
    338                      angle_target_sampling_buffer_roll+=att.rol;
   \       0x2A   0x....'....        LDR.W    R4,??DataTable17_62
   \       0x2E   0x6821             LDR      R1,[R4, #+0]
   \       0x30   0x....'....        LDR.W    R0,??DataTable17_35
   \       0x34   0x6840             LDR      R0,[R0, #+4]
   \       0x36   0x....'....        BL       __aeabi_fadd
   \       0x3A   0x6020             STR      R0,[R4, #+0]
    339                      angle_target_sampling_num_roll+=1;
   \       0x3C   0x....'....        LDR.W    R5,??DataTable17_63
   \       0x40   0x6828             LDR      R0,[R5, #+0]
   \       0x42   0x1C40             ADDS     R0,R0,#+1
   \       0x44   0x6028             STR      R0,[R5, #+0]
    340                      if (angle_target_sampling_num_roll>=sampling_range){
   \       0x46   0x....'....        LDR.W    R0,??DataTable17_64
   \       0x4A   0x6829             LDR      R1,[R5, #+0]
   \       0x4C   0x6802             LDR      R2,[R0, #+0]
   \       0x4E   0x4291             CMP      R1,R2
   \       0x50   0xF2C0 0x80C6      BLT.W    ??auto_correct_target_angle_1
    341                          avg_buffer_roll = angle_target_sampling_buffer_roll/sampling_range;
   \       0x54   0x....'....        LDR.W    R6,??DataTable17_65
   \       0x58   0x6800             LDR      R0,[R0, #+0]
   \       0x5A   0x....'....        BL       __aeabi_i2f
   \       0x5E   0x0001             MOVS     R1,R0
   \       0x60   0x6820             LDR      R0,[R4, #+0]
   \       0x62   0x....'....        BL       __aeabi_fdiv
   \       0x66   0x6030             STR      R0,[R6, #+0]
    342                          if (avg_buffer_roll < rol_angle_target) rol_angle_target-=0.025;
   \       0x68   0x....             LDR.N    R7,??DataTable16_6
   \       0x6A   0x6830             LDR      R0,[R6, #+0]
   \       0x6C   0x6839             LDR      R1,[R7, #+0]
   \       0x6E   0x....'....        BL       __aeabi_cfcmple
   \       0x72   0xD20B             BCS.N    ??auto_correct_target_angle_2
   \       0x74   0x6838             LDR      R0,[R7, #+0]
   \       0x76   0x....'....        BL       __aeabi_f2d
   \       0x7A   0x....'....        LDR.W    R2,??DataTable17_66  ;; 0x9999999a
   \       0x7E   0x....'....        LDR.W    R3,??DataTable17_67  ;; 0xbf999999
   \       0x82   0x....'....        BL       __aeabi_dadd
   \       0x86   0x....'....        BL       __aeabi_d2f
   \       0x8A   0x6038             STR      R0,[R7, #+0]
    343                          if (avg_buffer_roll > rol_angle_target) rol_angle_target+=0.025;
   \                     ??auto_correct_target_angle_2: (+1)
   \       0x8C   0x6838             LDR      R0,[R7, #+0]
   \       0x8E   0x6831             LDR      R1,[R6, #+0]
   \       0x90   0x....'....        BL       __aeabi_cfcmple
   \       0x94   0xD20B             BCS.N    ??auto_correct_target_angle_3
   \       0x96   0x6838             LDR      R0,[R7, #+0]
   \       0x98   0x....'....        BL       __aeabi_f2d
   \       0x9C   0x....'....        LDR.W    R2,??DataTable17_66  ;; 0x9999999a
   \       0xA0   0x....'....        LDR.W    R3,??DataTable17_68  ;; 0x3f999999
   \       0xA4   0x....'....        BL       __aeabi_dadd
   \       0xA8   0x....'....        BL       __aeabi_d2f
   \       0xAC   0x6038             STR      R0,[R7, #+0]
    344                          angle_target_sampling_buffer_roll=0;
   \                     ??auto_correct_target_angle_3: (+1)
   \       0xAE   0x2000             MOVS     R0,#+0
   \       0xB0   0x6020             STR      R0,[R4, #+0]
    345                          angle_target_sampling_num_roll=0;
   \       0xB2   0x2000             MOVS     R0,#+0
   \       0xB4   0x6028             STR      R0,[R5, #+0]
   \       0xB6   0xE093             B.N      ??auto_correct_target_angle_1
    346                      }
    347                  }
    348              }else{
    349                  //3D
    350                  if (Mpu.deg_s.x <30 && Mpu.deg_s.x > -30){
   \                     ??auto_correct_target_angle_0: (+1)
   \       0xB8   0x....'....        LDR.W    R9,??DataTable17_60  ;; 0x41f00000
   \       0xBC   0x....             LDR.N    R4,??DataTable17_32
   \       0xBE   0x6820             LDR      R0,[R4, #+0]
   \       0xC0   0x4649             MOV      R1,R9
   \       0xC2   0x....'....        BL       __aeabi_cfcmple
   \       0xC6   0xD245             BCS.N    ??auto_correct_target_angle_4
   \       0xC8   0x6820             LDR      R0,[R4, #+0]
   \       0xCA   0x....'....        LDR.W    R1,??DataTable17_61  ;; 0xc1efffff
   \       0xCE   0x....'....        BL       __aeabi_cfrcmple
   \       0xD2   0xD83F             BHI.N    ??auto_correct_target_angle_4
    351                      angle_target_sampling_buffer_roll+=att.rol;
   \       0xD4   0x....             LDR.N    R5,??DataTable17_62
   \       0xD6   0x6829             LDR      R1,[R5, #+0]
   \       0xD8   0x....             LDR.N    R0,??DataTable17_35
   \       0xDA   0x6840             LDR      R0,[R0, #+4]
   \       0xDC   0x....'....        BL       __aeabi_fadd
   \       0xE0   0x6028             STR      R0,[R5, #+0]
    352                      angle_target_sampling_num_roll+=1;
   \       0xE2   0x....             LDR.N    R6,??DataTable17_63
   \       0xE4   0x6830             LDR      R0,[R6, #+0]
   \       0xE6   0x1C40             ADDS     R0,R0,#+1
   \       0xE8   0x6030             STR      R0,[R6, #+0]
    353                      if (angle_target_sampling_num_roll>=sampling_range){
   \       0xEA   0x....             LDR.N    R0,??DataTable17_64
   \       0xEC   0x6831             LDR      R1,[R6, #+0]
   \       0xEE   0x6802             LDR      R2,[R0, #+0]
   \       0xF0   0x4291             CMP      R1,R2
   \       0xF2   0xDB2F             BLT.N    ??auto_correct_target_angle_4
    354                          avg_buffer_roll = angle_target_sampling_buffer_roll/sampling_range;
   \       0xF4   0x....'....        LDR.W    R8,??DataTable17_65
   \       0xF8   0x6800             LDR      R0,[R0, #+0]
   \       0xFA   0x....'....        BL       __aeabi_i2f
   \       0xFE   0x0001             MOVS     R1,R0
   \      0x100   0x6828             LDR      R0,[R5, #+0]
   \      0x102   0x....'....        BL       __aeabi_fdiv
   \      0x106   0xF8C8 0x0000      STR      R0,[R8, #+0]
    355                          if (avg_buffer_roll < rol_angle_target) rol_angle_target-=0.025;
   \      0x10A   0x....             LDR.N    R7,??DataTable16_6
   \      0x10C   0xF8D8 0x0000      LDR      R0,[R8, #+0]
   \      0x110   0x6839             LDR      R1,[R7, #+0]
   \      0x112   0x....'....        BL       __aeabi_cfcmple
   \      0x116   0xD209             BCS.N    ??auto_correct_target_angle_5
   \      0x118   0x6838             LDR      R0,[R7, #+0]
   \      0x11A   0x....'....        BL       __aeabi_f2d
   \      0x11E   0x....             LDR.N    R2,??DataTable17_66  ;; 0x9999999a
   \      0x120   0x....             LDR.N    R3,??DataTable17_67  ;; 0xbf999999
   \      0x122   0x....'....        BL       __aeabi_dadd
   \      0x126   0x....'....        BL       __aeabi_d2f
   \      0x12A   0x6038             STR      R0,[R7, #+0]
    356                          if (avg_buffer_roll > rol_angle_target) rol_angle_target+=0.025;
   \                     ??auto_correct_target_angle_5: (+1)
   \      0x12C   0x6838             LDR      R0,[R7, #+0]
   \      0x12E   0xF8D8 0x1000      LDR      R1,[R8, #+0]
   \      0x132   0x....'....        BL       __aeabi_cfcmple
   \      0x136   0xD209             BCS.N    ??auto_correct_target_angle_6
   \      0x138   0x6838             LDR      R0,[R7, #+0]
   \      0x13A   0x....'....        BL       __aeabi_f2d
   \      0x13E   0x....             LDR.N    R2,??DataTable17_66  ;; 0x9999999a
   \      0x140   0x....             LDR.N    R3,??DataTable17_68  ;; 0x3f999999
   \      0x142   0x....'....        BL       __aeabi_dadd
   \      0x146   0x....'....        BL       __aeabi_d2f
   \      0x14A   0x6038             STR      R0,[R7, #+0]
    357                          angle_target_sampling_buffer_roll=0;
   \                     ??auto_correct_target_angle_6: (+1)
   \      0x14C   0x2000             MOVS     R0,#+0
   \      0x14E   0x6028             STR      R0,[R5, #+0]
    358                          angle_target_sampling_num_roll=0;
   \      0x150   0x2000             MOVS     R0,#+0
   \      0x152   0x6030             STR      R0,[R6, #+0]
    359                      }
    360                  }
    361                  if (Mpu.deg_s.y <30 && Mpu.deg_s.y > -30){
   \                     ??auto_correct_target_angle_4: (+1)
   \      0x154   0x6860             LDR      R0,[R4, #+4]
   \      0x156   0x4649             MOV      R1,R9
   \      0x158   0x....'....        BL       __aeabi_cfcmple
   \      0x15C   0xD240             BCS.N    ??auto_correct_target_angle_1
   \      0x15E   0x6860             LDR      R0,[R4, #+4]
   \      0x160   0x....             LDR.N    R1,??DataTable17_61  ;; 0xc1efffff
   \      0x162   0x....'....        BL       __aeabi_cfrcmple
   \      0x166   0xD83B             BHI.N    ??auto_correct_target_angle_1
    362                      angle_target_sampling_buffer_pitch+=att.pit;
   \      0x168   0x....             LDR.N    R4,??DataTable17_69
   \      0x16A   0x6821             LDR      R1,[R4, #+0]
   \      0x16C   0x....             LDR.N    R0,??DataTable17_35
   \      0x16E   0x6800             LDR      R0,[R0, #+0]
   \      0x170   0x....'....        BL       __aeabi_fadd
   \      0x174   0x6020             STR      R0,[R4, #+0]
    363                      angle_target_sampling_num_pitch+=1;
   \      0x176   0x....             LDR.N    R5,??DataTable17_70
   \      0x178   0x6828             LDR      R0,[R5, #+0]
   \      0x17A   0x1C40             ADDS     R0,R0,#+1
   \      0x17C   0x6028             STR      R0,[R5, #+0]
    364                      if (angle_target_sampling_num_pitch>=sampling_range){
   \      0x17E   0x....             LDR.N    R0,??DataTable17_64
   \      0x180   0x6829             LDR      R1,[R5, #+0]
   \      0x182   0x6802             LDR      R2,[R0, #+0]
   \      0x184   0x4291             CMP      R1,R2
   \      0x186   0xDB2B             BLT.N    ??auto_correct_target_angle_1
    365                          avg_buffer_pitch=angle_target_sampling_buffer_pitch/sampling_range;
   \      0x188   0x....             LDR.N    R6,??DataTable17_71
   \      0x18A   0x6800             LDR      R0,[R0, #+0]
   \      0x18C   0x....'....        BL       __aeabi_i2f
   \      0x190   0x0001             MOVS     R1,R0
   \      0x192   0x6820             LDR      R0,[R4, #+0]
   \      0x194   0x....'....        BL       __aeabi_fdiv
   \      0x198   0x6030             STR      R0,[R6, #+0]
    366                          if (avg_buffer_pitch < pit_angle_target) pit_angle_target-=0.025;
   \      0x19A   0x....             LDR.N    R7,??DataTable17_12
   \      0x19C   0x6830             LDR      R0,[R6, #+0]
   \      0x19E   0x6839             LDR      R1,[R7, #+0]
   \      0x1A0   0x....'....        BL       __aeabi_cfcmple
   \      0x1A4   0xD209             BCS.N    ??auto_correct_target_angle_7
   \      0x1A6   0x6838             LDR      R0,[R7, #+0]
   \      0x1A8   0x....'....        BL       __aeabi_f2d
   \      0x1AC   0x....             LDR.N    R2,??DataTable17_66  ;; 0x9999999a
   \      0x1AE   0x....             LDR.N    R3,??DataTable17_67  ;; 0xbf999999
   \      0x1B0   0x....'....        BL       __aeabi_dadd
   \      0x1B4   0x....'....        BL       __aeabi_d2f
   \      0x1B8   0x6038             STR      R0,[R7, #+0]
    367                          if (avg_buffer_pitch > pit_angle_target) pit_angle_target+=0.025;
   \                     ??auto_correct_target_angle_7: (+1)
   \      0x1BA   0x6838             LDR      R0,[R7, #+0]
   \      0x1BC   0x6831             LDR      R1,[R6, #+0]
   \      0x1BE   0x....'....        BL       __aeabi_cfcmple
   \      0x1C2   0xD209             BCS.N    ??auto_correct_target_angle_8
   \      0x1C4   0x6838             LDR      R0,[R7, #+0]
   \      0x1C6   0x....'....        BL       __aeabi_f2d
   \      0x1CA   0x....             LDR.N    R2,??DataTable17_66  ;; 0x9999999a
   \      0x1CC   0x....             LDR.N    R3,??DataTable17_68  ;; 0x3f999999
   \      0x1CE   0x....'....        BL       __aeabi_dadd
   \      0x1D2   0x....'....        BL       __aeabi_d2f
   \      0x1D6   0x6038             STR      R0,[R7, #+0]
    368                          angle_target_sampling_buffer_pitch=0;
   \                     ??auto_correct_target_angle_8: (+1)
   \      0x1D8   0x2000             MOVS     R0,#+0
   \      0x1DA   0x6020             STR      R0,[R4, #+0]
    369                          angle_target_sampling_num_pitch=0;
   \      0x1DC   0x2000             MOVS     R0,#+0
   \      0x1DE   0x6028             STR      R0,[R5, #+0]
    370                      }
    371                  }
    372              }
    373          }
   \                     ??auto_correct_target_angle_1: (+1)
   \      0x1E0   0xE8BD 0x83F1      POP      {R0,R4-R9,PC}    ;; return
    374          

   \                                 In section .text, align 2, keep-with-next
    375          void TIM5_IRQHandler(void){
   \                     TIM5_IRQHandler: (+1)
   \        0x0   0xB570             PUSH     {R4-R6,LR}
    376              if(TIM5->SR&0X0001){//確認更新中斷旗標為有效
   \        0x2   0x....             LDR.N    R4,??DataTable17_72  ;; 0x40000c10
   \        0x4   0x8820             LDRH     R0,[R4, #+0]
   \        0x6   0x07C0             LSLS     R0,R0,#+31
   \        0x8   0xD57D             BPL.N    ??TIM5_IRQHandler_0
    377                  MPU6050_Get_Display();
   \        0xA   0x....'....        BL       MPU6050_Get_Display
    378                  running_tim_cnt++ ;
   \        0xE   0x....             LDR.N    R0,??DataTable17_73
   \       0x10   0x6801             LDR      R1,[R0, #+0]
   \       0x12   0x1C49             ADDS     R1,R1,#+1
   \       0x14   0x6001             STR      R1,[R0, #+0]
    379                  time_check(&run_start);//timer時間測量
   \       0x16   0x....             LDR.N    R0,??DataTable17_74
   \       0x18   0x....'....        BL       time_check
    380                  ahrs();
   \       0x1C   0x....'....        BL       ahrs
    381                  encoder_a=-read_Encoder(1);
   \       0x20   0x2001             MOVS     R0,#+1
   \       0x22   0x....'....        BL       read_Encoder
   \       0x26   0x4240             RSBS     R0,R0,#+0
   \       0x28   0x....             LDR.N    R1,??DataTable17_47
   \       0x2A   0x6008             STR      R0,[R1, #+0]
    382                  encoder_b=-read_Encoder(2);
   \       0x2C   0x2002             MOVS     R0,#+2
   \       0x2E   0x....'....        BL       read_Encoder
   \       0x32   0x4240             RSBS     R0,R0,#+0
   \       0x34   0x....             LDR.N    R1,??DataTable17_46
   \       0x36   0x6008             STR      R0,[R1, #+0]
    383                  encoder_c=-read_Encoder(3);
   \       0x38   0x2003             MOVS     R0,#+3
   \       0x3A   0x....'....        BL       read_Encoder
   \       0x3E   0x4240             RSBS     R0,R0,#+0
   \       0x40   0x....             LDR.N    R1,??DataTable17_45
   \       0x42   0x6008             STR      R0,[R1, #+0]
    384                  if (nvic_flag == 1){
   \       0x44   0x....             LDR.N    R0,??DataTable17_75
   \       0x46   0x6800             LDR      R0,[R0, #+0]
   \       0x48   0x2801             CMP      R0,#+1
   \       0x4A   0xD157             BNE.N    ??TIM5_IRQHandler_1
    385                      if ((att.rol>=-15.5) && (att.rol <=30.5)){//check 2D balance
   \       0x4C   0x....             LDR.N    R5,??DataTable17_35
   \       0x4E   0x6868             LDR      R0,[R5, #+4]
   \       0x50   0x....             LDR.N    R1,??DataTable17_36  ;; 0xc1780000
   \       0x52   0x....'....        BL       __aeabi_cfrcmple
   \       0x56   0xD84F             BHI.N    ??TIM5_IRQHandler_2
   \       0x58   0x6868             LDR      R0,[R5, #+4]
   \       0x5A   0x....             LDR.N    R1,??DataTable17_76  ;; 0x41f40001
   \       0x5C   0x....'....        BL       __aeabi_cfcmple
   \       0x60   0xD24A             BCS.N    ??TIM5_IRQHandler_2
    386                          if (att.pit>=pit_angle_target-8 && att.pit<=pit_angle_target+8){//3D balance
   \       0x62   0x....             LDR.N    R6,??DataTable17_12
   \       0x64   0x6831             LDR      R1,[R6, #+0]
   \       0x66   0xF05F 0x4041      MOVS     R0,#-1056964608
   \       0x6A   0x....'....        BL       __aeabi_fadd
   \       0x6E   0x0001             MOVS     R1,R0
   \       0x70   0x6828             LDR      R0,[R5, #+0]
   \       0x72   0x....'....        BL       __aeabi_cfrcmple
   \       0x76   0xD817             BHI.N    ??TIM5_IRQHandler_3
   \       0x78   0x6831             LDR      R1,[R6, #+0]
   \       0x7A   0xF05F 0x4082      MOVS     R0,#+1090519040
   \       0x7E   0x....'....        BL       __aeabi_fadd
   \       0x82   0x6829             LDR      R1,[R5, #+0]
   \       0x84   0x....'....        BL       __aeabi_cfrcmple
   \       0x88   0xD80E             BHI.N    ??TIM5_IRQHandler_3
    387                              balance_3D();
   \       0x8A   0x....'....        BL       balance_3D
    388                              set_pwm(123,PWM_a,PWM_b,PWM_c);
   \       0x8E   0x....             LDR.N    R0,??DataTable17_19
   \       0x90   0x6803             LDR      R3,[R0, #+0]
   \       0x92   0x....             LDR.N    R0,??DataTable17_18
   \       0x94   0x6802             LDR      R2,[R0, #+0]
   \       0x96   0x....             LDR.N    R0,??DataTable17_17
   \       0x98   0x6801             LDR      R1,[R0, #+0]
   \       0x9A   0x207B             MOVS     R0,#+123
   \       0x9C   0x....'....        BL       set_pwm
    389                              auto_correct_target_angle(0);
   \       0xA0   0x2000             MOVS     R0,#+0
   \       0xA2   0x....'....        BL       auto_correct_target_angle
   \       0xA6   0xE029             B.N      ??TIM5_IRQHandler_1
    390                          }else if (jump_state==2){//2D jump to 3D
   \                     ??TIM5_IRQHandler_3: (+1)
   \       0xA8   0x....             LDR.N    R0,??DataTable17_77
   \       0xAA   0x6800             LDR      R0,[R0, #+0]
   \       0xAC   0x2802             CMP      R0,#+2
   \       0xAE   0xD116             BNE.N    ??TIM5_IRQHandler_4
    391                              balance_2D();
   \       0xB0   0x....'....        BL       balance_2D
    392                              jump_pwm+=500;
   \       0xB4   0x....             LDR.N    R0,??DataTable17_38
   \       0xB6   0x6801             LDR      R1,[R0, #+0]
   \       0xB8   0xF511 0x71FA      ADDS     R1,R1,#+500
   \       0xBC   0x6001             STR      R1,[R0, #+0]
    393                              if(jump_pwm>jump_pwm_max) jump_pwm=jump_pwm_max;//slowly add
   \       0xBE   0x....             LDR.N    R1,??DataTable17_78
   \       0xC0   0x680A             LDR      R2,[R1, #+0]
   \       0xC2   0x6803             LDR      R3,[R0, #+0]
   \       0xC4   0x429A             CMP      R2,R3
   \       0xC6   0xDA01             BGE.N    ??TIM5_IRQHandler_5
   \       0xC8   0x6809             LDR      R1,[R1, #+0]
   \       0xCA   0x6001             STR      R1,[R0, #+0]
    394                              set_pwm(123,PWM_a,-(jump_pwm+0),jump_pwm);
   \                     ??TIM5_IRQHandler_5: (+1)
   \       0xCC   0x6803             LDR      R3,[R0, #+0]
   \       0xCE   0x6802             LDR      R2,[R0, #+0]
   \       0xD0   0x4252             RSBS     R2,R2,#+0
   \       0xD2   0x....             LDR.N    R0,??DataTable17_17
   \       0xD4   0x6801             LDR      R1,[R0, #+0]
   \       0xD6   0x207B             MOVS     R0,#+123
   \       0xD8   0x....'....        BL       set_pwm
   \       0xDC   0xE00E             B.N      ??TIM5_IRQHandler_1
    395                          }else{// keep 2D balance
    396                              balance_2D();
   \                     ??TIM5_IRQHandler_4: (+1)
   \       0xDE   0x....'....        BL       balance_2D
    397                              set_pwm(123,PWM_a,0,0);
   \       0xE2   0x2300             MOVS     R3,#+0
   \       0xE4   0x2200             MOVS     R2,#+0
   \       0xE6   0x....             LDR.N    R0,??DataTable17_17
   \       0xE8   0x6801             LDR      R1,[R0, #+0]
   \       0xEA   0x207B             MOVS     R0,#+123
   \       0xEC   0x....'....        BL       set_pwm
    398                              auto_correct_target_angle(1);
   \       0xF0   0x2001             MOVS     R0,#+1
   \       0xF2   0x....'....        BL       auto_correct_target_angle
   \       0xF6   0xE001             B.N      ??TIM5_IRQHandler_1
    399                          }
    400                      }else{
    401                          jump_program();
   \                     ??TIM5_IRQHandler_2: (+1)
   \       0xF8   0x....'....        BL       jump_program
    402                      }
    403                  }
    404                  Anotc_SendData();
   \                     ??TIM5_IRQHandler_1: (+1)
   \       0xFC   0x....'....        BL       Anotc_SendData
    405                  time_check(&run_stop);
   \      0x100   0x....             LDR.N    R0,??DataTable17_79
   \      0x102   0x....'....        BL       time_check
    406              }
    407              TIM5->SR&=~(1<<0);//清除更新中斷旗標  TIM4->SR = (uint16_t)~TIM_FLAG;
   \                     ??TIM5_IRQHandler_0: (+1)
   \      0x106   0x8821             LDRH     R1,[R4, #+0]
   \      0x108   0xF64F 0x70FE      MOVW     R0,#+65534
   \      0x10C   0x4001             ANDS     R1,R0,R1
   \      0x10E   0x8021             STRH     R1,[R4, #+0]
    408          }
   \      0x110   0xBD70             POP      {R4-R6,PC}       ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15:
   \        0x0   0x....'....        DC32     `control_velocity::Encoder_Least`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15_1:
   \        0x0   0x....'....        DC32     `control_velocity::Encoder`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15_2:
   \        0x0   0x3FE6'6666        DC32     0x3fe66666

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15_3:
   \        0x0   0x3FD3'3333        DC32     0x3fd33333

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15_4:
   \        0x0   0x....'....        DC32     `control_velocity::Encoder_Integral`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15_5:
   \        0x0   0x46D2'F001        DC32     0x46d2f001

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15_6:
   \        0x0   0x46D2'F000        DC32     0x46d2f000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15_7:
   \        0x0   0xC6D2'F000        DC32     0xc6d2f000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15_8:
   \        0x0   0x....'....        DC32     flag_stop

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15_9:
   \        0x0   0x....'....        DC32     `control_velocity::Velocity`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15_10:
   \        0x0   0x....'....        DC32     Velocity_KP_old

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable16:
   \        0x0   0x....'....        DC32     `control_balance::Bias_last`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable16_1:
   \        0x0   0x....'....        DC32     `control_balance::Bias`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable16_2:
   \        0x0   0x....'....        DC32     `control_balance::Bias_integral`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable16_3:
   \        0x0   0x4583'4001        DC32     0x45834001

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable16_4:
   \        0x0   0x4583'4000        DC32     0x45834000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable16_5:
   \        0x0   0xC583'4000        DC32     0xc5834000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable16_6:
   \        0x0   0x....'....        DC32     rol_angle_target

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable16_7:
   \        0x0   0x....'....        DC32     Balance_KP_old

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable16_8:
   \        0x0   0x....'....        DC32     Balance_Ki_old

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable16_9:
   \        0x0   0x....'....        DC32     running_tim_cnt

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable16_10:
   \        0x0   0x4000'0C24        DC32     0x40000c24

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable16_11:
   \        0x0   0x....'....        DC32     `control_velocity_x::Encoder_Least`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable16_12:
   \        0x0   0x....'....        DC32     `control_velocity_x::Encoder`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable16_13:
   \        0x0   0x....'....        DC32     `control_velocity_x::Encoder_Integral`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17:
   \        0x0   0x....'....        DC32     Velocity_KI_old

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_1:
   \        0x0   0x....'....        DC32     Balance_KD_old

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_2:
   \        0x0   0x3A83'126F        DC32     0x3a83126f

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_3:
   \        0x0   0x....'....        DC32     `control_velocity_x::Velocity`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_4:
   \        0x0   0x....'....        DC32     Velocity_KP

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_5:
   \        0x0   0x....'....        DC32     Velocity_KI

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_6:
   \        0x0   0x....'....        DC32     Balance_KP

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_7:
   \        0x0   0x....'....        DC32     Balance_KD

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_8:
   \        0x0   0x....'....        DC32     `control_velocity_y::Encoder_Least`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_9:
   \        0x0   0x....'....        DC32     `control_velocity_y::Encoder`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_10:
   \        0x0   0x....'....        DC32     `control_velocity_y::Encoder_Integral`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_11:
   \        0x0   0x....'....        DC32     `control_velocity_y::Velocity`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_12:
   \        0x0   0x....'....        DC32     pit_angle_target

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_13:
   \        0x0   0x....'....        DC32     `control_balance_z::Bias_last`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_14:
   \        0x0   0x....'....        DC32     offset_yaw

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_15:
   \        0x0   0x....'....        DC32     Gryo_KP

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_16:
   \        0x0   0x....'....        DC32     Gryo_KD

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_17:
   \        0x0   0x....'....        DC32     PWM_a

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_18:
   \        0x0   0x....'....        DC32     PWM_b

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_19:
   \        0x0   0x....'....        DC32     PWM_c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_20:
   \        0x0   0x4002'0400        DC32     0x40020400

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_21:
   \        0x0   0x4001'0434        DC32     0x40010434

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_22:
   \        0x0   0x4002'0C00        DC32     0x40020c00

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_23:
   \        0x0   0x4001'0438        DC32     0x40010438

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_24:
   \        0x0   0x4001'043C        DC32     0x4001043c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_25:
   \        0x0   0x....'....        DC32     Encoder_X

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_26:
   \        0x0   0xE858'4CAA        DC32     0xe8584caa

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_27:
   \        0x0   0x3FFB'B67A        DC32     0x3ffbb67a

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_28:
   \        0x0   0x....'....        DC32     Encoder_Y

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_29:
   \        0x0   0x....'....        DC32     Encoder_Z

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_30:
   \        0x0   0x3F5D'B3D7        DC32     0x3f5db3d7

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_31:
   \        0x0   0x....'....        DC32     gyro_raw_f

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_32:
   \        0x0   0x....'....        DC32     Mpu

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_33:
   \        0x0   0x....'....        DC32     acc_att_lpf

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_34:
   \        0x0   0x....'....        DC32     acc_raw_f

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_35:
   \        0x0   0x....'....        DC32     att

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_36:
   \        0x0   0xC178'0000        DC32     0xc1780000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_37:
   \        0x0   0xC190'0000        DC32     0xc1900000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_38:
   \        0x0   0x....'....        DC32     jump_pwm

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_39:
   \        0x0   0xC1B0'0000        DC32     0xc1b00000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_40:
   \        0x0   0xFFFF'F65A        DC32     0xfffff65a

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_41:
   \        0x0   0xC1D8'0000        DC32     0xc1d80000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_42:
   \        0x0   0xFFFF'EBE2        DC32     0xffffebe2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_43:
   \        0x0   0xC220'0000        DC32     0xc2200000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_44:
   \        0x0   0xFFFF'EC46        DC32     0xffffec46

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_45:
   \        0x0   0x....'....        DC32     encoder_c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_46:
   \        0x0   0x....'....        DC32     encoder_b

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_47:
   \        0x0   0x....'....        DC32     encoder_a

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_48:
   \        0x0   0x....'....        DC32     balance_pwm_a

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_49:
   \        0x0   0x....'....        DC32     balance_pwm_b

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_50:
   \        0x0   0x....'....        DC32     balance_pwm_c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_51:
   \        0x0   0x....'....        DC32     velocity_pwm_a

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_52:
   \        0x0   0x....'....        DC32     velocity_pwm_b

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_53:
   \        0x0   0x....'....        DC32     Move_X

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_54:
   \        0x0   0x....'....        DC32     Move_Y

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_55:
   \        0x0   0x....'....        DC32     Move_Z

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_56:
   \        0x0   0x....'....        DC32     Max_Pwm

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_57:
   \        0x0   0x431B'0000        DC32     0x431b0000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_58:
   \        0x0   0xCCCC'CCCD        DC32     0xcccccccd

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_59:
   \        0x0   0x3FF4'CCCC        DC32     0x3ff4cccc

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_60:
   \        0x0   0x41F0'0000        DC32     0x41f00000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_61:
   \        0x0   0xC1EF'FFFF        DC32     0xc1efffff

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_62:
   \        0x0   0x....'....        DC32     angle_target_sampling_buffer_roll

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_63:
   \        0x0   0x....'....        DC32     angle_target_sampling_num_roll

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_64:
   \        0x0   0x....'....        DC32     sampling_range

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_65:
   \        0x0   0x....'....        DC32     avg_buffer_roll

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_66:
   \        0x0   0x9999'999A        DC32     0x9999999a

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_67:
   \        0x0   0xBF99'9999        DC32     0xbf999999

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_68:
   \        0x0   0x3F99'9999        DC32     0x3f999999

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_69:
   \        0x0   0x....'....        DC32     angle_target_sampling_buffer_pitch

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_70:
   \        0x0   0x....'....        DC32     angle_target_sampling_num_pitch

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_71:
   \        0x0   0x....'....        DC32     avg_buffer_pitch

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_72:
   \        0x0   0x4000'0C10        DC32     0x40000c10

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_73:
   \        0x0   0x....'....        DC32     running_tim_cnt

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_74:
   \        0x0   0x....'....        DC32     run_start

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_75:
   \        0x0   0x....'....        DC32     nvic_flag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_76:
   \        0x0   0x41F4'0001        DC32     0x41f40001

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_77:
   \        0x0   0x....'....        DC32     jump_state

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_78:
   \        0x0   0x....'....        DC32     jump_pwm_max

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_79:
   \        0x0   0x....'....        DC32     run_stop

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      16   Encoder_Analysis
        16   -> __aeabi_d2f
        16   -> __aeabi_dmul
        16   -> __aeabi_f2d
        16   -> __aeabi_fadd
        16   -> __aeabi_fmul
        16   -> __aeabi_fsub
      32   Kinematic_Analysis
        32   -> __aeabi_f2iz
        32   -> __aeabi_fadd
        32   -> __aeabi_fmul
        32   -> __aeabi_fsub
       0   Max_pwm_limit
      16   TIM5_IRQHandler
        16   -> Anotc_SendData
        16   -> MPU6050_Get_Display
        16   -> __aeabi_fadd
        16   -> ahrs
        16   -> auto_correct_target_angle
        16   -> balance_2D
        16   -> balance_3D
        16   -> jump_program
        16   -> read_Encoder
        16   -> set_pwm
        16   -> time_check
        16 __aeabi_cfcmple
        16 __aeabi_cfrcmple
      24   ahrs
        24   -> Matrix_ready
        24   -> acc_iir_lpf
        24   -> get_acc_g
        24   -> get_acc_raw
        24   -> get_deg_s
        24   -> get_gyro_raw
        24   -> get_rad_s
        24   -> mahony_update
      32   auto_correct_target_angle
        32   -> __aeabi_d2f
        32   -> __aeabi_dadd
        32   -> __aeabi_f2d
        32   -> __aeabi_fadd
        32   -> __aeabi_fdiv
        32   -> __aeabi_i2f
        32 __aeabi_cfcmple
        32 __aeabi_cfrcmple
      16   balance_2D
        16   -> Max_pwm_limit
        16   -> __aeabi_d2iz
        16   -> __aeabi_dmul
        16   -> __aeabi_f2d
        16   -> __aeabi_fadd
        16   -> control_balance
        16   -> control_velocity
      32   balance_3D
        32   -> Encoder_Analysis
        32   -> Kinematic_Analysis
        32   -> Max_pwm_limit
        32   -> __aeabi_f2iz
        32   -> __aeabi_fadd
        32   -> __aeabi_i2f
        32   -> control_balance_x
        32   -> control_balance_y
        32   -> control_balance_z
        32   -> control_velocity_x
        32   -> control_velocity_y
      24   control_balance
        24   -> __aeabi_f2iz
        24   -> __aeabi_fadd
        24   -> __aeabi_fmul
        24   -> __aeabi_fsub
        24   -> __aeabi_i2f
        24 __aeabi_cfcmple
        24 __aeabi_cfrcmple
      16   control_balance_x
        16   -> __aeabi_fadd
        16   -> __aeabi_fmul
        16   -> __aeabi_fsub
      16   control_balance_y
        16   -> __aeabi_fadd
        16   -> __aeabi_fmul
        16   -> __aeabi_fsub
      24   control_balance_z
        24   -> __aeabi_f2iz
        24   -> __aeabi_fadd
        24   -> __aeabi_fmul
        24   -> __aeabi_fsub
        24   -> __aeabi_i2f
      24   control_velocity
        24   -> __aeabi_d2f
        24   -> __aeabi_dadd
        24   -> __aeabi_dmul
        24   -> __aeabi_f2d
        24   -> __aeabi_fadd
        24   -> __aeabi_fmul
        24   -> __aeabi_i2f
        24 __aeabi_cfcmple
        24 __aeabi_cfrcmple
      24   control_velocity_x
        24   -> __aeabi_d2f
        24   -> __aeabi_dadd
        24   -> __aeabi_dmul
        24   -> __aeabi_f2d
        24   -> __aeabi_fadd
        24   -> __aeabi_fmul
        24   -> __aeabi_i2f
        24 __aeabi_cfcmple
        24 __aeabi_cfrcmple
      24   control_velocity_y
        24   -> __aeabi_d2f
        24   -> __aeabi_dadd
        24   -> __aeabi_dmul
        24   -> __aeabi_f2d
        24   -> __aeabi_fadd
        24   -> __aeabi_fmul
        24   -> __aeabi_i2f
        24 __aeabi_cfcmple
        24 __aeabi_cfrcmple
       8   jump_program
         8   -> set_pwm
         8 __aeabi_cfcmple
         8 __aeabi_cfrcmple
      24   set_pwm
        24   -> GPIO_ResetBits
        24   -> GPIO_SetBits
        24   -> int_abs
       8   time_check
         8   -> __aeabi_fmul
         8   -> __aeabi_fsub
         8   -> __aeabi_ui2f


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable15
       4  ??DataTable15_1
       4  ??DataTable15_10
       4  ??DataTable15_2
       4  ??DataTable15_3
       4  ??DataTable15_4
       4  ??DataTable15_5
       4  ??DataTable15_6
       4  ??DataTable15_7
       4  ??DataTable15_8
       4  ??DataTable15_9
       4  ??DataTable16
       4  ??DataTable16_1
       4  ??DataTable16_10
       4  ??DataTable16_11
       4  ??DataTable16_12
       4  ??DataTable16_13
       4  ??DataTable16_2
       4  ??DataTable16_3
       4  ??DataTable16_4
       4  ??DataTable16_5
       4  ??DataTable16_6
       4  ??DataTable16_7
       4  ??DataTable16_8
       4  ??DataTable16_9
       4  ??DataTable17
       4  ??DataTable17_1
       4  ??DataTable17_10
       4  ??DataTable17_11
       4  ??DataTable17_12
       4  ??DataTable17_13
       4  ??DataTable17_14
       4  ??DataTable17_15
       4  ??DataTable17_16
       4  ??DataTable17_17
       4  ??DataTable17_18
       4  ??DataTable17_19
       4  ??DataTable17_2
       4  ??DataTable17_20
       4  ??DataTable17_21
       4  ??DataTable17_22
       4  ??DataTable17_23
       4  ??DataTable17_24
       4  ??DataTable17_25
       4  ??DataTable17_26
       4  ??DataTable17_27
       4  ??DataTable17_28
       4  ??DataTable17_29
       4  ??DataTable17_3
       4  ??DataTable17_30
       4  ??DataTable17_31
       4  ??DataTable17_32
       4  ??DataTable17_33
       4  ??DataTable17_34
       4  ??DataTable17_35
       4  ??DataTable17_36
       4  ??DataTable17_37
       4  ??DataTable17_38
       4  ??DataTable17_39
       4  ??DataTable17_4
       4  ??DataTable17_40
       4  ??DataTable17_41
       4  ??DataTable17_42
       4  ??DataTable17_43
       4  ??DataTable17_44
       4  ??DataTable17_45
       4  ??DataTable17_46
       4  ??DataTable17_47
       4  ??DataTable17_48
       4  ??DataTable17_49
       4  ??DataTable17_5
       4  ??DataTable17_50
       4  ??DataTable17_51
       4  ??DataTable17_52
       4  ??DataTable17_53
       4  ??DataTable17_54
       4  ??DataTable17_55
       4  ??DataTable17_56
       4  ??DataTable17_57
       4  ??DataTable17_58
       4  ??DataTable17_59
       4  ??DataTable17_6
       4  ??DataTable17_60
       4  ??DataTable17_61
       4  ??DataTable17_62
       4  ??DataTable17_63
       4  ??DataTable17_64
       4  ??DataTable17_65
       4  ??DataTable17_66
       4  ??DataTable17_67
       4  ??DataTable17_68
       4  ??DataTable17_69
       4  ??DataTable17_7
       4  ??DataTable17_70
       4  ??DataTable17_71
       4  ??DataTable17_72
       4  ??DataTable17_73
       4  ??DataTable17_74
       4  ??DataTable17_75
       4  ??DataTable17_76
       4  ??DataTable17_77
       4  ??DataTable17_78
       4  ??DataTable17_79
       4  ??DataTable17_8
       4  ??DataTable17_9
       4  Balance_KD
       4  Balance_KD_old
       4  Balance_KP
       4  Balance_KP_old
       4  Balance_Ki_old
       4  Bias
       4  Bias_integral
       4  Bias_last
       4  Bias_last
       4  Encoder
       4  Encoder
       4  Encoder
      92  Encoder_Analysis
       4  Encoder_Integral
       4  Encoder_Integral
       4  Encoder_Integral
       4  Encoder_Least
       4  Encoder_Least
       4  Encoder_Least
       4  Encoder_X
       4  Encoder_Y
       4  Encoder_Z
       4  Gryo_KD
       4  Gryo_KP
     122  Kinematic_Analysis
       4  Max_Pwm
      68  Max_pwm_limit
       4  Move_X
       4  Move_Y
       4  Move_Z
       4  PWM_a
       4  PWM_b
       4  PWM_c
     274  TIM5_IRQHandler
       4  Velocity
       4  Velocity
       4  Velocity
       4  Velocity_KI
       4  Velocity_KI_old
       4  Velocity_KP
       4  Velocity_KP_old
      88  ahrs
       4  angle_target_sampling_buffer_pitch
       4  angle_target_sampling_buffer_roll
       4  angle_target_sampling_num_pitch
       4  angle_target_sampling_num_roll
     484  auto_correct_target_angle
       4  avg_buffer_pitch
       4  avg_buffer_roll
     128  balance_2D
     226  balance_3D
       4  balance_pwm_a
       4  balance_pwm_b
       4  balance_pwm_c
       4  balance_pwm_x
     162  control_balance
      60  control_balance_x
      60  control_balance_y
     106  control_balance_z
     206  control_velocity
     198  control_velocity_x
     198  control_velocity_y
       4  encoder_a
       4  encoder_b
       4  encoder_c
       4  flag_stop
     192  jump_program
       4  jump_pwm
       4  jump_pwm_max
       4  jump_state
       4  nvic_flag
       4  offset_yaw
       4  pit_angle_offset_l
       4  pit_angle_offset_r
       4  pit_angle_target
       4  rol_angle_offset_l
       4  rol_angle_offset_r
       4  rol_angle_target
      16  run_start
      16  run_stop
       4  running_tim_cnt
       4  sampling_range
     162  set_pwm
      58  time_check
       4  velocity_pwm_a
       4  velocity_pwm_b
       4  velocity_pwm_c
       4  velocity_pwm_x

 
   232 bytes in section .bss
    72 bytes in section .data
 3'304 bytes in section .text
 
 3'304 bytes of CODE memory
   304 bytes of DATA memory

Errors: none
Warnings: 10
