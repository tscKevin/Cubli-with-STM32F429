###############################################################################
#
# IAR ANSI C/C++ Compiler V8.40.2.214/W32 for ARM         27/Jul/2020  17:44:09
# Copyright 1999-2019 IAR Systems AB.
#
#    Cpu mode     =  
#    Endian       =  little
#    Source file  =
#        E:\STM32Project\Cubli_with_STM32F429\Cubli-with-STM32F429\Cubli\user\src\main.c
#    Command line =
#        -f C:\Users\Evan\AppData\Local\Temp\EW649.tmp
#        (E:\STM32Project\Cubli_with_STM32F429\Cubli-with-STM32F429\Cubli\user\src\main.c
#        -D USE_STDPERIPH_DRIVER -D STM32F429_439xx -lC
#        E:\STM32Project\Cubli_with_STM32F429\Cubli-with-STM32F429\Cubli\Debug\List
#        -o
#        E:\STM32Project\Cubli_with_STM32F429\Cubli-with-STM32F429\Cubli\Debug\Obj
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M4 -e --fpu=None --dlib_config "D:\IAR Systems\Embedded
#        Workbench 8.3\arm\inc\c\DLib_Config_Normal.h" -I
#        E:\STM32Project\Cubli_with_STM32F429\Cubli-with-STM32F429\Cubli\..\STM32F4xx_DSP_StdPeriph_Lib_V1.8.0\Libraries\CMSIS\Device\ST\STM32F4xx\Include\
#        -I
#        E:\STM32Project\Cubli_with_STM32F429\Cubli-with-STM32F429\Cubli\..\STM32F4xx_DSP_StdPeriph_Lib_V1.8.0\Libraries\CMSIS\Device\ST\STM32F4xx\Source\Templates\
#        -I
#        E:\STM32Project\Cubli_with_STM32F429\Cubli-with-STM32F429\Cubli\..\STM32F4xx_DSP_StdPeriph_Lib_V1.8.0\Libraries\CMSIS\Device\ST\STM32F4xx\Source\Templates\iar\
#        -I
#        E:\STM32Project\Cubli_with_STM32F429\Cubli-with-STM32F429\Cubli\..\STM32F4xx_DSP_StdPeriph_Lib_V1.8.0\Libraries\STM32F4xx_StdPeriph_Driver\inc\
#        -I
#        E:\STM32Project\Cubli_with_STM32F429\Cubli-with-STM32F429\Cubli\..\STM32F4xx_DSP_StdPeriph_Lib_V1.8.0\Libraries\STM32F4xx_StdPeriph_Driver\src\
#        -I
#        E:\STM32Project\Cubli_with_STM32F429\Cubli-with-STM32F429\Cubli\user\inc\
#        -I
#        E:\STM32Project\Cubli_with_STM32F429\Cubli-with-STM32F429\Cubli\user\src\
#        -Ol --use_c++_inline -I "D:\IAR Systems\Embedded Workbench
#        8.3\arm\CMSIS\Core\Include\" -I "D:\IAR Systems\Embedded Workbench
#        8.3\arm\CMSIS\DSP\Include\")
#    Locale       =  C
#    List file    =
#        E:\STM32Project\Cubli_with_STM32F429\Cubli-with-STM32F429\Cubli\Debug\List\main.lst
#    Object file  =
#        E:\STM32Project\Cubli_with_STM32F429\Cubli-with-STM32F429\Cubli\Debug\Obj\main.o
#
###############################################################################

E:\STM32Project\Cubli_with_STM32F429\Cubli-with-STM32F429\Cubli\user\src\main.c
      1          #include "stm32f4xx.h"
      2          
      3          #include "timer.h"
      4          #include "pwm.h"
      5          

   \                                 In section .text, align 2, keep-with-next
      6          void TM5_Interrupt_Init(void){
   \                     TM5_Interrupt_Init: (+1)
   \        0x0   0xB51F             PUSH     {R0-R4,LR}
      7            TIM_TimeBaseInitTypeDef TIM_BaseStruct;
      8            RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM5,ENABLE);
   \        0x2   0x2101             MOVS     R1,#+1
   \        0x4   0x2008             MOVS     R0,#+8
   \        0x6   0x....'....        BL       RCC_APB1PeriphClockCmd
      9            TIM_BaseStruct.TIM_Prescaler = 90-1;
   \        0xA   0x2059             MOVS     R0,#+89
   \        0xC   0xF8AD 0x0000      STRH     R0,[SP, #+0]
     10            TIM_BaseStruct.TIM_Period=5000-1;
   \       0x10   0xF241 0x3087      MOVW     R0,#+4999
   \       0x14   0x9001             STR      R0,[SP, #+4]
     11            TIM_BaseStruct.TIM_CounterMode=TIM_CounterMode_Up;
   \       0x16   0x2000             MOVS     R0,#+0
   \       0x18   0xF8AD 0x0002      STRH     R0,[SP, #+2]
     12            TIM_BaseStruct.TIM_ClockDivision=TIM_CKD_DIV1;
   \       0x1C   0x2000             MOVS     R0,#+0
   \       0x1E   0xF8AD 0x0008      STRH     R0,[SP, #+8]
     13            TIM_BaseStruct.TIM_RepetitionCounter=0;
   \       0x22   0x2000             MOVS     R0,#+0
   \       0x24   0xF88D 0x000A      STRB     R0,[SP, #+10]
     14            TIM_TimeBaseInit(TIM5,&TIM_BaseStruct);
   \       0x28   0x....             LDR.N    R4,??DataTable2  ;; 0x40000c00
   \       0x2A   0x4669             MOV      R1,SP
   \       0x2C   0x0020             MOVS     R0,R4
   \       0x2E   0x....'....        BL       TIM_TimeBaseInit
     15            TIM_Cmd(TIM5,ENABLE);
   \       0x32   0x2101             MOVS     R1,#+1
   \       0x34   0x0020             MOVS     R0,R4
   \       0x36   0x....'....        BL       TIM_Cmd
     16            TIM_ClearFlag(TIM5,TIM_FLAG_Update);
   \       0x3A   0x2101             MOVS     R1,#+1
   \       0x3C   0x0020             MOVS     R0,R4
   \       0x3E   0x....'....        BL       TIM_ClearFlag
     17            TIM_ITConfig(TIM5,TIM_IT_Update,ENABLE);
   \       0x42   0x2201             MOVS     R2,#+1
   \       0x44   0x2101             MOVS     R1,#+1
   \       0x46   0x0020             MOVS     R0,R4
   \       0x48   0x....'....        BL       TIM_ITConfig
     18          }
   \       0x4C   0xBD1F             POP      {R0-R4,PC}       ;; return

   \                                 In section .text, align 2, keep-with-next
     19          void NVIC_Set(void){
   \                     NVIC_Set: (+1)
   \        0x0   0xB580             PUSH     {R7,LR}
     20            NVIC_InitTypeDef NVIC_InitStructure;
     21            NVIC_PriorityGroupConfig(NVIC_PriorityGroup_2);//0~2
   \        0x2   0xF44F 0x60A0      MOV      R0,#+1280
   \        0x6   0x....'....        BL       NVIC_PriorityGroupConfig
     22            
     23            /*TIM5*/
     24            NVIC_InitStructure.NVIC_IRQChannel = TIM5_IRQn;    
   \        0xA   0x2032             MOVS     R0,#+50
   \        0xC   0xF88D 0x0000      STRB     R0,[SP, #+0]
     25            NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 1;
   \       0x10   0x2001             MOVS     R0,#+1
   \       0x12   0xF88D 0x0001      STRB     R0,[SP, #+1]
     26            NVIC_InitStructure.NVIC_IRQChannelSubPriority = 0;
   \       0x16   0x2000             MOVS     R0,#+0
   \       0x18   0xF88D 0x0002      STRB     R0,[SP, #+2]
     27            NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;            
   \       0x1C   0x2001             MOVS     R0,#+1
   \       0x1E   0xF88D 0x0003      STRB     R0,[SP, #+3]
     28            NVIC_Init(&NVIC_InitStructure);
   \       0x22   0x4668             MOV      R0,SP
   \       0x24   0x....'....        BL       NVIC_Init
     29            
     30            /*DMA1_Stream6_IRQn*/
     31            NVIC_InitStructure.NVIC_IRQChannel = DMA2_Stream7_IRQn;
   \       0x28   0x2046             MOVS     R0,#+70
   \       0x2A   0xF88D 0x0000      STRB     R0,[SP, #+0]
     32            NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority=2;
   \       0x2E   0x2002             MOVS     R0,#+2
   \       0x30   0xF88D 0x0001      STRB     R0,[SP, #+1]
     33            NVIC_InitStructure.NVIC_IRQChannelSubPriority = 2;		
   \       0x34   0x2002             MOVS     R0,#+2
   \       0x36   0xF88D 0x0002      STRB     R0,[SP, #+2]
     34            NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;			
   \       0x3A   0x2001             MOVS     R0,#+1
   \       0x3C   0xF88D 0x0003      STRB     R0,[SP, #+3]
     35            NVIC_Init(&NVIC_InitStructure);
   \       0x40   0x4668             MOV      R0,SP
   \       0x42   0x....'....        BL       NVIC_Init
     36          }
   \       0x46   0xBD01             POP      {R0,PC}          ;; return

   \                                 In section .text, align 2, keep-with-next
     37          void LED_On_Board(void){
   \                     LED_On_Board: (+1)
   \        0x0   0xB5E0             PUSH     {R5-R7,LR}
     38            GPIO_InitTypeDef GPIO_InitStructure;
     39            RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOG,ENABLE); //enable GPIOA clock   //
   \        0x2   0x2101             MOVS     R1,#+1
   \        0x4   0x2040             MOVS     R0,#+64
   \        0x6   0x....'....        BL       RCC_AHB1PeriphClockCmd
     40            GPIO_InitStructure.GPIO_Pin = GPIO_Pin_13 | GPIO_Pin_14 | GPIO_Pin_15;
   \        0xA   0xF44F 0x4060      MOV      R0,#+57344
   \        0xE   0x9000             STR      R0,[SP, #+0]
     41            GPIO_InitStructure.GPIO_Mode = GPIO_Mode_OUT;
   \       0x10   0x2001             MOVS     R0,#+1
   \       0x12   0xF88D 0x0004      STRB     R0,[SP, #+4]
     42            GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
   \       0x16   0x2002             MOVS     R0,#+2
   \       0x18   0xF88D 0x0005      STRB     R0,[SP, #+5]
     43            GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
   \       0x1C   0x2000             MOVS     R0,#+0
   \       0x1E   0xF88D 0x0006      STRB     R0,[SP, #+6]
     44            GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL;
   \       0x22   0x2000             MOVS     R0,#+0
   \       0x24   0xF88D 0x0007      STRB     R0,[SP, #+7]
     45            GPIO_Init(GPIOG, &GPIO_InitStructure);
   \       0x28   0x4669             MOV      R1,SP
   \       0x2A   0x....             LDR.N    R0,??DataTable2_1  ;; 0x40021800
   \       0x2C   0x....'....        BL       GPIO_Init
     46          }
   \       0x30   0xBD07             POP      {R0-R2,PC}       ;; return

   \                                 In section .bss, align 4
     47          int a,b,c;
   \                     a:
   \        0x0                      DS8 4

   \                                 In section .bss, align 4
   \                     `b`:
   \        0x0                      DS8 4

   \                                 In section .bss, align 4
   \                     c:
   \        0x0                      DS8 4

   \                                 In section .text, align 2, keep-with-next
     48          void main(void){
   \                     main: (+1)
   \        0x0   0xB580             PUSH     {R7,LR}
     49            systick_setup();
   \        0x2   0x....'....        BL       systick_setup
     50            
     51            TM2_PWM_Init();
   \        0x6   0x....'....        BL       TM2_PWM_Init
     52            TIM2->CCR1=1700;//PA0
   \        0xA   0xF240 0x60A4      MOVW     R0,#+1700
   \        0xE   0x....             LDR.N    R1,??DataTable2_2  ;; 0x40000034
   \       0x10   0x6008             STR      R0,[R1, #+0]
     53            TIM2->CCR3=1700;//PB10
   \       0x12   0x....             LDR.N    R1,??DataTable2_3  ;; 0x4000003c
   \       0x14   0x6008             STR      R0,[R1, #+0]
     54            TIM2->CCR4=1700;//PB11
   \       0x16   0x....             LDR.N    R1,??DataTable2_4  ;; 0x40000040
   \       0x18   0x6008             STR      R0,[R1, #+0]
     55            Delay(150);
   \       0x1A   0x2096             MOVS     R0,#+150
   \       0x1C   0x....'....        BL       Delay
     56            
     57            TIM3_EncoderInterface_Init();
   \       0x20   0x....'....        BL       TIM3_EncoderInterface_Init
     58            TIM4_EncoderInterface_Init();
   \       0x24   0x....'....        BL       TIM4_EncoderInterface_Init
     59            TIM1_EncoderInterface_Init();
   \       0x28   0x....'....        BL       TIM1_EncoderInterface_Init
     60            Delay(5);
   \       0x2C   0x2005             MOVS     R0,#+5
   \       0x2E   0x....'....        BL       Delay
     61            
     62            TM8_PWM_Init();
   \       0x32   0x....'....        BL       TM8_PWM_Init
     63            LED_On_Board();
   \       0x36   0x....'....        BL       LED_On_Board
     64            
     65            IIC_GPIO_Init();
   \       0x3A   0x....'....        BL       IIC_GPIO_Init
     66            MPU6050_Init();
   \       0x3E   0x....'....        BL       MPU6050_Init
     67            get_mpu_id();
   \       0x42   0x....'....        BL       get_mpu_id
     68          
     69            get_iir_factor(&Mpu.att_acc_factor,0.005f,25);
   \       0x46   0x....             LDR.N    R2,??DataTable2_5  ;; 0x41c80000
   \       0x48   0x....             LDR.N    R1,??DataTable2_6  ;; 0x3ba3d70a
   \       0x4A   0x....             LDR.N    R0,??DataTable2_7
   \       0x4C   0x....'....        BL       get_iir_factor
     70            TM5_Interrupt_Init();
   \       0x50   0x....'....        BL       TM5_Interrupt_Init
     71            NVIC_Set();
   \       0x54   0x....'....        BL       NVIC_Set
     72            
     73            Delay(2000);
   \       0x58   0xF44F 0x60FA      MOV      R0,#+2000
   \       0x5C   0x....'....        BL       Delay
     74            nvic_flag = 1;
   \       0x60   0x2001             MOVS     R0,#+1
   \       0x62   0x....             LDR.N    R1,??DataTable2_8
   \       0x64   0x6008             STR      R0,[R1, #+0]
     75            
     76            /*
     77            TIM8->CCR1 = 1000;//x pin13
     78            Delay(1000);
     79            TIM8->CCR2 = 1500;//z
     80            Delay(1000);
     81            TIM8->CCR3 = 2000;//y
     82            */
     83            
     84            while(1){
   \                     ??main_0: (+1)
   \       0x66   0xE7FE             B.N      ??main_0
     85              /*
     86              Delay(1500);
     87              GPIO_ToggleBits(GPIOG,GPIO_Pin_13);
     88              Delay(1500);
     89              GPIO_ToggleBits(GPIOG,GPIO_Pin_13);
     90              Delay(5);
     91              a=read_Encoder_x();
     92              b=read_Encoder_y();
     93              c=read_Encoder_z();*/
     94          //    printf("%d",TIM12->CNT);
     95              
     96          //  TIM8->CCR1 = 1000;
     97          //  TIM8->CCR2 = 1500;
     98          //  TIM8->CCR3 = 2000;Delay(3000);
     99            
    100            
    101          //  TIM8->CCR3=-800;Delay(3000);
    102            
    103          //    if(att.pit<-27){//jump up
    104          //      Delay(3000);
    105          //      nvic_flag = 0;
    106          //      PWM_X =0;
    107          //      set_pwm(PWM_X);
    108          //      TIM2->CCR3=1250;//1500;
    109          //      Delay(50);
    110          //      nvic_flag = 1;
    111          //      Delay(200);
    112          //      TIM2->CCR3=1700;
    113          //      Delay(200);
    114          //    }else if(att.pit>27){//jump up
    115          //      Delay(3000);
    116          //      nvic_flag = 0;
    117          //      PWM_X =0;
    118          //      set_pwm(PWM_X);
    119          //      TIM2->CCR3=1250;//1500;
    120          //      Delay(50);
    121          //      nvic_flag = 1;
    122          //      Delay(200);
    123          //      TIM2->CCR3=1700;
    124          //      Delay(200);
    125          //    }
    126            }
    127          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2:
   \        0x0   0x4000'0C00        DC32     0x40000c00

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_1:
   \        0x0   0x4002'1800        DC32     0x40021800

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_2:
   \        0x0   0x4000'0034        DC32     0x40000034

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_3:
   \        0x0   0x4000'003C        DC32     0x4000003c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_4:
   \        0x0   0x4000'0040        DC32     0x40000040

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_5:
   \        0x0   0x41C8'0000        DC32     0x41c80000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_6:
   \        0x0   0x3BA3'D70A        DC32     0x3ba3d70a

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_7:
   \        0x0   0x....'....        DC32     Mpu+0x24

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_8:
   \        0x0   0x....'....        DC32     nvic_flag

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      16   LED_On_Board
        16   -> GPIO_Init
        16   -> RCC_AHB1PeriphClockCmd
       8   NVIC_Set
         8   -> NVIC_Init
         8   -> NVIC_PriorityGroupConfig
      24   TM5_Interrupt_Init
        24   -> RCC_APB1PeriphClockCmd
        24   -> TIM_ClearFlag
        24   -> TIM_Cmd
        24   -> TIM_ITConfig
        24   -> TIM_TimeBaseInit
       8   main
         8   -> Delay
         8   -> IIC_GPIO_Init
         8   -> LED_On_Board
         8   -> MPU6050_Init
         8   -> NVIC_Set
         8   -> TIM1_EncoderInterface_Init
         8   -> TIM3_EncoderInterface_Init
         8   -> TIM4_EncoderInterface_Init
         8   -> TM2_PWM_Init
         8   -> TM5_Interrupt_Init
         8   -> TM8_PWM_Init
         8   -> get_iir_factor
         8   -> get_mpu_id
         8   -> systick_setup


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable2
       4  ??DataTable2_1
       4  ??DataTable2_2
       4  ??DataTable2_3
       4  ??DataTable2_4
       4  ??DataTable2_5
       4  ??DataTable2_6
       4  ??DataTable2_7
       4  ??DataTable2_8
      50  LED_On_Board
      72  NVIC_Set
      78  TM5_Interrupt_Init
       4  a
       4  b
       4  c
     104  main

 
  12 bytes in section .bss
 340 bytes in section .text
 
 340 bytes of CODE memory
  12 bytes of DATA memory

Errors: none
Warnings: none
