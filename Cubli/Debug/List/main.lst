###############################################################################
#
# IAR ANSI C/C++ Compiler V8.40.2.214/W32 for ARM         06/Sep/2021  15:34:31
# Copyright 1999-2019 IAR Systems AB.
#
#    Cpu mode     =  
#    Endian       =  little
#    Source file  =  E:\STM32Project\Cubli-with-STM32F429\Cubli\User\src\main.c
#    Command line =
#        -f C:\Users\LABPC1~1\AppData\Local\Temp\EW77F0.tmp
#        (E:\STM32Project\Cubli-with-STM32F429\Cubli\User\src\main.c -D
#        USE_STDPERIPH_DRIVER -D STM32F429_439xx -lC
#        E:\STM32Project\Cubli-with-STM32F429\Cubli\Debug\List -o
#        E:\STM32Project\Cubli-with-STM32F429\Cubli\Debug\Obj --no_cse
#        --no_unroll --no_inline --no_code_motion --no_tbaa --no_clustering
#        --no_scheduling --debug --endian=little --cpu=Cortex-M4 -e --fpu=None
#        --dlib_config "D:\IAR Systems\Embedded Workbench
#        8.3\arm\inc\c\DLib_Config_Normal.h" -I
#        E:\STM32Project\Cubli-with-STM32F429\Cubli\..\STM32F4xx_DSP_StdPeriph_Lib_V1.8.0\Libraries\CMSIS\Device\ST\STM32F4xx\Include\
#        -I
#        E:\STM32Project\Cubli-with-STM32F429\Cubli\..\STM32F4xx_DSP_StdPeriph_Lib_V1.8.0\Libraries\CMSIS\Device\ST\STM32F4xx\Source\Templates\
#        -I
#        E:\STM32Project\Cubli-with-STM32F429\Cubli\..\STM32F4xx_DSP_StdPeriph_Lib_V1.8.0\Libraries\CMSIS\Device\ST\STM32F4xx\Source\Templates\iar\
#        -I
#        E:\STM32Project\Cubli-with-STM32F429\Cubli\..\STM32F4xx_DSP_StdPeriph_Lib_V1.8.0\Libraries\STM32F4xx_StdPeriph_Driver\inc\
#        -I
#        E:\STM32Project\Cubli-with-STM32F429\Cubli\..\STM32F4xx_DSP_StdPeriph_Lib_V1.8.0\Libraries\STM32F4xx_StdPeriph_Driver\src\
#        -I E:\STM32Project\Cubli-with-STM32F429\Cubli\user\inc\ -I
#        E:\STM32Project\Cubli-with-STM32F429\Cubli\user\src\ -Ol
#        --use_c++_inline -I "D:\IAR Systems\Embedded Workbench
#        8.3\arm\CMSIS\Core\Include\" -I "D:\IAR Systems\Embedded Workbench
#        8.3\arm\CMSIS\DSP\Include\")
#    Locale       =  C
#    List file    =
#        E:\STM32Project\Cubli-with-STM32F429\Cubli\Debug\List\main.lst
#    Object file  =
#        E:\STM32Project\Cubli-with-STM32F429\Cubli\Debug\Obj\main.o
#
###############################################################################

E:\STM32Project\Cubli-with-STM32F429\Cubli\User\src\main.c
      1          #include "stm32f4xx.h"
      2          #include "timer.h"
      3          #include "pwm.h"
      4          
      5          // main timer interrupt, 5ms for ones time

   \                                 In section .text, align 2, keep-with-next
      6          void TM5_Interrupt_Init(void){
   \                     TM5_Interrupt_Init: (+1)
   \        0x0   0xB51F             PUSH     {R0-R4,LR}
      7              TIM_TimeBaseInitTypeDef TIM_BaseStruct;
      8              RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM5,ENABLE);
   \        0x2   0x2101             MOVS     R1,#+1
   \        0x4   0x2008             MOVS     R0,#+8
   \        0x6   0x....'....        BL       RCC_APB1PeriphClockCmd
      9              TIM_BaseStruct.TIM_Prescaler = 90-1;
   \        0xA   0x2059             MOVS     R0,#+89
   \        0xC   0xF8AD 0x0000      STRH     R0,[SP, #+0]
     10              TIM_BaseStruct.TIM_Period=5000-1;
   \       0x10   0xF241 0x3087      MOVW     R0,#+4999
   \       0x14   0x9001             STR      R0,[SP, #+4]
     11              TIM_BaseStruct.TIM_CounterMode=TIM_CounterMode_Up;
   \       0x16   0x2000             MOVS     R0,#+0
   \       0x18   0xF8AD 0x0002      STRH     R0,[SP, #+2]
     12              TIM_BaseStruct.TIM_ClockDivision=TIM_CKD_DIV1;
   \       0x1C   0x2000             MOVS     R0,#+0
   \       0x1E   0xF8AD 0x0008      STRH     R0,[SP, #+8]
     13              TIM_BaseStruct.TIM_RepetitionCounter=0;
   \       0x22   0x2000             MOVS     R0,#+0
   \       0x24   0xF88D 0x000A      STRB     R0,[SP, #+10]
     14              TIM_TimeBaseInit(TIM5,&TIM_BaseStruct);
   \       0x28   0x....'....        LDR.W    R4,??DataTable5  ;; 0x40000c00
   \       0x2C   0x4669             MOV      R1,SP
   \       0x2E   0x0020             MOVS     R0,R4
   \       0x30   0x....'....        BL       TIM_TimeBaseInit
     15              TIM_Cmd(TIM5,ENABLE);
   \       0x34   0x2101             MOVS     R1,#+1
   \       0x36   0x0020             MOVS     R0,R4
   \       0x38   0x....'....        BL       TIM_Cmd
     16              TIM_ClearFlag(TIM5,TIM_FLAG_Update);
   \       0x3C   0x2101             MOVS     R1,#+1
   \       0x3E   0x0020             MOVS     R0,R4
   \       0x40   0x....'....        BL       TIM_ClearFlag
     17              TIM_ITConfig(TIM5,TIM_IT_Update,ENABLE);
   \       0x44   0x2201             MOVS     R2,#+1
   \       0x46   0x2101             MOVS     R1,#+1
   \       0x48   0x0020             MOVS     R0,R4
   \       0x4A   0x....'....        BL       TIM_ITConfig
     18          }
   \       0x4E   0xBD1F             POP      {R0-R4,PC}       ;; return
     19          

   \                                 In section .text, align 2, keep-with-next
     20          void NVIC_Set(void){
   \                     NVIC_Set: (+1)
   \        0x0   0xB580             PUSH     {R7,LR}
     21              NVIC_InitTypeDef NVIC_InitStructure;
     22              NVIC_PriorityGroupConfig(NVIC_PriorityGroup_2);//0~2
   \        0x2   0xF44F 0x60A0      MOV      R0,#+1280
   \        0x6   0x....'....        BL       NVIC_PriorityGroupConfig
     23              
     24              /*TIM5*/
     25              NVIC_InitStructure.NVIC_IRQChannel = TIM5_IRQn;    
   \        0xA   0x2032             MOVS     R0,#+50
   \        0xC   0xF88D 0x0000      STRB     R0,[SP, #+0]
     26              NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 1;
   \       0x10   0x2001             MOVS     R0,#+1
   \       0x12   0xF88D 0x0001      STRB     R0,[SP, #+1]
     27              NVIC_InitStructure.NVIC_IRQChannelSubPriority = 0;
   \       0x16   0x2000             MOVS     R0,#+0
   \       0x18   0xF88D 0x0002      STRB     R0,[SP, #+2]
     28              NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;            
   \       0x1C   0x2001             MOVS     R0,#+1
   \       0x1E   0xF88D 0x0003      STRB     R0,[SP, #+3]
     29              NVIC_Init(&NVIC_InitStructure);
   \       0x22   0x4668             MOV      R0,SP
   \       0x24   0x....'....        BL       NVIC_Init
     30              
     31              /*DMA2_Stream7_IRQn Tx*/
     32              NVIC_InitStructure.NVIC_IRQChannel = DMA2_Stream7_IRQn;
   \       0x28   0x2046             MOVS     R0,#+70
   \       0x2A   0xF88D 0x0000      STRB     R0,[SP, #+0]
     33              NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority=2;
   \       0x2E   0x2002             MOVS     R0,#+2
   \       0x30   0xF88D 0x0001      STRB     R0,[SP, #+1]
     34              NVIC_InitStructure.NVIC_IRQChannelSubPriority = 2;
   \       0x34   0x2002             MOVS     R0,#+2
   \       0x36   0xF88D 0x0002      STRB     R0,[SP, #+2]
     35              NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
   \       0x3A   0x2001             MOVS     R0,#+1
   \       0x3C   0xF88D 0x0003      STRB     R0,[SP, #+3]
     36              NVIC_Init(&NVIC_InitStructure);
   \       0x40   0x4668             MOV      R0,SP
   \       0x42   0x....'....        BL       NVIC_Init
     37              
     38              /*DMA2_Stream1_IRQn Rx*/
     39              NVIC_InitStructure.NVIC_IRQChannel = DMA2_Stream1_IRQn;
   \       0x46   0x2039             MOVS     R0,#+57
   \       0x48   0xF88D 0x0000      STRB     R0,[SP, #+0]
     40              NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority=2;
   \       0x4C   0x2002             MOVS     R0,#+2
   \       0x4E   0xF88D 0x0001      STRB     R0,[SP, #+1]
     41              NVIC_InitStructure.NVIC_IRQChannelSubPriority = 2;		
   \       0x52   0x2002             MOVS     R0,#+2
   \       0x54   0xF88D 0x0002      STRB     R0,[SP, #+2]
     42              NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;			
   \       0x58   0x2001             MOVS     R0,#+1
   \       0x5A   0xF88D 0x0003      STRB     R0,[SP, #+3]
     43              NVIC_Init(&NVIC_InitStructure);
   \       0x5E   0x4668             MOV      R0,SP
   \       0x60   0x....'....        BL       NVIC_Init
     44              
     45              /*USART6_IRQn Rx*/
     46              NVIC_InitStructure.NVIC_IRQChannel = USART6_IRQn;
   \       0x64   0x2047             MOVS     R0,#+71
   \       0x66   0xF88D 0x0000      STRB     R0,[SP, #+0]
     47              NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority=2;
   \       0x6A   0x2002             MOVS     R0,#+2
   \       0x6C   0xF88D 0x0001      STRB     R0,[SP, #+1]
     48              NVIC_InitStructure.NVIC_IRQChannelSubPriority = 2;
   \       0x70   0x2002             MOVS     R0,#+2
   \       0x72   0xF88D 0x0002      STRB     R0,[SP, #+2]
     49              NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
   \       0x76   0x2001             MOVS     R0,#+1
   \       0x78   0xF88D 0x0003      STRB     R0,[SP, #+3]
     50              NVIC_Init(&NVIC_InitStructure);
   \       0x7C   0x4668             MOV      R0,SP
   \       0x7E   0x....'....        BL       NVIC_Init
     51          }
   \       0x82   0xBD01             POP      {R0,PC}          ;; return
     52          

   \                                 In section .text, align 2, keep-with-next
     53          void GPIO_On_Board(void){
   \                     GPIO_On_Board: (+1)
   \        0x0   0xB5E0             PUSH     {R5-R7,LR}
     54              GPIO_InitTypeDef GPIO_InitStructure;
     55              GPIO_InitStructure.GPIO_Mode = GPIO_Mode_OUT;
   \        0x2   0x2001             MOVS     R0,#+1
   \        0x4   0xF88D 0x0004      STRB     R0,[SP, #+4]
     56              GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
   \        0x8   0x2002             MOVS     R0,#+2
   \        0xA   0xF88D 0x0005      STRB     R0,[SP, #+5]
     57              GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
   \        0xE   0x2000             MOVS     R0,#+0
   \       0x10   0xF88D 0x0006      STRB     R0,[SP, #+6]
     58              GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL;
   \       0x14   0x2000             MOVS     R0,#+0
   \       0x16   0xF88D 0x0007      STRB     R0,[SP, #+7]
     59              //GPIOB
     60              RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOB,ENABLE);
   \       0x1A   0x2101             MOVS     R1,#+1
   \       0x1C   0x2002             MOVS     R0,#+2
   \       0x1E   0x....'....        BL       RCC_AHB1PeriphClockCmd
     61              GPIO_InitStructure.GPIO_Pin = GPIO_Pin_13;
   \       0x22   0xF44F 0x5000      MOV      R0,#+8192
   \       0x26   0x9000             STR      R0,[SP, #+0]
     62              GPIO_Init(GPIOB, &GPIO_InitStructure);
   \       0x28   0x4669             MOV      R1,SP
   \       0x2A   0x....'....        LDR.W    R0,??DataTable5_1  ;; 0x40020400
   \       0x2E   0x....'....        BL       GPIO_Init
     63              //GPIOD
     64              RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOD,ENABLE);
   \       0x32   0x2101             MOVS     R1,#+1
   \       0x34   0x2008             MOVS     R0,#+8
   \       0x36   0x....'....        BL       RCC_AHB1PeriphClockCmd
     65              GPIO_InitStructure.GPIO_Pin = GPIO_Pin_8 | GPIO_Pin_9;
   \       0x3A   0xF44F 0x7040      MOV      R0,#+768
   \       0x3E   0x9000             STR      R0,[SP, #+0]
     66              GPIO_Init(GPIOD, &GPIO_InitStructure);
   \       0x40   0x4669             MOV      R1,SP
   \       0x42   0x....'....        LDR.W    R0,??DataTable5_2  ;; 0x40020c00
   \       0x46   0x....'....        BL       GPIO_Init
     67              //GPIOG
     68              RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOG,ENABLE);
   \       0x4A   0x2101             MOVS     R1,#+1
   \       0x4C   0x2040             MOVS     R0,#+64
   \       0x4E   0x....'....        BL       RCC_AHB1PeriphClockCmd
     69              GPIO_InitStructure.GPIO_Pin = GPIO_Pin_13 | GPIO_Pin_14;
   \       0x52   0xF44F 0x40C0      MOV      R0,#+24576
   \       0x56   0x9000             STR      R0,[SP, #+0]
     70              GPIO_Init(GPIOG, &GPIO_InitStructure);
   \       0x58   0x4669             MOV      R1,SP
   \       0x5A   0x....'....        LDR.W    R0,??DataTable5_3  ;; 0x40021800
   \       0x5E   0x....'....        BL       GPIO_Init
     71          }
   \       0x62   0xBD07             POP      {R0-R2,PC}       ;; return
     72          

   \                                 In section .text, align 2, keep-with-next
     73          void EXTI0_IRQHandler(void) {
   \                     EXTI0_IRQHandler: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
     74              /* Make sure that interrupt flag is set */
     75              if (EXTI_GetITStatus(EXTI_Line0) != RESET) {
   \        0x2   0x2001             MOVS     R0,#+1
   \        0x4   0x....'....        BL       EXTI_GetITStatus
   \        0x8   0x2800             CMP      R0,#+0
   \        0xA   0xD019             BEQ.N    ??EXTI0_IRQHandler_0
     76                  /* Do your stuff when PD1 is changed */
     77                  if (!nvic_flag){
   \        0xC   0x....'....        LDR.W    R4,??DataTable5_4
   \       0x10   0x6820             LDR      R0,[R4, #+0]
   \       0x12   0x2800             CMP      R0,#+0
   \       0x14   0xD10A             BNE.N    ??EXTI0_IRQHandler_1
     78                      GPIO_SetBits(GPIOG,GPIO_Pin_13);
   \       0x16   0xF44F 0x5100      MOV      R1,#+8192
   \       0x1A   0x....             LDR.N    R0,??DataTable5_3  ;; 0x40021800
   \       0x1C   0x....'....        BL       GPIO_SetBits
     79                      nvic_flag = 1;
   \       0x20   0x2001             MOVS     R0,#+1
   \       0x22   0x6020             STR      R0,[R4, #+0]
     80                      jump_state = 1;
   \       0x24   0x2001             MOVS     R0,#+1
   \       0x26   0x....             LDR.N    R1,??DataTable5_5
   \       0x28   0x6008             STR      R0,[R1, #+0]
   \       0x2A   0xE006             B.N      ??EXTI0_IRQHandler_2
     81                  }else{
     82                      GPIO_ResetBits(GPIOG,GPIO_Pin_13);
   \                     ??EXTI0_IRQHandler_1: (+1)
   \       0x2C   0xF44F 0x5100      MOV      R1,#+8192
   \       0x30   0x....             LDR.N    R0,??DataTable5_3  ;; 0x40021800
   \       0x32   0x....'....        BL       GPIO_ResetBits
     83                      nvic_flag = 0;
   \       0x36   0x2000             MOVS     R0,#+0
   \       0x38   0x6020             STR      R0,[R4, #+0]
     84                  }
     85                  /* Clear interrupt flag */
     86                  EXTI_ClearITPendingBit(EXTI_Line0);
   \                     ??EXTI0_IRQHandler_2: (+1)
   \       0x3A   0x2001             MOVS     R0,#+1
   \       0x3C   0x....'....        BL       EXTI_ClearITPendingBit
     87              }
     88          }
   \                     ??EXTI0_IRQHandler_0: (+1)
   \       0x40   0xBD10             POP      {R4,PC}          ;; return
     89          
     90          /* Configure pins to be interrupts */

   \                                 In section .text, align 2, keep-with-next
     91          void Configure_PA0(void) {
   \                     Configure_PA0: (+1)
   \        0x0   0xB500             PUSH     {LR}
   \        0x2   0xB085             SUB      SP,SP,#+20
     92              /*EXTI0_IRQn	EXTI0_IRQHandler	    Handler for pins connected to line 0
     93              EXTI1_IRQn	    EXTI1_IRQHandler	    Handler for pins connected to line 1
     94              EXTI2_IRQn	    EXTI2_IRQHandler	    Handler for pins connected to line 2
     95              EXTI3_IRQn	    EXTI3_IRQHandler	    Handler for pins connected to line 3
     96              EXTI4_IRQn	    EXTI4_IRQHandler	    Handler for pins connected to line 4
     97              EXTI9_5_IRQn	EXTI9_5_IRQHandler	    Handler for pins connected to line 5 to 9
     98              EXTI15_10_IRQn	EXTI15_10_IRQHandler	Handler for pins connected to line 10 to 15*/
     99              /* Set variables used */
    100              GPIO_InitTypeDef GPIO_InitStruct;
    101              EXTI_InitTypeDef EXTI_InitStruct;
    102              NVIC_InitTypeDef NVIC_InitStruct;
    103              
    104              /* Enable clock for GPIOD */
    105              RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOA, ENABLE);
   \        0x4   0x2101             MOVS     R1,#+1
   \        0x6   0x2001             MOVS     R0,#+1
   \        0x8   0x....'....        BL       RCC_AHB1PeriphClockCmd
    106              /* Enable clock for SYSCFG */
    107              RCC_APB2PeriphClockCmd(RCC_APB2Periph_SYSCFG, ENABLE);
   \        0xC   0x2101             MOVS     R1,#+1
   \        0xE   0xF44F 0x4080      MOV      R0,#+16384
   \       0x12   0x....'....        BL       RCC_APB2PeriphClockCmd
    108              
    109              /* Set pin as input */
    110              
    111              GPIO_InitStruct.GPIO_Pin = GPIO_Pin_0;
   \       0x16   0x2001             MOVS     R0,#+1
   \       0x18   0x9001             STR      R0,[SP, #+4]
    112              GPIO_InitStruct.GPIO_Mode = GPIO_Mode_IN;
   \       0x1A   0x2000             MOVS     R0,#+0
   \       0x1C   0xF88D 0x0008      STRB     R0,[SP, #+8]
    113              GPIO_InitStruct.GPIO_OType = GPIO_OType_PP;
   \       0x20   0x2000             MOVS     R0,#+0
   \       0x22   0xF88D 0x000A      STRB     R0,[SP, #+10]
    114              GPIO_InitStruct.GPIO_PuPd = GPIO_PuPd_DOWN;
   \       0x26   0x2002             MOVS     R0,#+2
   \       0x28   0xF88D 0x000B      STRB     R0,[SP, #+11]
    115              GPIO_InitStruct.GPIO_Speed = GPIO_Speed_100MHz;
   \       0x2C   0x2003             MOVS     R0,#+3
   \       0x2E   0xF88D 0x0009      STRB     R0,[SP, #+9]
    116              GPIO_Init(GPIOA, &GPIO_InitStruct);
   \       0x32   0xA901             ADD      R1,SP,#+4
   \       0x34   0x....             LDR.N    R0,??DataTable5_6  ;; 0x40020000
   \       0x36   0x....'....        BL       GPIO_Init
    117              
    118              /* Tell system that you will use PD0 for EXTI_Line0 */
    119              SYSCFG_EXTILineConfig(EXTI_PortSourceGPIOA, EXTI_PinSource0);
   \       0x3A   0x2100             MOVS     R1,#+0
   \       0x3C   0x2000             MOVS     R0,#+0
   \       0x3E   0x....'....        BL       SYSCFG_EXTILineConfig
    120              
    121              /* PD0 is connected to EXTI_Line0 */
    122              EXTI_InitStruct.EXTI_Line = EXTI_Line0;
   \       0x42   0x2001             MOVS     R0,#+1
   \       0x44   0x9003             STR      R0,[SP, #+12]
    123              /* Enable interrupt */
    124              EXTI_InitStruct.EXTI_LineCmd = ENABLE;
   \       0x46   0x2001             MOVS     R0,#+1
   \       0x48   0xF88D 0x0012      STRB     R0,[SP, #+18]
    125              /* Interrupt mode */
    126              EXTI_InitStruct.EXTI_Mode = EXTI_Mode_Interrupt;
   \       0x4C   0x2000             MOVS     R0,#+0
   \       0x4E   0xF88D 0x0010      STRB     R0,[SP, #+16]
    127              /* Triggers on rising and falling edge */
    128              EXTI_InitStruct.EXTI_Trigger = EXTI_Trigger_Falling;
   \       0x52   0x200C             MOVS     R0,#+12
   \       0x54   0xF88D 0x0011      STRB     R0,[SP, #+17]
    129              /* Add to EXTI */
    130              EXTI_Init(&EXTI_InitStruct);
   \       0x58   0xA803             ADD      R0,SP,#+12
   \       0x5A   0x....'....        BL       EXTI_Init
    131              
    132              /* Add IRQ vector to NVIC */
    133              /* PD0 is connected to EXTI_Line0, which has EXTI0_IRQn vector */
    134              NVIC_InitStruct.NVIC_IRQChannel = EXTI0_IRQn;
   \       0x5E   0x2006             MOVS     R0,#+6
   \       0x60   0xF88D 0x0000      STRB     R0,[SP, #+0]
    135              /* Set priority */
    136              NVIC_InitStruct.NVIC_IRQChannelPreemptionPriority = 0x00;
   \       0x64   0x2000             MOVS     R0,#+0
   \       0x66   0xF88D 0x0001      STRB     R0,[SP, #+1]
    137              /* Set sub priority */
    138              NVIC_InitStruct.NVIC_IRQChannelSubPriority = 0x00;
   \       0x6A   0x2000             MOVS     R0,#+0
   \       0x6C   0xF88D 0x0002      STRB     R0,[SP, #+2]
    139              /* Enable interrupt */
    140              NVIC_InitStruct.NVIC_IRQChannelCmd = ENABLE;
   \       0x70   0x2001             MOVS     R0,#+1
   \       0x72   0xF88D 0x0003      STRB     R0,[SP, #+3]
    141              /* Add to NVIC */
    142              NVIC_Init(&NVIC_InitStruct);
   \       0x76   0x4668             MOV      R0,SP
   \       0x78   0x....'....        BL       NVIC_Init
    143          }
   \       0x7C   0xB005             ADD      SP,SP,#+20
   \       0x7E   0xBD00             POP      {PC}             ;; return
    144          

   \                                 In section .text, align 2, keep-with-next
    145          void Brake_system(int enable, int servo){
    146              /*servo a PA8, b PA9, c PA10*/
    147              if (enable==1){
   \                     Brake_system: (+1)
   \        0x0   0x2801             CMP      R0,#+1
   \        0x2   0xD11E             BNE.N    ??Brake_system_0
    148                  if (servo==1){
   \        0x4   0x2901             CMP      R1,#+1
   \        0x6   0xD104             BNE.N    ??Brake_system_1
    149                      TIM1->CCR1=2600;
   \        0x8   0xF640 0x2028      MOVW     R0,#+2600
   \        0xC   0x....             LDR.N    R1,??DataTable5_7  ;; 0x40010034
   \        0xE   0x6008             STR      R0,[R1, #+0]
   \       0x10   0xE037             B.N      ??Brake_system_2
    150                  }else if (servo==23){
   \                     ??Brake_system_1: (+1)
   \       0x12   0x2917             CMP      R1,#+23
   \       0x14   0xD108             BNE.N    ??Brake_system_3
    151                      TIM1->CCR2=2600;
   \       0x16   0xF640 0x2028      MOVW     R0,#+2600
   \       0x1A   0x....             LDR.N    R1,??DataTable5_8  ;; 0x40010038
   \       0x1C   0x6008             STR      R0,[R1, #+0]
    152                      TIM1->CCR3=1550;
   \       0x1E   0xF240 0x600E      MOVW     R0,#+1550
   \       0x22   0x....             LDR.N    R1,??DataTable5_9  ;; 0x4001003c
   \       0x24   0x6008             STR      R0,[R1, #+0]
   \       0x26   0xE02C             B.N      ??Brake_system_2
    153                  }else if (servo==123){
   \                     ??Brake_system_3: (+1)
   \       0x28   0x297B             CMP      R1,#+123
   \       0x2A   0xD12A             BNE.N    ??Brake_system_2
    154                      TIM1->CCR1=2600;
   \       0x2C   0xF640 0x2028      MOVW     R0,#+2600
   \       0x30   0x....             LDR.N    R1,??DataTable5_7  ;; 0x40010034
   \       0x32   0x6008             STR      R0,[R1, #+0]
    155                      TIM1->CCR2=2600;
   \       0x34   0x....             LDR.N    R1,??DataTable5_8  ;; 0x40010038
   \       0x36   0x6008             STR      R0,[R1, #+0]
    156                      TIM1->CCR3=1550;
   \       0x38   0xF240 0x600E      MOVW     R0,#+1550
   \       0x3C   0x....             LDR.N    R1,??DataTable5_9  ;; 0x4001003c
   \       0x3E   0x6008             STR      R0,[R1, #+0]
   \       0x40   0xE01F             B.N      ??Brake_system_2
    157                  }
    158              }else{
    159                  if (servo==1){
   \                     ??Brake_system_0: (+1)
   \       0x42   0x2901             CMP      R1,#+1
   \       0x44   0xD104             BNE.N    ??Brake_system_4
    160                      TIM1->CCR1=1550;
   \       0x46   0xF240 0x600E      MOVW     R0,#+1550
   \       0x4A   0x....             LDR.N    R1,??DataTable5_7  ;; 0x40010034
   \       0x4C   0x6008             STR      R0,[R1, #+0]
   \       0x4E   0xE018             B.N      ??Brake_system_2
    161                  }else if (servo==23){
   \                     ??Brake_system_4: (+1)
   \       0x50   0x2917             CMP      R1,#+23
   \       0x52   0xD108             BNE.N    ??Brake_system_5
    162                      TIM1->CCR2=1450;
   \       0x54   0xF240 0x50AA      MOVW     R0,#+1450
   \       0x58   0x....             LDR.N    R1,??DataTable5_8  ;; 0x40010038
   \       0x5A   0x6008             STR      R0,[R1, #+0]
    163                      TIM1->CCR3=1880;
   \       0x5C   0xF44F 0x60EB      MOV      R0,#+1880
   \       0x60   0x....             LDR.N    R1,??DataTable5_9  ;; 0x4001003c
   \       0x62   0x6008             STR      R0,[R1, #+0]
   \       0x64   0xE00D             B.N      ??Brake_system_2
    164                  }else if (servo==123){
   \                     ??Brake_system_5: (+1)
   \       0x66   0x297B             CMP      R1,#+123
   \       0x68   0xD10B             BNE.N    ??Brake_system_2
    165                      TIM1->CCR1=1550;
   \       0x6A   0xF240 0x600E      MOVW     R0,#+1550
   \       0x6E   0x....             LDR.N    R1,??DataTable5_7  ;; 0x40010034
   \       0x70   0x6008             STR      R0,[R1, #+0]
    166                      TIM1->CCR2=1450;
   \       0x72   0xF240 0x50AA      MOVW     R0,#+1450
   \       0x76   0x....             LDR.N    R1,??DataTable5_8  ;; 0x40010038
   \       0x78   0x6008             STR      R0,[R1, #+0]
    167                      TIM1->CCR3=1880;
   \       0x7A   0xF44F 0x60EB      MOV      R0,#+1880
   \       0x7E   0x....             LDR.N    R1,??DataTable5_9  ;; 0x4001003c
   \       0x80   0x6008             STR      R0,[R1, #+0]
    168                  }
    169              }
    170          }
   \                     ??Brake_system_2: (+1)
   \       0x82   0x4770             BX       LR               ;; return

   \                                 In section .text, align 2, keep-with-next
    171          void ShortToChar(short sData,unsigned char cData[])
    172          {
    173          	cData[0]=sData&0xff;
   \                     ShortToChar: (+1)
   \        0x0   0x7008             STRB     R0,[R1, #+0]
    174          	cData[1]=sData>>8;
   \        0x2   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \        0x4   0x1200             ASRS     R0,R0,#+8
   \        0x6   0x7048             STRB     R0,[R1, #+1]
    175          }
   \        0x8   0x4770             BX       LR               ;; return

   \                                 In section .text, align 2, keep-with-next
    176          short CharToShort(unsigned char cData[])
    177          {
    178          	return ((short)cData[1]<<8)|cData[0];
   \                     CharToShort: (+1)
   \        0x0   0x7841             LDRB     R1,[R0, #+1]
   \        0x2   0x7800             LDRB     R0,[R0, #+0]
   \        0x4   0xEA50 0x2001      ORRS     R0,R0,R1, LSL #+8
   \        0x8   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \        0xA   0x4770             BX       LR               ;; return
    179          }

   \                                 In section .bss, align 4
    180          unsigned char chrTemp[6];
   \                     chrTemp:
   \        0x0                      DS8 8

   \                                 In section .bss, align 4
    181          float a=0;
   \                     a:
   \        0x0                      DS8 4

   \                                 In section .text, align 2, keep-with-next
    182          void main(void){
   \                     main: (+1)
   \        0x0   0xE92D 0x41F0      PUSH     {R4-R8,LR}
    183              systick_setup();
   \        0x4   0x....'....        BL       systick_setup
    184              nvic_flag = 0;
   \        0x8   0x....             LDR.N    R4,??DataTable5_4
   \        0xA   0x2000             MOVS     R0,#+0
   \        0xC   0x6020             STR      R0,[R4, #+0]
    185              
    186              GPIO_On_Board();//A:B13,B:D8,C:D9
   \        0xE   0x....'....        BL       GPIO_On_Board
    187              usart1_init(115200);
   \       0x12   0xF45F 0x30E1      MOVS     R0,#+115200
   \       0x16   0x....'....        BL       usart1_init
    188              IIC_GPIO_Init();
   \       0x1A   0x....'....        BL       IIC_GPIO_Init
    189              
    190              MPU6050_Init();//get_mpu_id();
   \       0x1E   0x....'....        BL       MPU6050_Init
    191              get_iir_factor(&Mpu.att_acc_factor,0.005f,25);
   \       0x22   0x....             LDR.N    R2,??DataTable5_10  ;; 0x41c80000
   \       0x24   0x....             LDR.N    R1,??DataTable5_11  ;; 0x3ba3d70a
   \       0x26   0x....             LDR.N    R0,??DataTable5_12
   \       0x28   0x....'....        BL       get_iir_factor
    192              
    193              TM1_PWM_Init();//servo
   \       0x2C   0x....'....        BL       TM1_PWM_Init
    194              Brake_system(0,123);
   \       0x30   0x217B             MOVS     R1,#+123
   \       0x32   0x2000             MOVS     R0,#+0
   \       0x34   0x....'....        BL       Brake_system
    195              TM8_PWM_Init();
   \       0x38   0x....'....        BL       TM8_PWM_Init
    196              
    197              TIM2_EncoderInterface_Init();//A
   \       0x3C   0x....'....        BL       TIM2_EncoderInterface_Init
    198              TIM3_EncoderInterface_Init();//B
   \       0x40   0x....'....        BL       TIM3_EncoderInterface_Init
    199              TIM4_EncoderInterface_Init();//C
   \       0x44   0x....'....        BL       TIM4_EncoderInterface_Init
    200              Delay(5);
   \       0x48   0x2005             MOVS     R0,#+5
   \       0x4A   0x....'....        BL       Delay
    201              TM5_Interrupt_Init();
   \       0x4E   0x....'....        BL       TM5_Interrupt_Init
    202              Configure_PA0();
   \       0x52   0x....'....        BL       Configure_PA0
    203              NVIC_Set();
   \       0x56   0x....'....        BL       NVIC_Set
   \       0x5A   0xE018             B.N      ??main_0
    204              
    205              while(1){     
    206                  /* LED AND MOTOR FORWORD AND BACKWORD TEST
    207                  printf("%d",usart1_read(a));
    208                  GPIO_SetBits(GPIOG,GPIO_Pin_13); // LED
    209                  GPIO_SetBits(GPIOB,GPIO_Pin_13); //A
    210                  GPIO_SetBits(GPIOD,GPIO_Pin_8);  //B
    211                  GPIO_SetBits(GPIOD,GPIO_Pin_9);  //C
    212                  Delay(100);        
    213                  GPIO_ResetBits(GPIOG,GPIO_Pin_13);
    214                  GPIO_ResetBits(GPIOB,GPIO_Pin_13);
    215                  GPIO_ResetBits(GPIOD,GPIO_Pin_8);
    216                  GPIO_ResetBits(GPIOD,GPIO_Pin_9);*/
    217                  
    218                  /* MOTOR PWM TEST
    219                  TIM8->CCR1 = 8999*0.03;//A PC6
    220                  Delay(1000);
    221                  TIM8->CCR2 = 8999*0.8;//B PC7
    222                  Delay(1000);
    223                  TIM8->CCR3 = 8999*0.4;//C PC8
    224                  Delay(500);
    225                  TIM8->CCR1 = 10;//A
    226                  TIM8->CCR2 = 10;//B
    227                  TIM8->CCR3 = 10;//C
    228                  Delay(500);
    229                  TIM8->CCR1 = 0;//A
    230                  TIM8->CCR2 = 0;//B
    231                  TIM8->CCR3 = 0;//C
    232                  Delay(500);
    233                  TIM8->CCR1 = 5500;//A
    234                  TIM8->CCR2 = 5500;//B
    235                  TIM8->CCR3 = 5500;//C
    236                  Delay(500);
    237                  TIM8->CCR1 = 0;//A
    238                  TIM8->CCR2 = 0;//B
    239                  TIM8->CCR3 = 0;//C
    240                  Delay(500);*/
    241          
    242                  /* MMOTOR ADDED TEST
    243                  if (jump_pwm<8000){
    244                  jump_pwm+=25;
    245                  Delay(500);
    246                  }else if (jump_pwm>8000){
    247                  jump_pwm=0;
    248                  }*/
    249          
    250                  /* servo motor test
    251                  Brake_system(1,1);
    252                  Delay(250);
    253                  Brake_system(0,1);
    254                  Delay(2250);
    255                  Brake_system(1,23);
    256                  Delay(250);
    257                  Brake_system(0,23);
    258                  Delay(2250);        
    259                  */        
    260                  
    261                  if (nvic_flag==1){
    262                      if((att.rol<-15 || att.rol>15) && (jump_state==1)){//2D jump up
    263                          Delay(6000);
    264                          if(!(att.rol<-15)) return;// || att.rol>15)) return;
    265                          nvic_flag = 0;
    266                          PWM_a = 0;
    267                          set_pwm(1,0,0,0);
    268                          Brake_system(1,1);
    269                          int wait = 150;
    270                          while((att.rol<-15) && --wait>0) Delay(1);//|| att.rol>9
    271                          nvic_flag = 1;
    272                          Brake_system(0,1);
    273                          Delay(2000);
    274                          Delay(2000);
    275                          if (att.rol>=-9.0 && att.rol <=9.0){
    276                              while(int_abs(encoder_a)>=400) Delay(1);
    277                              jump_pwm = 0;
    278                              jump_pwm_max = 4000;
    279                              jump_state=2;
    280                          }else{
    281                              jump_state=1;
    282                              set_pwm(1,0,0,0);
    283                          }
    284                      }
    285                      if(att.rol>=-9.0 && att.rol <=9.0 && att.pit > 8 && jump_state==2){//3D jump up
    286                          if (jump_pwm>=jump_pwm_max){
    287                              Delay(6000);
    288                              Brake_system(1,23);
    289                              Delay(20);
    290                              jump_state=0;
    291                              int wait = 150;
    292                              while((att.pit>15) && --wait>0) Delay(1);//|| att.rol>9
   \                     ??main_1: (+1)
   \       0x5C   0x2001             MOVS     R0,#+1
   \       0x5E   0x....'....        BL       Delay
   \                     ??main_2: (+1)
   \       0x62   0x6828             LDR      R0,[R5, #+0]
   \       0x64   0x....             LDR.N    R1,??DataTable5_13  ;; 0x41700001
   \       0x66   0x....'....        BL       __aeabi_cfrcmple
   \       0x6A   0xD804             BHI.N    ??main_3
   \       0x6C   0xF1B8 0x0801      SUBS     R8,R8,#+1
   \       0x70   0xF1B8 0x0F01      CMP      R8,#+1
   \       0x74   0xDAF2             BGE.N    ??main_1
    293                              Brake_system(0,23);
   \                     ??main_3: (+1)
   \       0x76   0x2117             MOVS     R1,#+23
   \       0x78   0x2000             MOVS     R0,#+0
   \       0x7A   0x....'....        BL       Brake_system
    294                              jump_pwm=0;
   \       0x7E   0x2000             MOVS     R0,#+0
   \       0x80   0x6038             STR      R0,[R7, #+0]
    295                              jump_pwm_max=0;
   \       0x82   0x2000             MOVS     R0,#+0
   \       0x84   0x6030             STR      R0,[R6, #+0]
    296                              Delay(2000);
   \       0x86   0xF44F 0x60FA      MOV      R0,#+2000
   \       0x8A   0x....'....        BL       Delay
   \                     ??main_0: (+1)
   \       0x8E   0x6820             LDR      R0,[R4, #+0]
   \       0x90   0x2801             CMP      R0,#+1
   \       0x92   0xD1FC             BNE.N    ??main_0
   \       0x94   0x....             LDR.N    R6,??DataTable5_14  ;; 0xc1700000
   \       0x96   0x....             LDR.N    R5,??DataTable5_15
   \       0x98   0x6868             LDR      R0,[R5, #+4]
   \       0x9A   0x0031             MOVS     R1,R6
   \       0x9C   0x....'....        BL       __aeabi_cfcmple
   \       0xA0   0xD304             BCC.N    ??main_4
   \       0xA2   0x6868             LDR      R0,[R5, #+4]
   \       0xA4   0x....             LDR.N    R1,??DataTable5_13  ;; 0x41700001
   \       0xA6   0x....'....        BL       __aeabi_cfrcmple
   \       0xAA   0xD84D             BHI.N    ??main_5
   \                     ??main_4: (+1)
   \       0xAC   0x....             LDR.N    R7,??DataTable5_5
   \       0xAE   0x6838             LDR      R0,[R7, #+0]
   \       0xB0   0x2801             CMP      R0,#+1
   \       0xB2   0xD149             BNE.N    ??main_5
   \       0xB4   0xF241 0x7070      MOVW     R0,#+6000
   \       0xB8   0x....'....        BL       Delay
   \       0xBC   0x6868             LDR      R0,[R5, #+4]
   \       0xBE   0x0031             MOVS     R1,R6
   \       0xC0   0x....'....        BL       __aeabi_cfcmple
   \       0xC4   0xD211             BCS.N    ??main_6
   \                     ??main_7: (+1)
   \       0xC6   0x2000             MOVS     R0,#+0
   \       0xC8   0x6020             STR      R0,[R4, #+0]
   \       0xCA   0x2000             MOVS     R0,#+0
   \       0xCC   0x....             LDR.N    R1,??DataTable5_16
   \       0xCE   0x6008             STR      R0,[R1, #+0]
   \       0xD0   0x2300             MOVS     R3,#+0
   \       0xD2   0x2200             MOVS     R2,#+0
   \       0xD4   0x2100             MOVS     R1,#+0
   \       0xD6   0x2001             MOVS     R0,#+1
   \       0xD8   0x....'....        BL       set_pwm
   \       0xDC   0x2101             MOVS     R1,#+1
   \       0xDE   0x2001             MOVS     R0,#+1
   \       0xE0   0x....'....        BL       Brake_system
   \       0xE4   0xF05F 0x0896      MOVS     R8,#+150
   \       0xE8   0xE004             B.N      ??main_8
   \                     ??main_6: (+1)
   \       0xEA   0xE8BD 0x81F0      POP      {R4-R8,PC}       ;; return
   \                     ??main_9: (+1)
   \       0xEE   0x2001             MOVS     R0,#+1
   \       0xF0   0x....'....        BL       Delay
   \                     ??main_8: (+1)
   \       0xF4   0x6868             LDR      R0,[R5, #+4]
   \       0xF6   0x0031             MOVS     R1,R6
   \       0xF8   0x....'....        BL       __aeabi_cfcmple
   \       0xFC   0xD204             BCS.N    ??main_10
   \       0xFE   0xF1B8 0x0801      SUBS     R8,R8,#+1
   \      0x102   0xF1B8 0x0F01      CMP      R8,#+1
   \      0x106   0xDAF2             BGE.N    ??main_9
   \                     ??main_10: (+1)
   \      0x108   0x2001             MOVS     R0,#+1
   \      0x10A   0x6020             STR      R0,[R4, #+0]
   \      0x10C   0x2101             MOVS     R1,#+1
   \      0x10E   0x2000             MOVS     R0,#+0
   \      0x110   0x....'....        BL       Brake_system
   \      0x114   0xF44F 0x60FA      MOV      R0,#+2000
   \      0x118   0x....'....        BL       Delay
   \      0x11C   0xF44F 0x60FA      MOV      R0,#+2000
   \      0x120   0x....'....        BL       Delay
   \      0x124   0x6868             LDR      R0,[R5, #+4]
   \      0x126   0x....             LDR.N    R1,??DataTable5_17  ;; 0xc1100000
   \      0x128   0x....'....        BL       __aeabi_cfrcmple
   \      0x12C   0xD804             BHI.N    ??main_11
   \      0x12E   0x6868             LDR      R0,[R5, #+4]
   \      0x130   0x....             LDR.N    R1,??DataTable5_18  ;; 0x41100001
   \      0x132   0x....'....        BL       __aeabi_cfcmple
   \      0x136   0xD336             BCC.N    ??main_12
   \                     ??main_11: (+1)
   \      0x138   0x2001             MOVS     R0,#+1
   \      0x13A   0x6038             STR      R0,[R7, #+0]
   \      0x13C   0x2300             MOVS     R3,#+0
   \      0x13E   0x2200             MOVS     R2,#+0
   \      0x140   0x2100             MOVS     R1,#+0
   \      0x142   0x2001             MOVS     R0,#+1
   \      0x144   0x....'....        BL       set_pwm
   \                     ??main_5: (+1)
   \      0x148   0x6868             LDR      R0,[R5, #+4]
   \      0x14A   0x....             LDR.N    R1,??DataTable5_17  ;; 0xc1100000
   \      0x14C   0x....'....        BL       __aeabi_cfrcmple
   \      0x150   0xD89D             BHI.N    ??main_0
   \      0x152   0x6868             LDR      R0,[R5, #+4]
   \      0x154   0x....             LDR.N    R1,??DataTable5_18  ;; 0x41100001
   \      0x156   0x....'....        BL       __aeabi_cfcmple
   \      0x15A   0xD298             BCS.N    ??main_0
   \      0x15C   0x6828             LDR      R0,[R5, #+0]
   \      0x15E   0x....             LDR.N    R1,??DataTable5_19  ;; 0x41000001
   \      0x160   0x....'....        BL       __aeabi_cfrcmple
   \      0x164   0xD893             BHI.N    ??main_0
   \      0x166   0x....'....        LDR.W    R8,??DataTable5_5
   \      0x16A   0xF8D8 0x0000      LDR      R0,[R8, #+0]
   \      0x16E   0x2802             CMP      R0,#+2
   \      0x170   0xD18D             BNE.N    ??main_0
   \      0x172   0x....             LDR.N    R6,??DataTable5_20
   \      0x174   0x....             LDR.N    R7,??DataTable5_21
   \      0x176   0x6838             LDR      R0,[R7, #+0]
   \      0x178   0x6831             LDR      R1,[R6, #+0]
   \      0x17A   0x4288             CMP      R0,R1
   \      0x17C   0xDB87             BLT.N    ??main_0
   \      0x17E   0xF241 0x7070      MOVW     R0,#+6000
   \      0x182   0x....'....        BL       Delay
   \      0x186   0x2117             MOVS     R1,#+23
   \      0x188   0x2001             MOVS     R0,#+1
   \      0x18A   0x....'....        BL       Brake_system
   \      0x18E   0x2014             MOVS     R0,#+20
   \      0x190   0x....'....        BL       Delay
   \      0x194   0x2000             MOVS     R0,#+0
   \      0x196   0xF8C8 0x0000      STR      R0,[R8, #+0]
   \      0x19A   0xF05F 0x0896      MOVS     R8,#+150
   \      0x19E   0xE760             B.N      ??main_2
    297                          }
    298                      }
   \                     ??main_13: (+1)
   \      0x1A0   0x2001             MOVS     R0,#+1
   \      0x1A2   0x....'....        BL       Delay
   \                     ??main_12: (+1)
   \      0x1A6   0x....             LDR.N    R0,??DataTable5_22
   \      0x1A8   0x6800             LDR      R0,[R0, #+0]
   \      0x1AA   0x....'....        BL       int_abs
   \      0x1AE   0xF5B0 0x7FC8      CMP      R0,#+400
   \      0x1B2   0xDAF5             BGE.N    ??main_13
   \      0x1B4   0x2000             MOVS     R0,#+0
   \      0x1B6   0x....             LDR.N    R1,??DataTable5_21
   \      0x1B8   0x6008             STR      R0,[R1, #+0]
   \      0x1BA   0xF44F 0x607A      MOV      R0,#+4000
   \      0x1BE   0x....             LDR.N    R1,??DataTable5_20
   \      0x1C0   0x6008             STR      R0,[R1, #+0]
   \      0x1C2   0x2002             MOVS     R0,#+2
   \      0x1C4   0x6038             STR      R0,[R7, #+0]
   \      0x1C6   0xE7BF             B.N      ??main_5
    299                  }
    300              }
    301          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5:
   \        0x0   0x4000'0C00        DC32     0x40000c00

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_1:
   \        0x0   0x4002'0400        DC32     0x40020400

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_2:
   \        0x0   0x4002'0C00        DC32     0x40020c00

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_3:
   \        0x0   0x4002'1800        DC32     0x40021800

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_4:
   \        0x0   0x....'....        DC32     nvic_flag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_5:
   \        0x0   0x....'....        DC32     jump_state

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_6:
   \        0x0   0x4002'0000        DC32     0x40020000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_7:
   \        0x0   0x4001'0034        DC32     0x40010034

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_8:
   \        0x0   0x4001'0038        DC32     0x40010038

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_9:
   \        0x0   0x4001'003C        DC32     0x4001003c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_10:
   \        0x0   0x41C8'0000        DC32     0x41c80000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_11:
   \        0x0   0x3BA3'D70A        DC32     0x3ba3d70a

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_12:
   \        0x0   0x....'....        DC32     Mpu+0x24

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_13:
   \        0x0   0x4170'0001        DC32     0x41700001

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_14:
   \        0x0   0xC170'0000        DC32     0xc1700000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_15:
   \        0x0   0x....'....        DC32     att

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_16:
   \        0x0   0x....'....        DC32     PWM_a

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_17:
   \        0x0   0xC110'0000        DC32     0xc1100000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_18:
   \        0x0   0x4110'0001        DC32     0x41100001

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_19:
   \        0x0   0x4100'0001        DC32     0x41000001

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_20:
   \        0x0   0x....'....        DC32     jump_pwm_max

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_21:
   \        0x0   0x....'....        DC32     jump_pwm

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_22:
   \        0x0   0x....'....        DC32     encoder_a

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   Brake_system
       0   CharToShort
      24   Configure_PA0
        24   -> EXTI_Init
        24   -> GPIO_Init
        24   -> NVIC_Init
        24   -> RCC_AHB1PeriphClockCmd
        24   -> RCC_APB2PeriphClockCmd
        24   -> SYSCFG_EXTILineConfig
       8   EXTI0_IRQHandler
         8   -> EXTI_ClearITPendingBit
         8   -> EXTI_GetITStatus
         8   -> GPIO_ResetBits
         8   -> GPIO_SetBits
      16   GPIO_On_Board
        16   -> GPIO_Init
        16   -> RCC_AHB1PeriphClockCmd
       8   NVIC_Set
         8   -> NVIC_Init
         8   -> NVIC_PriorityGroupConfig
       0   ShortToChar
      24   TM5_Interrupt_Init
        24   -> RCC_APB1PeriphClockCmd
        24   -> TIM_ClearFlag
        24   -> TIM_Cmd
        24   -> TIM_ITConfig
        24   -> TIM_TimeBaseInit
      24   main
        24   -> Brake_system
        24   -> Configure_PA0
        24   -> Delay
        24   -> GPIO_On_Board
        24   -> IIC_GPIO_Init
        24   -> MPU6050_Init
        24   -> NVIC_Set
        24   -> TIM2_EncoderInterface_Init
        24   -> TIM3_EncoderInterface_Init
        24   -> TIM4_EncoderInterface_Init
        24   -> TM1_PWM_Init
        24   -> TM5_Interrupt_Init
        24   -> TM8_PWM_Init
        24   -> get_iir_factor
        24   -> int_abs
        24   -> set_pwm
        24   -> systick_setup
        24   -> usart1_init
        24 __aeabi_cfcmple
        24 __aeabi_cfrcmple


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable5
       4  ??DataTable5_1
       4  ??DataTable5_10
       4  ??DataTable5_11
       4  ??DataTable5_12
       4  ??DataTable5_13
       4  ??DataTable5_14
       4  ??DataTable5_15
       4  ??DataTable5_16
       4  ??DataTable5_17
       4  ??DataTable5_18
       4  ??DataTable5_19
       4  ??DataTable5_2
       4  ??DataTable5_20
       4  ??DataTable5_21
       4  ??DataTable5_22
       4  ??DataTable5_3
       4  ??DataTable5_4
       4  ??DataTable5_5
       4  ??DataTable5_6
       4  ??DataTable5_7
       4  ??DataTable5_8
       4  ??DataTable5_9
     132  Brake_system
      12  CharToShort
     128  Configure_PA0
      66  EXTI0_IRQHandler
     100  GPIO_On_Board
     132  NVIC_Set
      10  ShortToChar
      80  TM5_Interrupt_Init
       4  a
       8  chrTemp
     456  main

 
    12 bytes in section .bss
 1'208 bytes in section .text
 
 1'208 bytes of CODE memory
    12 bytes of DATA memory

Errors: none
Warnings: none
