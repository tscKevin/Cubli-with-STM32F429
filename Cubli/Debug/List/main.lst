###############################################################################
#
# IAR ANSI C/C++ Compiler V8.40.2.214/W32 for ARM         29/Jan/2021  12:29:42
# Copyright 1999-2019 IAR Systems AB.
#
#    Cpu mode     =  
#    Endian       =  little
#    Source file  =  E:\STM32Project\Cubli-with-STM32F429\Cubli\User\src\main.c
#    Command line =
#        -f C:\Users\LABPC1~1\AppData\Local\Temp\EWDED3.tmp
#        (E:\STM32Project\Cubli-with-STM32F429\Cubli\User\src\main.c -D
#        USE_STDPERIPH_DRIVER -D STM32F429_439xx -lC
#        E:\STM32Project\Cubli-with-STM32F429\Cubli\Debug\List -o
#        E:\STM32Project\Cubli-with-STM32F429\Cubli\Debug\Obj --no_cse
#        --no_unroll --no_inline --no_code_motion --no_tbaa --no_clustering
#        --no_scheduling --debug --endian=little --cpu=Cortex-M4 -e --fpu=None
#        --dlib_config "D:\IAR Systems\Embedded Workbench
#        8.3\arm\inc\c\DLib_Config_Normal.h" -I
#        E:\STM32Project\Cubli-with-STM32F429\Cubli\..\STM32F4xx_DSP_StdPeriph_Lib_V1.8.0\Libraries\CMSIS\Device\ST\STM32F4xx\Include\
#        -I
#        E:\STM32Project\Cubli-with-STM32F429\Cubli\..\STM32F4xx_DSP_StdPeriph_Lib_V1.8.0\Libraries\CMSIS\Device\ST\STM32F4xx\Source\Templates\
#        -I
#        E:\STM32Project\Cubli-with-STM32F429\Cubli\..\STM32F4xx_DSP_StdPeriph_Lib_V1.8.0\Libraries\CMSIS\Device\ST\STM32F4xx\Source\Templates\iar\
#        -I
#        E:\STM32Project\Cubli-with-STM32F429\Cubli\..\STM32F4xx_DSP_StdPeriph_Lib_V1.8.0\Libraries\STM32F4xx_StdPeriph_Driver\inc\
#        -I
#        E:\STM32Project\Cubli-with-STM32F429\Cubli\..\STM32F4xx_DSP_StdPeriph_Lib_V1.8.0\Libraries\STM32F4xx_StdPeriph_Driver\src\
#        -I E:\STM32Project\Cubli-with-STM32F429\Cubli\user\inc\ -I
#        E:\STM32Project\Cubli-with-STM32F429\Cubli\user\src\ -Ol
#        --use_c++_inline -I "D:\IAR Systems\Embedded Workbench
#        8.3\arm\CMSIS\Core\Include\" -I "D:\IAR Systems\Embedded Workbench
#        8.3\arm\CMSIS\DSP\Include\")
#    Locale       =  C
#    List file    =
#        E:\STM32Project\Cubli-with-STM32F429\Cubli\Debug\List\main.lst
#    Object file  =
#        E:\STM32Project\Cubli-with-STM32F429\Cubli\Debug\Obj\main.o
#
###############################################################################

E:\STM32Project\Cubli-with-STM32F429\Cubli\User\src\main.c
      1          #include "stm32f4xx.h"
      2          
      3          #include "timer.h"
      4          #include "pwm.h"
      5          

   \                                 In section .text, align 2, keep-with-next
      6          void TM5_Interrupt_Init(void){
   \                     TM5_Interrupt_Init: (+1)
   \        0x0   0xB51F             PUSH     {R0-R4,LR}
      7              TIM_TimeBaseInitTypeDef TIM_BaseStruct;
      8              RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM5,ENABLE);
   \        0x2   0x2101             MOVS     R1,#+1
   \        0x4   0x2008             MOVS     R0,#+8
   \        0x6   0x....'....        BL       RCC_APB1PeriphClockCmd
      9              TIM_BaseStruct.TIM_Prescaler = 90-1;
   \        0xA   0x2059             MOVS     R0,#+89
   \        0xC   0xF8AD 0x0000      STRH     R0,[SP, #+0]
     10              TIM_BaseStruct.TIM_Period=5000-1;
   \       0x10   0xF241 0x3087      MOVW     R0,#+4999
   \       0x14   0x9001             STR      R0,[SP, #+4]
     11              TIM_BaseStruct.TIM_CounterMode=TIM_CounterMode_Up;
   \       0x16   0x2000             MOVS     R0,#+0
   \       0x18   0xF8AD 0x0002      STRH     R0,[SP, #+2]
     12              TIM_BaseStruct.TIM_ClockDivision=TIM_CKD_DIV1;
   \       0x1C   0x2000             MOVS     R0,#+0
   \       0x1E   0xF8AD 0x0008      STRH     R0,[SP, #+8]
     13              TIM_BaseStruct.TIM_RepetitionCounter=0;
   \       0x22   0x2000             MOVS     R0,#+0
   \       0x24   0xF88D 0x000A      STRB     R0,[SP, #+10]
     14              TIM_TimeBaseInit(TIM5,&TIM_BaseStruct);
   \       0x28   0x....             LDR.N    R4,??DataTable4  ;; 0x40000c00
   \       0x2A   0x4669             MOV      R1,SP
   \       0x2C   0x0020             MOVS     R0,R4
   \       0x2E   0x....'....        BL       TIM_TimeBaseInit
     15              TIM_Cmd(TIM5,ENABLE);
   \       0x32   0x2101             MOVS     R1,#+1
   \       0x34   0x0020             MOVS     R0,R4
   \       0x36   0x....'....        BL       TIM_Cmd
     16              TIM_ClearFlag(TIM5,TIM_FLAG_Update);
   \       0x3A   0x2101             MOVS     R1,#+1
   \       0x3C   0x0020             MOVS     R0,R4
   \       0x3E   0x....'....        BL       TIM_ClearFlag
     17              TIM_ITConfig(TIM5,TIM_IT_Update,ENABLE);
   \       0x42   0x2201             MOVS     R2,#+1
   \       0x44   0x2101             MOVS     R1,#+1
   \       0x46   0x0020             MOVS     R0,R4
   \       0x48   0x....'....        BL       TIM_ITConfig
     18          }
   \       0x4C   0xBD1F             POP      {R0-R4,PC}       ;; return

   \                                 In section .text, align 2, keep-with-next
     19          void NVIC_Set(void){
   \                     NVIC_Set: (+1)
   \        0x0   0xB580             PUSH     {R7,LR}
     20              NVIC_InitTypeDef NVIC_InitStructure;
     21              NVIC_PriorityGroupConfig(NVIC_PriorityGroup_2);//0~2
   \        0x2   0xF44F 0x60A0      MOV      R0,#+1280
   \        0x6   0x....'....        BL       NVIC_PriorityGroupConfig
     22              
     23              /*TIM5*/
     24              NVIC_InitStructure.NVIC_IRQChannel = TIM5_IRQn;    
   \        0xA   0x2032             MOVS     R0,#+50
   \        0xC   0xF88D 0x0000      STRB     R0,[SP, #+0]
     25              NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 1;
   \       0x10   0x2001             MOVS     R0,#+1
   \       0x12   0xF88D 0x0001      STRB     R0,[SP, #+1]
     26              NVIC_InitStructure.NVIC_IRQChannelSubPriority = 0;
   \       0x16   0x2000             MOVS     R0,#+0
   \       0x18   0xF88D 0x0002      STRB     R0,[SP, #+2]
     27              NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;            
   \       0x1C   0x2001             MOVS     R0,#+1
   \       0x1E   0xF88D 0x0003      STRB     R0,[SP, #+3]
     28              NVIC_Init(&NVIC_InitStructure);
   \       0x22   0x4668             MOV      R0,SP
   \       0x24   0x....'....        BL       NVIC_Init
     29              
     30              /*DMA2_Stream7_IRQn Tx*/
     31              
     32              NVIC_InitStructure.NVIC_IRQChannel = DMA2_Stream7_IRQn;
   \       0x28   0x2046             MOVS     R0,#+70
   \       0x2A   0xF88D 0x0000      STRB     R0,[SP, #+0]
     33              NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority=2;
   \       0x2E   0x2002             MOVS     R0,#+2
   \       0x30   0xF88D 0x0001      STRB     R0,[SP, #+1]
     34              NVIC_InitStructure.NVIC_IRQChannelSubPriority = 2;
   \       0x34   0x2002             MOVS     R0,#+2
   \       0x36   0xF88D 0x0002      STRB     R0,[SP, #+2]
     35              NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
   \       0x3A   0x2001             MOVS     R0,#+1
   \       0x3C   0xF88D 0x0003      STRB     R0,[SP, #+3]
     36              NVIC_Init(&NVIC_InitStructure);
   \       0x40   0x4668             MOV      R0,SP
   \       0x42   0x....'....        BL       NVIC_Init
     37              
     38              /*DMA2_Stream1_IRQn Rx*/
     39              NVIC_InitStructure.NVIC_IRQChannel = DMA2_Stream1_IRQn;
   \       0x46   0x2039             MOVS     R0,#+57
   \       0x48   0xF88D 0x0000      STRB     R0,[SP, #+0]
     40              NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority=2;
   \       0x4C   0x2002             MOVS     R0,#+2
   \       0x4E   0xF88D 0x0001      STRB     R0,[SP, #+1]
     41              NVIC_InitStructure.NVIC_IRQChannelSubPriority = 2;		
   \       0x52   0x2002             MOVS     R0,#+2
   \       0x54   0xF88D 0x0002      STRB     R0,[SP, #+2]
     42              NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;			
   \       0x58   0x2001             MOVS     R0,#+1
   \       0x5A   0xF88D 0x0003      STRB     R0,[SP, #+3]
     43              NVIC_Init(&NVIC_InitStructure);
   \       0x5E   0x4668             MOV      R0,SP
   \       0x60   0x....'....        BL       NVIC_Init
     44              
     45              /*USART6_IRQn Rx*/
     46              NVIC_InitStructure.NVIC_IRQChannel = USART6_IRQn;
   \       0x64   0x2047             MOVS     R0,#+71
   \       0x66   0xF88D 0x0000      STRB     R0,[SP, #+0]
     47              NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority=2;
   \       0x6A   0x2002             MOVS     R0,#+2
   \       0x6C   0xF88D 0x0001      STRB     R0,[SP, #+1]
     48              NVIC_InitStructure.NVIC_IRQChannelSubPriority = 2;
   \       0x70   0x2002             MOVS     R0,#+2
   \       0x72   0xF88D 0x0002      STRB     R0,[SP, #+2]
     49              NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
   \       0x76   0x2001             MOVS     R0,#+1
   \       0x78   0xF88D 0x0003      STRB     R0,[SP, #+3]
     50              NVIC_Init(&NVIC_InitStructure);
   \       0x7C   0x4668             MOV      R0,SP
   \       0x7E   0x....'....        BL       NVIC_Init
     51          }
   \       0x82   0xBD01             POP      {R0,PC}          ;; return
     52          

   \                                 In section .text, align 2, keep-with-next
     53          void LED_On_Board(void){
   \                     LED_On_Board: (+1)
   \        0x0   0xB5E0             PUSH     {R5-R7,LR}
     54              GPIO_InitTypeDef GPIO_InitStructure;
     55              RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOB,ENABLE); //enable GPIOA clock   //
   \        0x2   0x2101             MOVS     R1,#+1
   \        0x4   0x2002             MOVS     R0,#+2
   \        0x6   0x....'....        BL       RCC_AHB1PeriphClockCmd
     56              GPIO_InitStructure.GPIO_Pin = GPIO_Pin_13;// | GPIO_Pin_14 | GPIO_Pin_15;
   \        0xA   0xF44F 0x5000      MOV      R0,#+8192
   \        0xE   0x9000             STR      R0,[SP, #+0]
     57              GPIO_InitStructure.GPIO_Mode = GPIO_Mode_OUT;
   \       0x10   0x2001             MOVS     R0,#+1
   \       0x12   0xF88D 0x0004      STRB     R0,[SP, #+4]
     58              GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
   \       0x16   0x2002             MOVS     R0,#+2
   \       0x18   0xF88D 0x0005      STRB     R0,[SP, #+5]
     59              GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
   \       0x1C   0x2000             MOVS     R0,#+0
   \       0x1E   0xF88D 0x0006      STRB     R0,[SP, #+6]
     60              GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL;
   \       0x22   0x2000             MOVS     R0,#+0
   \       0x24   0xF88D 0x0007      STRB     R0,[SP, #+7]
     61              GPIO_Init(GPIOB, &GPIO_InitStructure); //enable GPIOA clock   //
   \       0x28   0x4669             MOV      R1,SP
   \       0x2A   0x....             LDR.N    R0,??DataTable4_1  ;; 0x40020400
   \       0x2C   0x....'....        BL       GPIO_Init
     62              
     63              RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOD,ENABLE); //enable GPIOA clock   /1/
   \       0x30   0x2101             MOVS     R1,#+1
   \       0x32   0x2008             MOVS     R0,#+8
   \       0x34   0x....'....        BL       RCC_AHB1PeriphClockCmd
     64              GPIO_InitStructure.GPIO_Pin = GPIO_Pin_8 | GPIO_Pin_9;
   \       0x38   0xF44F 0x7040      MOV      R0,#+768
   \       0x3C   0x9000             STR      R0,[SP, #+0]
     65              GPIO_InitStructure.GPIO_Mode = GPIO_Mode_OUT;
   \       0x3E   0x2001             MOVS     R0,#+1
   \       0x40   0xF88D 0x0004      STRB     R0,[SP, #+4]
     66              GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
   \       0x44   0x2002             MOVS     R0,#+2
   \       0x46   0xF88D 0x0005      STRB     R0,[SP, #+5]
     67              GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
   \       0x4A   0x2000             MOVS     R0,#+0
   \       0x4C   0xF88D 0x0006      STRB     R0,[SP, #+6]
     68              GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL;
   \       0x50   0x2000             MOVS     R0,#+0
   \       0x52   0xF88D 0x0007      STRB     R0,[SP, #+7]
     69              GPIO_Init(GPIOD, &GPIO_InitStructure); //enable GPIOA clock
   \       0x56   0x4669             MOV      R1,SP
   \       0x58   0x....             LDR.N    R0,??DataTable4_2  ;; 0x40020c00
   \       0x5A   0x....'....        BL       GPIO_Init
     70          }
   \       0x5E   0xBD07             POP      {R0-R2,PC}       ;; return

   \                                 In section .text, align 2, keep-with-next
     71          void EXTI0_IRQHandler(void) {
   \                     EXTI0_IRQHandler: (+1)
   \        0x0   0xB580             PUSH     {R7,LR}
     72              /* Make sure that interrupt flag is set */
     73              if (EXTI_GetITStatus(EXTI_Line0) != RESET) {
   \        0x2   0x2001             MOVS     R0,#+1
   \        0x4   0x....'....        BL       EXTI_GetITStatus
   \        0x8   0x2800             CMP      R0,#+0
   \        0xA   0xD011             BEQ.N    ??EXTI0_IRQHandler_0
     74                  /* Do your stuff when PD0 is changed */
     75                  if (flag_stop){
   \        0xC   0x....             LDR.N    R1,??DataTable4_3
   \        0xE   0x6808             LDR      R0,[R1, #+0]
   \       0x10   0x2800             CMP      R0,#+0
   \       0x12   0xD005             BEQ.N    ??EXTI0_IRQHandler_1
     76                      flag_stop = 0;
   \       0x14   0x2000             MOVS     R0,#+0
   \       0x16   0x6008             STR      R0,[R1, #+0]
     77                      nvic_flag = 1;
   \       0x18   0x2001             MOVS     R0,#+1
   \       0x1A   0x....             LDR.N    R1,??DataTable4_4
   \       0x1C   0x6008             STR      R0,[R1, #+0]
   \       0x1E   0xE004             B.N      ??EXTI0_IRQHandler_2
     78                  }else{
     79                      flag_stop = 1;
   \                     ??EXTI0_IRQHandler_1: (+1)
   \       0x20   0x2001             MOVS     R0,#+1
   \       0x22   0x6008             STR      R0,[R1, #+0]
     80                      nvic_flag = 0;
   \       0x24   0x2000             MOVS     R0,#+0
   \       0x26   0x....             LDR.N    R1,??DataTable4_4
   \       0x28   0x6008             STR      R0,[R1, #+0]
     81                  }
     82                  /* Clear interrupt flag */
     83                  EXTI_ClearITPendingBit(EXTI_Line0);
   \                     ??EXTI0_IRQHandler_2: (+1)
   \       0x2A   0x2001             MOVS     R0,#+1
   \       0x2C   0x....'....        BL       EXTI_ClearITPendingBit
     84              }
     85          }
   \                     ??EXTI0_IRQHandler_0: (+1)
   \       0x30   0xBD01             POP      {R0,PC}          ;; return
     86          /* Configure pins to be interrupts */

   \                                 In section .text, align 2, keep-with-next
     87          void Configure_PA0(void) {
   \                     Configure_PA0: (+1)
   \        0x0   0xB500             PUSH     {LR}
   \        0x2   0xB085             SUB      SP,SP,#+20
     88              /* Set variables used */
     89              GPIO_InitTypeDef GPIO_InitStruct;
     90              EXTI_InitTypeDef EXTI_InitStruct;
     91              NVIC_InitTypeDef NVIC_InitStruct;
     92              
     93              /* Enable clock for GPIOD */
     94              RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOA, ENABLE);
   \        0x4   0x2101             MOVS     R1,#+1
   \        0x6   0x2001             MOVS     R0,#+1
   \        0x8   0x....'....        BL       RCC_AHB1PeriphClockCmd
     95              /* Enable clock for SYSCFG */
     96              RCC_APB2PeriphClockCmd(RCC_APB2Periph_SYSCFG, ENABLE);
   \        0xC   0x2101             MOVS     R1,#+1
   \        0xE   0xF44F 0x4080      MOV      R0,#+16384
   \       0x12   0x....'....        BL       RCC_APB2PeriphClockCmd
     97              
     98              /* Set pin as input */
     99              
    100              GPIO_InitStruct.GPIO_Pin = GPIO_Pin_0;
   \       0x16   0x2001             MOVS     R0,#+1
   \       0x18   0x9001             STR      R0,[SP, #+4]
    101              GPIO_InitStruct.GPIO_Mode = GPIO_Mode_IN;
   \       0x1A   0x2000             MOVS     R0,#+0
   \       0x1C   0xF88D 0x0008      STRB     R0,[SP, #+8]
    102              GPIO_InitStruct.GPIO_OType = GPIO_OType_PP;
   \       0x20   0x2000             MOVS     R0,#+0
   \       0x22   0xF88D 0x000A      STRB     R0,[SP, #+10]
    103              GPIO_InitStruct.GPIO_PuPd = GPIO_PuPd_DOWN;
   \       0x26   0x2002             MOVS     R0,#+2
   \       0x28   0xF88D 0x000B      STRB     R0,[SP, #+11]
    104              GPIO_InitStruct.GPIO_Speed = GPIO_Speed_100MHz;
   \       0x2C   0x2003             MOVS     R0,#+3
   \       0x2E   0xF88D 0x0009      STRB     R0,[SP, #+9]
    105              GPIO_Init(GPIOA, &GPIO_InitStruct);
   \       0x32   0xA901             ADD      R1,SP,#+4
   \       0x34   0x....             LDR.N    R0,??DataTable4_5  ;; 0x40020000
   \       0x36   0x....'....        BL       GPIO_Init
    106              
    107              /* Tell system that you will use PD0 for EXTI_Line0 */
    108              SYSCFG_EXTILineConfig(EXTI_PortSourceGPIOA, EXTI_PinSource0);
   \       0x3A   0x2100             MOVS     R1,#+0
   \       0x3C   0x2000             MOVS     R0,#+0
   \       0x3E   0x....'....        BL       SYSCFG_EXTILineConfig
    109              
    110              /* PD0 is connected to EXTI_Line0 */
    111              EXTI_InitStruct.EXTI_Line = EXTI_Line0;
   \       0x42   0x2001             MOVS     R0,#+1
   \       0x44   0x9003             STR      R0,[SP, #+12]
    112              /* Enable interrupt */
    113              EXTI_InitStruct.EXTI_LineCmd = ENABLE;
   \       0x46   0x2001             MOVS     R0,#+1
   \       0x48   0xF88D 0x0012      STRB     R0,[SP, #+18]
    114              /* Interrupt mode */
    115              EXTI_InitStruct.EXTI_Mode = EXTI_Mode_Interrupt;
   \       0x4C   0x2000             MOVS     R0,#+0
   \       0x4E   0xF88D 0x0010      STRB     R0,[SP, #+16]
    116              /* Triggers on rising and falling edge */
    117              EXTI_InitStruct.EXTI_Trigger = EXTI_Trigger_Falling;
   \       0x52   0x200C             MOVS     R0,#+12
   \       0x54   0xF88D 0x0011      STRB     R0,[SP, #+17]
    118              /* Add to EXTI */
    119              EXTI_Init(&EXTI_InitStruct);
   \       0x58   0xA803             ADD      R0,SP,#+12
   \       0x5A   0x....'....        BL       EXTI_Init
    120              
    121              /* Add IRQ vector to NVIC */
    122              /* PD0 is connected to EXTI_Line0, which has EXTI0_IRQn vector */
    123              NVIC_InitStruct.NVIC_IRQChannel = EXTI0_IRQn;
   \       0x5E   0x2006             MOVS     R0,#+6
   \       0x60   0xF88D 0x0000      STRB     R0,[SP, #+0]
    124              /* Set priority */
    125              NVIC_InitStruct.NVIC_IRQChannelPreemptionPriority = 0x00;
   \       0x64   0x2000             MOVS     R0,#+0
   \       0x66   0xF88D 0x0001      STRB     R0,[SP, #+1]
    126              /* Set sub priority */
    127              NVIC_InitStruct.NVIC_IRQChannelSubPriority = 0x00;
   \       0x6A   0x2000             MOVS     R0,#+0
   \       0x6C   0xF88D 0x0002      STRB     R0,[SP, #+2]
    128              /* Enable interrupt */
    129              NVIC_InitStruct.NVIC_IRQChannelCmd = ENABLE;
   \       0x70   0x2001             MOVS     R0,#+1
   \       0x72   0xF88D 0x0003      STRB     R0,[SP, #+3]
    130              /* Add to NVIC */
    131              NVIC_Init(&NVIC_InitStruct);
   \       0x76   0x4668             MOV      R0,SP
   \       0x78   0x....'....        BL       NVIC_Init
    132          }
   \       0x7C   0xB005             ADD      SP,SP,#+20
   \       0x7E   0xBD00             POP      {PC}             ;; return

   \                                 In section .bss, align 4
    133          int a,b,c;
   \                     a:
   \        0x0                      DS8 4

   \                                 In section .bss, align 4
   \                     `b`:
   \        0x0                      DS8 4

   \                                 In section .bss, align 4
   \                     c:
   \        0x0                      DS8 4
    134          

   \                                 In section .text, align 2, keep-with-next
    135          void main(void){
   \                     main: (+1)
   \        0x0   0xB580             PUSH     {R7,LR}
    136              systick_setup();
   \        0x2   0x....'....        BL       systick_setup
    137              
    138              TM2_PWM_Init();//servo
   \        0x6   0x....'....        BL       TM2_PWM_Init
    139              TIM2->CCR1=2000;//PA0
   \        0xA   0xF44F 0x60FA      MOV      R0,#+2000
   \        0xE   0x....             LDR.N    R1,??DataTable4_6  ;; 0x40000034
   \       0x10   0x6008             STR      R0,[R1, #+0]
    140              TIM2->CCR3=1700;//PB10
   \       0x12   0xF240 0x60A4      MOVW     R0,#+1700
   \       0x16   0x....             LDR.N    R1,??DataTable4_7  ;; 0x4000003c
   \       0x18   0x6008             STR      R0,[R1, #+0]
    141              TIM2->CCR4=1700;//PB11
   \       0x1A   0x....             LDR.N    R1,??DataTable4_8  ;; 0x40000040
   \       0x1C   0x6008             STR      R0,[R1, #+0]
    142              Delay(150);
   \       0x1E   0x2096             MOVS     R0,#+150
   \       0x20   0x....'....        BL       Delay
    143              
    144              TIM3_EncoderInterface_Init();//A
   \       0x24   0x....'....        BL       TIM3_EncoderInterface_Init
    145              TIM1_EncoderInterface_Init();//B
   \       0x28   0x....'....        BL       TIM1_EncoderInterface_Init
    146              TIM4_EncoderInterface_Init();//C
   \       0x2C   0x....'....        BL       TIM4_EncoderInterface_Init
    147              Delay(5);
   \       0x30   0x2005             MOVS     R0,#+5
   \       0x32   0x....'....        BL       Delay
    148              
    149              TM8_PWM_Init(); 
   \       0x36   0x....'....        BL       TM8_PWM_Init
    150              LED_On_Board();//A:B13,B:D8,C:D9
   \       0x3A   0x....'....        BL       LED_On_Board
    151              //
    152              IIC_GPIO_Init();
   \       0x3E   0x....'....        BL       IIC_GPIO_Init
    153              MPU6050_Init();
   \       0x42   0x....'....        BL       MPU6050_Init
    154              get_mpu_id();
   \       0x46   0x....'....        BL       get_mpu_id
    155              get_iir_factor(&Mpu.att_acc_factor,0.005f,25);
   \       0x4A   0x....             LDR.N    R2,??DataTable4_9  ;; 0x41c80000
   \       0x4C   0x....             LDR.N    R1,??DataTable4_10  ;; 0x3ba3d70a
   \       0x4E   0x....             LDR.N    R0,??DataTable4_11
   \       0x50   0x....'....        BL       get_iir_factor
    156              //  
    157              usart1_init(115200);
   \       0x54   0xF45F 0x30E1      MOVS     R0,#+115200
   \       0x58   0x....'....        BL       usart1_init
    158              nvic_flag = 0;
   \       0x5C   0x2000             MOVS     R0,#+0
   \       0x5E   0x....             LDR.N    R1,??DataTable4_4
   \       0x60   0x6008             STR      R0,[R1, #+0]
    159              flag_stop = 1;
   \       0x62   0x2001             MOVS     R0,#+1
   \       0x64   0x....             LDR.N    R1,??DataTable4_3
   \       0x66   0x6008             STR      R0,[R1, #+0]
    160              TM5_Interrupt_Init();
   \       0x68   0x....'....        BL       TM5_Interrupt_Init
    161              NVIC_Set();
   \       0x6C   0x....'....        BL       NVIC_Set
    162              //  
    163              Delay(1000);
   \       0x70   0xF44F 0x707A      MOV      R0,#+1000
   \       0x74   0x....'....        BL       Delay
    164              Configure_PA0();
   \       0x78   0x....'....        BL       Configure_PA0
    165              
    166          //    TIM8->CCR1 = 8999*0.4;//A PC6
    167          //    Delay(1000);
    168          //    TIM8->CCR2 = 8999*0.8;//B PC7
    169          //    Delay(1000);
    170          //    TIM8->CCR3 = 8999*0.4;//C PC8
    171              
    172              
    173              while(1){
   \                     ??main_0: (+1)
   \       0x7C   0xE7FE             B.N      ??main_0
    174                  //  printf("%d",usart1_read(a));
    175          //          GPIO_SetBits(GPIOB,GPIO_Pin_13);  //A
    176                  ////  GPIO_ResetBits(GPIOB,GPIO_Pin_13);
    177                  //  
    178          //          GPIO_SetBits(GPIOD,GPIO_Pin_8);  //B
    179          //          GPIO_ResetBits(GPIOD,GPIO_Pin_8);
    180                  //  
    181          //          GPIO_SetBits(GPIOD,GPIO_Pin_9);  //C
    182          //          GPIO_ResetBits(GPIOD,GPIO_Pin_9);
    183                  //  
    184                  //  TIM8->CCR1 = 5500;//A
    185                  //  TIM8->CCR2 = 5500;//B
    186                  //  TIM8->CCR3 = 5500;//C
    187                  ////  GPIO_SetBits(GPIOB,GPIO_Pin_13);
    188                  //  GPIO_ResetBits(GPIOB,GPIO_Pin_13);//A
    189                  //  
    190                  ////  GPIO_SetBits(GPIOD,GPIO_Pin_8);
    191                  //  GPIO_ResetBits(GPIOD,GPIO_Pin_8);//B
    192                  //  
    193                  ////  GPIO_SetBits(GPIOD,GPIO_Pin_9);
    194                  //  GPIO_ResetBits(GPIOD,GPIO_Pin_9);//C
    195                  //  
    196          //          TIM8->CCR1 = 10;//A
    197          //          TIM8->CCR2 = 10;//B
    198          //          TIM8->CCR3 = 10;//C
    199          //          Delay(100);
    200          //          TIM8->CCR1 = 0;//A
    201          //          TIM8->CCR2 = 0;//B
    202          //          TIM8->CCR3 = 0;//C
    203          //          Delay(1900);
    204          //          TIM8->CCR1 = 5500;//A
    205          //          TIM8->CCR2 = 5500;//B
    206          //          TIM8->CCR3 = 5500;//C
    207          //          Delay(2000);
    208                  //  
    209                  //  GPIO_SetBits(GPIOB,GPIO_Pin_13);//A
    210                  ////  GPIO_ResetBits(GPIOB,GPIO_Pin_13);
    211                  //  
    212                  //  GPIO_SetBits(GPIOD,GPIO_Pin_8);//B
    213                  ////  GPIO_ResetBits(GPIOD,GPIO_Pin_8);
    214                  //  
    215          //          GPIO_SetBits(GPIOD,GPIO_Pin_9);//C
    216                  ////  GPIO_ResetBits(GPIOD,GPIO_Pin_9);
    217                  //  TIM8->CCR1 = 10;//A
    218                  //  TIM8->CCR2 = 10;//B
    219                  //  TIM8->CCR3 = 10;//C
    220                  //  Delay(100);
    221                  //  TIM8->CCR1 = 0;//A
    222                  //  TIM8->CCR2 = 0;//B
    223                  //  TIM8->CCR3 = 0;//C
    224          //          Delay(1900);
    225                  
    226                  //    printf("%d",TIM12->CNT);
    227                  
    228                  //  TIM8->CCR1 = 1000;
    229                  //  TIM8->CCR2 = 1500;
    230                  //  TIM8->CCR3 = 2000;Delay(3000);
    231                  
    232                  
    233                  //  TIM8->CCR3=-800;Delay(3000);
    234                  //  
    235                  //    if(att.rol<-80){//jump up
    236                  ////      Delay(3000);
    237                  //////      nvic_flag = 0;
    238                  //////      PWM_a =0;
    239                  //////      set_pwm_a(PWM_a);
    240                  ////      TIM2->CCR1=1400;//1500;
    241                  //////      Delay(50);
    242                  //////      nvic_flag = 1;
    243                  ////      Delay(200);
    244                  ////      TIM2->CCR1=2000;
    245                  ////      Delay(200);
    246                  //    }else if(att.rol>-27){//jump up
    247                  //      Delay(3000);
    248                  ////      nvic_flag = 0;
    249                  ////      PWM_a =0;
    250                  ////      set_pwm_a(PWM_a);
    251                  //      TIM2->CCR1=1400;//1500;
    252                  ////      Delay(50);
    253                  ////      nvic_flag = 1;
    254                  //      Delay(200);
    255                  //      TIM2->CCR1=2000;
    256                  //      Delay(150);
    257                  //    }
    258              }
    259          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4:
   \        0x0   0x4000'0C00        DC32     0x40000c00

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_1:
   \        0x0   0x4002'0400        DC32     0x40020400

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_2:
   \        0x0   0x4002'0C00        DC32     0x40020c00

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_3:
   \        0x0   0x....'....        DC32     flag_stop

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_4:
   \        0x0   0x....'....        DC32     nvic_flag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_5:
   \        0x0   0x4002'0000        DC32     0x40020000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_6:
   \        0x0   0x4000'0034        DC32     0x40000034

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_7:
   \        0x0   0x4000'003C        DC32     0x4000003c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_8:
   \        0x0   0x4000'0040        DC32     0x40000040

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_9:
   \        0x0   0x41C8'0000        DC32     0x41c80000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_10:
   \        0x0   0x3BA3'D70A        DC32     0x3ba3d70a

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_11:
   \        0x0   0x....'....        DC32     Mpu+0x24

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      24   Configure_PA0
        24   -> EXTI_Init
        24   -> GPIO_Init
        24   -> NVIC_Init
        24   -> RCC_AHB1PeriphClockCmd
        24   -> RCC_APB2PeriphClockCmd
        24   -> SYSCFG_EXTILineConfig
       8   EXTI0_IRQHandler
         8   -> EXTI_ClearITPendingBit
         8   -> EXTI_GetITStatus
      16   LED_On_Board
        16   -> GPIO_Init
        16   -> RCC_AHB1PeriphClockCmd
       8   NVIC_Set
         8   -> NVIC_Init
         8   -> NVIC_PriorityGroupConfig
      24   TM5_Interrupt_Init
        24   -> RCC_APB1PeriphClockCmd
        24   -> TIM_ClearFlag
        24   -> TIM_Cmd
        24   -> TIM_ITConfig
        24   -> TIM_TimeBaseInit
       8   main
         8   -> Configure_PA0
         8   -> Delay
         8   -> IIC_GPIO_Init
         8   -> LED_On_Board
         8   -> MPU6050_Init
         8   -> NVIC_Set
         8   -> TIM1_EncoderInterface_Init
         8   -> TIM3_EncoderInterface_Init
         8   -> TIM4_EncoderInterface_Init
         8   -> TM2_PWM_Init
         8   -> TM5_Interrupt_Init
         8   -> TM8_PWM_Init
         8   -> get_iir_factor
         8   -> get_mpu_id
         8   -> systick_setup
         8   -> usart1_init


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable4
       4  ??DataTable4_1
       4  ??DataTable4_10
       4  ??DataTable4_11
       4  ??DataTable4_2
       4  ??DataTable4_3
       4  ??DataTable4_4
       4  ??DataTable4_5
       4  ??DataTable4_6
       4  ??DataTable4_7
       4  ??DataTable4_8
       4  ??DataTable4_9
     128  Configure_PA0
      50  EXTI0_IRQHandler
      96  LED_On_Board
     132  NVIC_Set
      78  TM5_Interrupt_Init
       4  a
       4  b
       4  c
     126  main

 
  12 bytes in section .bss
 658 bytes in section .text
 
 658 bytes of CODE memory
  12 bytes of DATA memory

Errors: none
Warnings: none
